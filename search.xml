<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Use Tensorflow in AI Studio</title>
      <link href="/2020/05/09/use-tensorflow-in-ai-studio/"/>
      <url>/2020/05/09/use-tensorflow-in-ai-studio/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/336485090" target="_blank" rel="noopener">How to install tensorflow-gpu in PaddlePaddle</a> </p><h2 id="Tensorflow-gpu-1-13-1"><a href="#Tensorflow-gpu-1-13-1" class="headerlink" title="Tensorflow-gpu 1.13.1"></a>Tensorflow-gpu 1.13.1</h2><p><img src="cuda-cudnn.png" alt> </p><h3 id="1-Install-cuda10-0"><a href="#1-Install-cuda10-0" class="headerlink" title="1. Install cuda10.0"></a>1. Install <a href="https://developer.nvidia.com/cuda-10.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=runfilelocal" target="_blank" rel="noopener">cuda10.0</a></h3><ul><li>Base Installer</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_410.48_linux</code></pre><ul><li>Patch</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://developer.download.nvidia.cn/compute/cuda/10.0/Prod/patches/1/cuda_10.0.130.1_linux.run</code></pre><ul><li>Install </li></ul><pre class=" language-bash"><code class="language-bash">sh cuda_10.0.130_410.48_linux --silent --toolkit --toolkitpath<span class="token operator">=</span><span class="token variable">$HOME</span>/cuda_10.0sh cuda_10.0.130.1_linux.run --silent --installdir<span class="token operator">=</span><span class="token variable">$HOME</span>/cuda_10.0 --accept-eula</code></pre><h3 id="2-cuDNN"><a href="#2-cuDNN" class="headerlink" title="2. cuDNN"></a>2. <a href="https://developer.nvidia.com/rdp/cudnn-archive" target="_blank" rel="noopener">cuDNN</a></h3><ul><li>Choose v7.4</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v7.4.2/prod/10.0_20181213/cudnn-10.0-linux-x64-v7.4.2.24.tgz</code></pre><ul><li>Next:</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">tar</span> -zxvf cudnn-10.0-linux-x64-v7.4.2.24.tgz<span class="token function">cp</span> cuda/include/cudnn.h cuda_10.0/include/<span class="token function">cp</span> cuda/lib64/libcudnn* cuda_10.0/lib64/</code></pre><ul><li>The following code are needed to run when you reboot your servers. We can write it into a shell file to autorun. </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> a+r cuda_10.0/include/cudnn.h<span class="token function">chmod</span> a+r cuda_10.0/lib64/libcudnn*</code></pre><ul><li>Then create a file named ‘environment’(whatever you like)</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token keyword">echo</span> -e <span class="token string">'export PATH=<span class="token variable">$HOME</span>/cuda_10.0/bin:<span class="token variable">$PATH</span>\nexport LD_LIBRARY_PATH=<span class="token variable">$LD_LIBRARY_PATH</span>:<span class="token variable">$HOME</span>/cuda_10.0/lib64'</span><span class="token operator">></span>~/environment</code></pre><h3 id="3-Install-Tensotflow-gpu"><a href="#3-Install-Tensotflow-gpu" class="headerlink" title="3. Install Tensotflow-gpu"></a>3. Install Tensotflow-gpu</h3><p>Use a persistence installation</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /home/aistudio/external-libraries</code></pre><p>Then:</p><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> tensorflow-gpu<span class="token operator">==</span>1.13.1 -t  /home/aistudio/external-libraries</code></pre><p>OR </p><p><a href="https://pypi.tuna.tsinghua.edu.cn/simple/tensorflow-gpu/" target="_blank" rel="noopener">tensorflow-gpu</a> </p><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://pypi.tuna.tsinghua.edu.cn/packages/2c/65/8dc8fc4a263a24f7ad935b72ad35e72ba381cb9e175b6a5fe086c85f17a7/tensorflow_gpu-1.13.1-cp37-cp37m-manylinux1_x86_64.whl<span class="token comment" spellcheck="true">#sha256=931c7d49b1757a0a6f3c577ab465cc53d0c4984ef766122f4f48159f5acdec81</span>pip <span class="token function">install</span> tensorflow_gpu-1.13.1-cp37-cp37m-manylinux1_x86_64.whl -t /home/aistudio/external-libraries</code></pre><h3 id="4-Autostart-shell"><a href="#4-Autostart-shell" class="headerlink" title="4. Autostart shell"></a>4. Autostart shell</h3><p>Create a file named <code>chmod_cuda100.sh</code></p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">chmod</span> a+r ~/cuda_10.0/include/cudnn.h<span class="token function">chmod</span> a+r ~/cuda_10.0/lib64/libcudnn*<span class="token function">source</span> ~/environment</code></pre><p>Every time the environment starts, just run the following code</p><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> chmod_cuda100.sh</code></pre><p>and before you use tendorflow, you should run:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> syssys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'/home/aistudio/external-libraries'</span><span class="token punctuation">)</span></code></pre><h3 id="5-Test"><a href="#5-Test" class="headerlink" title="5. Test"></a>5. Test</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tfsess <span class="token operator">=</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>a <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>b <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>Result: 3</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>client <span class="token keyword">import</span> device_lib local_device_protos <span class="token operator">=</span> device_lib<span class="token punctuation">.</span>list_local_devices<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">.</span>name <span class="token keyword">for</span> x <span class="token keyword">in</span> local_device_protos <span class="token keyword">if</span> x<span class="token punctuation">.</span>device_type <span class="token operator">==</span> <span class="token string">'GPU'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>Result: [‘/device:GPU:0’]</p><p><img src="GPU.png" alt> </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GPU </tag>
            
            <tag> Tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CLSW</title>
      <link href="/2020/04/22/clsw/"/>
      <url>/2020/04/22/clsw/</url>
      
        <content type="html"><![CDATA[<p><a href="https://godliuyang.wang/2019/08/24/manjaro-i3wm-huan-jing-pei-zhi-pian/#toc-heading-14" target="_blank" rel="noopener">Install and Configure guide</a> </p><p><a href="https://github.com/liuyaanng/CLSW" target="_blank" rel="noopener">My config</a> </p><h2 id="1-Vim-Neovim"><a href="#1-Vim-Neovim" class="headerlink" title="1. Vim(Neovim)"></a>1. Vim(Neovim)</h2><p><img src="vim_cheat_sheet.png" alt="vim cheat sheet"><br><img src="https://github.com/liuyaanng/CLSW/raw/master/nvim.png" alt="Vim"></p><h2 id="2-Ranger"><a href="#2-Ranger" class="headerlink" title="2. Ranger"></a>2. Ranger</h2><ul><li><p>If you want a tool to preview images or other file type can preview as images (pdf, videos), i recommended ueberzug , but note, you should use ranger-git by <code>yaourt -S ranger-git</code></p></li><li><p>If you are a Mac user, iterm2 is enough to preview images.</p></li></ul><p><img src="https://github.com/liuyaanng/CLSW/raw/master/ranger.png" alt="Ranger"> </p><h2 id="3-Fish"><a href="#3-Fish" class="headerlink" title="3. Fish"></a>3. Fish</h2><p><img src="https://github.com/liuyaanng/CLSW/raw/master/Fish.png" alt="Fish"> </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GPU servers</title>
      <link href="/2020/04/21/gpu-servers/"/>
      <url>/2020/04/21/gpu-servers/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我的任务是在GPU服务器上使用深度强化学习训练Amazing Brick，Amazing Brick使用Python的<a href="https://arcade.academy/index.html" target="_blank" rel="noopener">Arcade</a> 库来写的。    </p><p>我在考虑在GPU服务器上训练之前，没有注意到Arcade是使用<strong>OpenGL</strong> 和<strong>Pyglet</strong> 来进行渲染的</p><p><img src="ArcadeVSPygame.png" alt="Arcade VS Pygame"></p><p>而服务器大多都以ssh登陆，而OpenGL就更不要说了，所以在我寻找服务器和准备环境的过程中就遇到了很多问题，这个在下面会说到。</p><h2 id="GPU-servers"><a href="#GPU-servers" class="headerlink" title="GPU servers"></a>GPU servers</h2><p>  <a href="https://www.zhihu.com/question/51707286" target="_blank" rel="noopener">知乎:目前哪里可以租用到GPU服务器？</a> </p><hr><ul><li><a href="https://aistudio.baidu.com/aistudio/index" target="_blank" rel="noopener">AI Studio</a></li></ul><p>非常良心，用算力可以获得算力，不怕你用，用得多送的多。<br>这里有一位同学写的攻略<a href="https://zhuanlan.zhihu.com/p/73361554?utm_source=wechat_session&utm_medium=social&utm_oi=28323023421440" target="_blank" rel="noopener">薅薅国产免费GPU计算资源</a><br>登陆方式有 <strong>notebook</strong> ,可使用 <strong>Terminal</strong> ,但没有root权限，这就意味着有很多限制，最重要的是预装框架为 <strong>PaddlePaddle</strong> .  不能用 <code>TensorFlow</code>, 总不能为了嫖GPU服务器再去学一种框架吧，别担心, 这里有<a href="https://www.zhihu.com/question/336485090" target="_blank" rel="noopener">百度paddlepaddle平台如何配置tensorflow-gpu</a>. 这个我没有尝试，有兴趣的可以尝试一下（有空了我会来填这个坑）</p><ul><li><a href="https://www.easyaiforum.cn/" target="_blank" rel="noopener">易学智能</a> </li></ul><p>我现在使用的就是这个</p><p>感谢<a href="https://www.paratera.com/liveInterface.html" target="_blank" rel="noopener">并行超算</a> 给我提供的50算力的试用，我就是靠着这50算力把环境给搭明白了哈哈哈。</p><ul><li>…</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="1-Ubuntu"><a href="#1-Ubuntu" class="headerlink" title="1. Ubuntu"></a>1. Ubuntu</h3><p>GPU 配置可根据自己的需要调整<br>我选择的是：</p><pre><code>OS: UbuntuGPU: RTX 2080TICPU: E5 4COREMEMARY: 15GENVIROMENT: Python 3.6 + TF 2.0</code></pre><p>这里的环境使开箱即用的，不需要激活</p><ol><li>基本包安装</li></ol><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> arcade dataclasses scikit-image</code></pre><ol start="2"><li>测试arcade环境</li></ol><ul><li>Arcade 官方的一个小demo</li></ul><pre class=" language-python"><code class="language-python"><span class="token triple-quoted-string string">"""Drawing an example happy faceIf Python and Arcade are installed, this example can be run from the command line with:python -m arcade.examples.happy_face"""</span><span class="token keyword">import</span> arcade<span class="token comment" spellcheck="true"># Set constants for the screen size</span>SCREEN_WIDTH <span class="token operator">=</span> <span class="token number">600</span>SCREEN_HEIGHT <span class="token operator">=</span> <span class="token number">600</span>SCREEN_TITLE <span class="token operator">=</span> <span class="token string">"Happy Face Example"</span><span class="token comment" spellcheck="true"># Open the window. Set the window title and dimensions</span>arcade<span class="token punctuation">.</span>open_window<span class="token punctuation">(</span>SCREEN_WIDTH<span class="token punctuation">,</span> SCREEN_HEIGHT<span class="token punctuation">,</span> SCREEN_TITLE<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Set the background color</span>arcade<span class="token punctuation">.</span>set_background_color<span class="token punctuation">(</span>arcade<span class="token punctuation">.</span>color<span class="token punctuation">.</span>WHITE<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Clear screen and start render process</span>arcade<span class="token punctuation">.</span>start_render<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># --- Drawing Commands Will Go Here ---</span><span class="token comment" spellcheck="true"># Draw the face</span>x <span class="token operator">=</span> <span class="token number">300</span>y <span class="token operator">=</span> <span class="token number">300</span>radius <span class="token operator">=</span> <span class="token number">200</span>arcade<span class="token punctuation">.</span>draw_circle_filled<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> arcade<span class="token punctuation">.</span>color<span class="token punctuation">.</span>YELLOW<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Draw the right eye</span>x <span class="token operator">=</span> <span class="token number">370</span>y <span class="token operator">=</span> <span class="token number">350</span>radius <span class="token operator">=</span> <span class="token number">20</span>arcade<span class="token punctuation">.</span>draw_circle_filled<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> arcade<span class="token punctuation">.</span>color<span class="token punctuation">.</span>BLACK<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Draw the left eye</span>x <span class="token operator">=</span> <span class="token number">230</span>y <span class="token operator">=</span> <span class="token number">350</span>radius <span class="token operator">=</span> <span class="token number">20</span>arcade<span class="token punctuation">.</span>draw_circle_filled<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> arcade<span class="token punctuation">.</span>color<span class="token punctuation">.</span>BLACK<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Draw the smile</span>x <span class="token operator">=</span> <span class="token number">300</span>y <span class="token operator">=</span> <span class="token number">280</span>width <span class="token operator">=</span> <span class="token number">120</span>height <span class="token operator">=</span> <span class="token number">100</span>start_angle <span class="token operator">=</span> <span class="token number">190</span>end_angle <span class="token operator">=</span> <span class="token number">350</span>arcade<span class="token punctuation">.</span>draw_arc_outline<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> arcade<span class="token punctuation">.</span>color<span class="token punctuation">.</span>BLACK<span class="token punctuation">,</span>                        start_angle<span class="token punctuation">,</span> end_angle<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Finish drawing and display the result</span>arcade<span class="token punctuation">.</span>finish_render<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Keep the window open until the user hits the 'close' button</span>arcade<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ul><li><p>-&gt;运行发现报错：<code>ImportError: Library “GLU” not found</code></p><p>解决办法：<a href="https://stackoverflow.com/questions/50446867/importerror-library-glu-not-found" target="_blank" rel="noopener"><code>sudo apt-get install freeglut3-dev</code></a> </p></li><li><p>-&gt;再次运行报错：<code>pyglet.canvas.xlib.NoSuchDisplayException: Cannot connect to &quot;None&quot;</code></p><p>原因大概是arcade调用<code>pyglet</code>绘制窗口需要图形界面（就是弹出来的那个框框），而当你使用ssh连接server时是没有图形界面的。<br>因此我们需要一个虚拟的图形界面，而<a href="https://linux.die.net/man/1/xvfb" target="_blank" rel="noopener"><code>xvfb-run</code></a>就是一个提供虚拟图形界面的工具。<br>这里有一篇文章是介绍如何使用<code>xvfb</code>来创建一个虚拟桌面来进行服务器端的图形测试的。</p><p><a href="http://elementalselenium.com/tips/38-headless" target="_blank" rel="noopener">How To Run Your Tests Headlessly with Xvfb</a></p><p>安装<code>xvfb</code>之前要先更新一下 <code>sudo apt update</code>, 如果遇到密钥不可用可以<code>sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 密钥</code></p></li><li><p>-&gt;使用<code>xvfb-run -a python xxx.py</code> 来继续测试报错：<code>arcade.application.NoOpenGLException:  Unable to create an OpenGL 3.3+ context. Check to make sure your system supports OpenGL 3.3 or higher.</code>     </p><p>意思是OpenCV版本太低</p></li><li><p>接下来查看服务器端的OpenGL版本，使用<code>glxinfo | grep &quot;OpenGL&quot;</code></p><p><img src="opencv_version.png" alt="opencv_version"> </p><p>还是没有图形界面的问题，继续使用<code>xvfb-run -a glxinfo | grep &quot;OpenGL&quot;</code></p><p><img src="opencv_version2.png" alt="opencv_version"> </p><p>显示OpenGL的版本为3.1, 依旧无法满足arcade需要的OpenGL3+。</p></li><li><p>会不会是由于服务端原机器上的低版本OpenGL造成<code>xvfb</code>虚拟后的OpenCV版本较低？</p><p>我在本地的Ubuntu系统上分别运行<code>glxinfo | grep &quot;OpenGL&quot;</code>, 发现原机器版本为4.6，但<code>xvfb</code>虚拟后的版本为3.1，推测为<code>Xvfb</code>虚拟图形界面的原因。</p><p><img src="glxinfo.png" alt></p><p>此问题没有找到解决办法</p></li><li><p>⚠️ 如果你是一个<code>pygame</code>用户，或者你对OpenGL的版本要求不高（3.1），你完全可以使用<code>xvfb-run</code>来进行要求图形化的测试。经测试，pygame在GPU服务器上可以运行。</p></li></ul><p>既然Ubuntu无法完成我的工作，故我开始使用Windows</p><h3 id="2-Windows-10"><a href="#2-Windows-10" class="headerlink" title="2. Windows 10"></a>2. Windows 10</h3><p>系统配置</p><pre><code>OS: Windows 10GPU: RTX 2080TICPU: I5</code></pre><ul><li>进入系统要先激活环境,详细信息见<a href="https://www.easyaiforum.cn/helpDocument?manual_id=136" target="_blank" rel="noopener">帮助文档</a> </li></ul><pre class=" language-bash"><code class="language-bash">conda activate py36h</code></pre><ul><li><p>安装基本包和Ubuntu一样，测试的时候发现依旧存在<code>OpenGL</code>的问题,查看OpenGL版本为1.1</p><p>这里给几个查看OpenGL的工具：</p><ul><li>GPU_Caps_Viewer: 链接: <a href="https://pan.baidu.com/s/1_YisKqKJY_2Uml2MQXKnNQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1_YisKqKJY_2Uml2MQXKnNQ</a> 提取码: use7</li><li>GLViewer: 链接: <a href="https://pan.baidu.com/s/1G2GR5S9oSqatMmBqv5YLdA" target="_blank" rel="noopener">https://pan.baidu.com/s/1G2GR5S9oSqatMmBqv5YLdA</a> 提取码: 27s2</li></ul></li><li><p>更新OpenGL</p><p>更新显卡驱动即可: <a href="https://www.nvidia.com/Download/index.aspx#" target="_blank" rel="noopener">NVIDIA Driver Downloads</a> , 下载对应版本的驱动安装。</p><p>我在网上找到很多说用 驱动精灵， 鲁大师等软件更新驱动，我试了一下，完全不起作用。官网驱动亲测可行，就是有点耗时间。</p></li><li><p>更新完OpenGL之后代码就可以快乐地训练啦</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deep Learning </tag>
            
            <tag> GPU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scikit-image guide</title>
      <link href="/2020/03/30/scikit-image-guide/"/>
      <url>/2020/03/30/scikit-image-guide/</url>
      
        <content type="html"><![CDATA[<h1 id="Python的数字图片处理包。比如-PIL-pillow-opencv-scikit-image"><a href="#Python的数字图片处理包。比如-PIL-pillow-opencv-scikit-image" class="headerlink" title="Python的数字图片处理包。比如 PIL, pillow, opencv, scikit-image"></a>Python的数字图片处理包。比如 PIL, pillow, opencv, scikit-image</h1><p>PIL和pillow只提供最基础的数字图像处理，功能有限；opencv实际上是一个c++库，只提供了python借口，更新速度非常慢。scikit-image是基于scipy的一款图像处理包，它将图片作为numpy数组进行处理，与matlab一样，所以我选择了是scikit-image进行图像处理</p><h2 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h2><pre class=" language-bash"><code class="language-bash">conda <span class="token function">install</span> -c conda-forge scikit-image</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas 基础</title>
      <link href="/2020/03/17/pandas-ji-chu/"/>
      <url>/2020/03/17/pandas-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="Pandas-基础"><a href="#Pandas-基础" class="headerlink" title="Pandas 基础"></a>Pandas 基础</h2><p>参考：<a href="https://pandas.pydata.org/docs/getting_started/10min.html#min" target="_blank" rel="noopener">10min 入门Pandas</a> </p><p>导入：</p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> numpy <span class="token keyword">as</span> npIn <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</code></pre><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><h4 id="1-创建一个Series通过传递值的列表"><a href="#1-创建一个Series通过传递值的列表" class="headerlink" title="1. 创建一个Series通过传递值的列表"></a>1. 创建一个<code>Series</code>通过传递值的列表</h4><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> sOut<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">0</span>    <span class="token number">1.0</span><span class="token number">1</span>    <span class="token number">2.0</span><span class="token number">2</span>    <span class="token number">3.0</span><span class="token number">3</span>    NaN<span class="token number">4</span>    <span class="token number">4.0</span><span class="token number">5</span>    <span class="token number">5.0</span>dtype<span class="token punctuation">:</span> float64</code></pre><h5 id="2-DataFrame"><a href="#2-DataFrame" class="headerlink" title="2. DataFrame"></a>2. DataFrame</h5><ul><li>通过传递带有日期时间的索引和带标签的列的numpy数组来创建</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dates <span class="token operator">=</span> pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span><span class="token string">'20200101'</span><span class="token punctuation">,</span> periods <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> datesOut<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span>DatetimeIndex<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'2020-01-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-02'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-03'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-04'</span><span class="token punctuation">,</span>               <span class="token string">'2020-01-05'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-06'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              dtype<span class="token operator">=</span><span class="token string">'datetime64[ns]'</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> index <span class="token operator">=</span> dates<span class="token punctuation">,</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>  columns <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token string">'ABCD'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dfOut<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                  A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.009355</span> <span class="token operator">-</span><span class="token number">0.491184</span>  <span class="token number">0.908148</span>  <span class="token number">0.021897</span></code></pre><ul><li>通过传递对象的字典来创建，这些对象可以转化为类似序列的对象</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dff <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'A'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                     <span class="token string">'B'</span><span class="token punctuation">:</span>pd<span class="token punctuation">.</span>Timestamp<span class="token punctuation">(</span><span class="token string">'20200303'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                     <span class="token string">'C'</span><span class="token punctuation">:</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token keyword">in</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> t32<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                     <span class="token string">'D'</span><span class="token punctuation">:</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> index<span class="token operator">=</span>list<span class="token punctuation">(</span>range    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype <span class="token operator">=</span> <span class="token string">'float32'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                     <span class="token string">'E'</span><span class="token punctuation">:</span>pd<span class="token punctuation">.</span>Categorical<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"test"</span><span class="token punctuation">,</span>"train    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span> <span class="token string">","</span>test<span class="token string">","</span>train"<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>                     <span class="token string">'F'</span><span class="token punctuation">:</span><span class="token string">'foo'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">:</span>In <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dffOut<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   A          B  C    D      E    F<span class="token number">0</span>  <span class="token number">1</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">03</span>  <span class="token number">3</span>  <span class="token number">1.0</span>   test  foo<span class="token number">1</span>  <span class="token number">1</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">03</span>  <span class="token number">3</span>  <span class="token number">1.0</span>  train  foo<span class="token number">2</span>  <span class="token number">1</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">03</span>  <span class="token number">3</span>  <span class="token number">1.0</span>   test  foo<span class="token number">3</span>  <span class="token number">1</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">03</span>  <span class="token number">3</span>  <span class="token number">1.0</span>  train  foo</code></pre><p>结果的列具有不同的<code>dtype</code></p><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dff<span class="token punctuation">.</span>dtypesOut<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span>A             int64B    datetime64<span class="token punctuation">[</span>ns<span class="token punctuation">]</span>C             int32D           float32E          categoryF            objectdtype<span class="token punctuation">:</span> object</code></pre><h3 id="2-查看数据"><a href="#2-查看数据" class="headerlink" title="2. 查看数据"></a>2. 查看数据</h3><ul><li>查看顶部和底部行</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                  A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span>In <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.009355</span> <span class="token operator">-</span><span class="token number">0.491184</span>  <span class="token number">0.908148</span>  <span class="token number">0.021897</span></code></pre><ul><li>查看索引和列</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>indexOut<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span>DatetimeIndex<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'2020-01-01'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-02'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-03'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-04'</span><span class="token punctuation">,</span>               <span class="token string">'2020-01-05'</span><span class="token punctuation">,</span> <span class="token string">'2020-01-06'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              dtype<span class="token operator">=</span><span class="token string">'datetime64[ns]'</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">)</span>In <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>columnsOut<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Index<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'object'</span><span class="token punctuation">)</span></code></pre><ul><li><code>DataFrame.to_numpy</code>给出基础数据的Numpy形式</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>to_numpy<span class="token punctuation">(</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.32571443</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.48599075</span><span class="token punctuation">,</span>  <span class="token number">1.42516446</span><span class="token punctuation">,</span>  <span class="token number">0.11194363</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">0.51837887</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.08638321</span><span class="token punctuation">,</span>  <span class="token number">0.22993722</span><span class="token punctuation">,</span>  <span class="token number">0.11209583</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.50818274</span><span class="token punctuation">,</span>  <span class="token number">0.46678885</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.33046943</span><span class="token punctuation">,</span>  <span class="token number">0.53438102</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.69844816</span><span class="token punctuation">,</span>  <span class="token number">0.0925617</span> <span class="token punctuation">,</span>  <span class="token number">0.56368756</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.58779561</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">1.10430711</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.46950994</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.36410571</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2.16535338</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.00935469</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.49118366</span><span class="token punctuation">,</span>  <span class="token number">0.90814807</span><span class="token punctuation">,</span>  <span class="token number">0.02189745</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>注意： <code>DataFrame.to_numpy()</code>在输出中不包括索引或标签</p><ul><li><code>describe()</code>显示数据的快速统计摘要</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span>              A         B         C         Dcount  <span class="token number">6.000000</span>  <span class="token number">6.000000</span>  <span class="token number">6.000000</span>  <span class="token number">6.000000</span>mean  <span class="token operator">-</span><span class="token number">0.319836</span> <span class="token operator">-</span><span class="token number">0.495620</span>  <span class="token number">0.072060</span> <span class="token operator">-</span><span class="token number">0.328805</span>std    <span class="token number">1.074711</span>  <span class="token number">0.716905</span>  <span class="token number">1.168436</span>  <span class="token number">0.969198</span>min   <span class="token operator">-</span><span class="token number">1.698448</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span><span class="token number">25</span><span class="token operator">%</span>   <span class="token operator">-</span><span class="token number">1.121332</span> <span class="token operator">-</span><span class="token number">0.937583</span> <span class="token operator">-</span><span class="token number">0.940368</span> <span class="token operator">-</span><span class="token number">0.435372</span><span class="token number">50</span><span class="token operator">%</span>   <span class="token operator">-</span><span class="token number">0.258769</span> <span class="token operator">-</span><span class="token number">0.488587</span>  <span class="token number">0.396812</span>  <span class="token number">0.066921</span><span class="token number">75</span><span class="token operator">%</span>    <span class="token number">0.386445</span> <span class="token operator">-</span><span class="token number">0.052076</span>  <span class="token number">0.822033</span>  <span class="token number">0.112058</span>max    <span class="token number">1.104307</span>  <span class="token number">0.466789</span>  <span class="token number">1.425164</span>  <span class="token number">0.534381</span></code></pre><ul><li>转置数据</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>TOut<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span>A   <span class="token operator">-</span><span class="token number">1.325714</span>    <span class="token number">0.518379</span>   <span class="token operator">-</span><span class="token number">0.508183</span>   <span class="token operator">-</span><span class="token number">1.698448</span>    <span class="token number">1.104307</span>   <span class="token operator">-</span><span class="token number">0.009355</span>B   <span class="token operator">-</span><span class="token number">0.485991</span>   <span class="token operator">-</span><span class="token number">1.086383</span>    <span class="token number">0.466789</span>    <span class="token number">0.092562</span>   <span class="token operator">-</span><span class="token number">1.469510</span>   <span class="token operator">-</span><span class="token number">0.491184</span>C    <span class="token number">1.425164</span>    <span class="token number">0.229937</span>   <span class="token operator">-</span><span class="token number">1.330469</span>    <span class="token number">0.563688</span>   <span class="token operator">-</span><span class="token number">1.364106</span>    <span class="token number">0.908148</span>D    <span class="token number">0.111944</span>    <span class="token number">0.112096</span>    <span class="token number">0.534381</span>   <span class="token operator">-</span><span class="token number">0.587796</span>   <span class="token operator">-</span><span class="token number">2.165353</span>    <span class="token number">0.021897</span></code></pre><ul><li>按轴排序</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> ascending <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   D         C         B         A<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">0.111944</span>  <span class="token number">1.425164</span> <span class="token operator">-</span><span class="token number">0.485991</span> <span class="token operator">-</span><span class="token number">1.325714</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.112096</span>  <span class="token number">0.229937</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.518379</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span>  <span class="token number">0.534381</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">0.508183</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">0.587796</span>  <span class="token number">0.563688</span>  <span class="token number">0.092562</span> <span class="token operator">-</span><span class="token number">1.698448</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">-</span><span class="token number">2.165353</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">1.469510</span>  <span class="token number">1.104307</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span>  <span class="token number">0.021897</span>  <span class="token number">0.908148</span> <span class="token operator">-</span><span class="token number">0.491184</span> <span class="token operator">-</span><span class="token number">0.009355</span>In <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> ascending <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.009355</span> <span class="token operator">-</span><span class="token number">0.491184</span>  <span class="token number">0.908148</span>  <span class="token number">0.021897</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span></code></pre><p><code>axis = 1</code> 表示行<br><code>axis = 0</code> 表示列<br><code>ascending</code>默认为<code>True</code>,表示升序</p><ul><li>按值排序</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'B'</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.009355</span> <span class="token operator">-</span><span class="token number">0.491184</span>  <span class="token number">0.908148</span>  <span class="token number">0.021897</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span></code></pre><h3 id="3-数据选择"><a href="#3-数据选择" class="headerlink" title="3. 数据选择"></a>3. 数据选择</h3><h4 id="1-一般选择"><a href="#1-一般选择" class="headerlink" title="1. 一般选择"></a>1. 一般选择</h4><ul><li>选择一个单列，产生一个<code>Series</code>,相当于<code>df.A</code></li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>   <span class="token operator">-</span><span class="token number">1.325714</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>    <span class="token number">0.518379</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span>   <span class="token operator">-</span><span class="token number">0.508183</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span>   <span class="token operator">-</span><span class="token number">1.698448</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>    <span class="token number">1.104307</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span>   <span class="token operator">-</span><span class="token number">0.009355</span>Freq<span class="token punctuation">:</span> D<span class="token punctuation">,</span> Name<span class="token punctuation">:</span> A<span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> float64</code></pre><ul><li>对行进行切片</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span>In <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">[</span><span class="token string">'20200101'</span><span class="token punctuation">:</span><span class="token string">'20200105'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span></code></pre><h4 id="2-通过标签选择"><a href="#2-通过标签选择" class="headerlink" title="2. 通过标签选择"></a>2. 通过标签选择</h4><ul><li>使用标签获取横截面</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>dates<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">:</span>A    <span class="token number">0.518379</span>B   <span class="token operator">-</span><span class="token number">1.086383</span>C    <span class="token number">0.229937</span>D    <span class="token number">0.112096</span>Name<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> float64</code></pre><ul><li>通过标签在多个轴上选择</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         C<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span>  <span class="token number">1.425164</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span>  <span class="token number">0.229937</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span> <span class="token operator">-</span><span class="token number">1.330469</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.563688</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.364106</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.009355</span>  <span class="token number">0.908148</span>In <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">:</span><span class="token string">'C'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span>  <span class="token number">1.425164</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span>  <span class="token number">0.563688</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span> <span class="token operator">-</span><span class="token number">1.364106</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span> <span class="token operator">-</span><span class="token number">0.009355</span> <span class="token operator">-</span><span class="token number">0.491184</span>  <span class="token number">0.908148</span></code></pre><ul><li>显示标签切片，两个端点都包括在内</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20200101'</span><span class="token punctuation">:</span><span class="token string">'20200104'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">-</span><span class="token number">1.325714</span> <span class="token operator">-</span><span class="token number">0.485991</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span></code></pre><ul><li>减小返回对象的尺寸</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20200101'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span>A   <span class="token operator">-</span><span class="token number">1.325714</span>B   <span class="token operator">-</span><span class="token number">0.485991</span>Name<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> float64</code></pre><ul><li>获取标量值</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.3257144329922794</span></code></pre><ul><li>快速访问标量</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>at<span class="token punctuation">[</span>dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.3257144329922794</span></code></pre><h4 id="3-通过位置选择"><a href="#3-通过位置选择" class="headerlink" title="3. 通过位置选择"></a>3. 通过位置选择</h4><ul><li>通过传递的整数的位置进行选择</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">:</span>A   <span class="token operator">-</span><span class="token number">1.698448</span>B    <span class="token number">0.092562</span>C    <span class="token number">0.563688</span>D   <span class="token operator">-</span><span class="token number">0.587796</span>Name<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">:</span><span class="token number">00</span><span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> float64</code></pre><ul><li>通过整数切片</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.092562</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span>  <span class="token number">1.104307</span> <span class="token operator">-</span><span class="token number">1.469510</span></code></pre><ul><li>通过整数位置列表</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         C<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span>  <span class="token number">0.229937</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span> <span class="token operator">-</span><span class="token number">1.330469</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span> <span class="token operator">-</span><span class="token number">1.698448</span>  <span class="token number">0.563688</span></code></pre><ul><li>显式切片行</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   A         B         C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.518379</span> <span class="token operator">-</span><span class="token number">1.086383</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">0.508183</span>  <span class="token number">0.466789</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span></code></pre><ul><li>显式切片列</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                   C         D<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span>  <span class="token number">1.425164</span>  <span class="token number">0.111944</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">02</span>  <span class="token number">0.229937</span>  <span class="token number">0.112096</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">-</span><span class="token number">1.330469</span>  <span class="token number">0.534381</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">04</span>  <span class="token number">0.563688</span> <span class="token operator">-</span><span class="token number">0.587796</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">-</span><span class="token number">1.364106</span> <span class="token operator">-</span><span class="token number">2.165353</span><span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">06</span>  <span class="token number">0.908148</span>  <span class="token number">0.021897</span></code></pre><ul><li>显式地获取值</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.0863832145090018</span></code></pre><ul><li>快速访问标量</li></ul><pre class=" language-python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">46</span><span class="token punctuation">]</span><span class="token punctuation">:</span> df<span class="token punctuation">.</span>iat<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>Out<span class="token punctuation">[</span><span class="token number">46</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1.0863832145090018</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Numpy 基础</title>
      <link href="/2020/03/14/numpy-ji-chu/"/>
      <url>/2020/03/14/numpy-ji-chu/</url>
      
        <content type="html"><![CDATA[<h3 id="参考Numpy"><a href="#参考Numpy" class="headerlink" title="参考Numpy"></a>参考<a href="https://www.numpy.org.cn/user/quickstart.html" target="_blank" rel="noopener">Numpy</a></h3><p>个人仓库：<a href="https://github.com/liuyaanng/Numpy-Pandas" target="_blank" rel="noopener">Numpy &amp; Pandas</a> </p><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>注意Numpy的主要对象是<strong>同构多维数组</strong>, 在Numpy中维度成为<strong>轴</strong></p><p>Numpy的数组类是<code>ndarray</code>, <code>ndarray</code>的属性有：</p><ul><li><strong>ndarray.ndim</strong> - 数组轴的个数。</li><li><strong>ndarray.shape</strong> - 数组的维度。 <code>shape</code>的长度就是维度的个数<code>ndim</code></li><li><strong>ndarray.size</strong> - 数组元素的总数</li><li><strong>ndarray.dataType</strong> - 数组中元素类型</li><li><strong>ndarray.itemSize</strong> - 数组中每个元素的字节大小</li><li><strong>ndarray.dataType</strong> - 该缓冲区包含数组的实际元素。通常不使用该属性，而使用索引访问数组中的元素</li></ul><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><ul><li>使用<code>array</code>直接从python列表或元组中创建数组</li></ul><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p><code>array</code>还可以将序列的序列转化为二维数组，将序列的序列的序列转化为三维数组</p><pre class=" language-python"><code class="language-python">b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>也可以在创建数组的时候显示的指定数组的类型</p><pre class=" language-python"><code class="language-python">c <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> complex<span class="token punctuation">)</span></code></pre><ul><li><p>创建具有初始站位符的数组</p><ul><li><code>zeros</code>创建一个由0组成的数组</li><li><code>ones</code>创建一个完整的数组</li><li><code>empty</code>创建一个内容随机的数组，内容取决于内存的状态</li></ul><p>默认情况下创建的数组类型为<code>float64</code></p><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>创建数字组成的数组: <code>arange</code></p></li></ul><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></code></pre><p>当<code>arange</code>与浮点参数一起使用时，由于浮点数精度的限制，通常不能直接预测所获得元素的数量，故若需要通常使用<code>linspace</code>函数来接受想要元素数量的函数</p><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span></code></pre><h3 id="打印数组"><a href="#打印数组" class="headerlink" title="打印数组"></a>打印数组</h3><p>注意以下布局规则：</p><ul><li>最后一个轴从左到右打印</li><li>倒数第二个从上到下打印</li><li>其余部分也从上到下打印，每个切片用空行分隔</li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>   <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>   <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> c <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span>     <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span>     <span class="token punctuation">[</span><span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span><span class="token punctuation">]</span>     <span class="token punctuation">[</span><span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>   <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">24</span> <span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span><span class="token punctuation">]</span>     <span class="token punctuation">[</span><span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">32</span> <span class="token number">33</span> <span class="token number">34</span> <span class="token number">35</span><span class="token punctuation">]</span>     <span class="token punctuation">[</span><span class="token number">36</span> <span class="token number">37</span> <span class="token number">38</span> <span class="token number">39</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">40</span> <span class="token number">41</span> <span class="token number">42</span> <span class="token number">43</span><span class="token punctuation">]</span>     <span class="token punctuation">[</span><span class="token number">44</span> <span class="token number">45</span> <span class="token number">46</span> <span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> </code></pre><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul><li><p>数组上的算数运算符会应用到元素级别</p></li><li><p>乘积运算符<code>*</code>在Numpy数组中是按元素进行运算。<br>矩阵乘积用<code>@</code>运算符或<code>dot</code>函数或方法执行</p></li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> B <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> A<span class="token operator">*</span>Barray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> A@Barray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> A<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>B<span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><ul><li>某些操作（<code>+=</code> 和 <code>*=</code>）会直接更改被操作的矩阵数组</li><li>当使用不同类型的数组进行操作时，结果数组的类型对应于更一般或更精确的数组（称为向上转换的行为）</li><li>通过<code>axis</code>参数，可以沿数组的指定轴应用操作, <code>axis</code>参数从0开始</li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h3 id="通函数"><a href="#通函数" class="headerlink" title="通函数"></a>通函数</h3><p>在Numpy中，通函数（<code>ufunc</code>）在数组上按元素进行运算，产生一个数组作为输出</p><h3 id="索引，切片和迭代"><a href="#索引，切片和迭代" class="headerlink" title="索引，切片和迭代"></a>索引，切片和迭代</h3><ul><li>一维数组的索引、切片和迭代操作，和Python序列类型一样</li><li>多维的数组每个轴可以有一个索引。这些索引以逗号分割的元组给出</li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token number">10</span><span class="token operator">*</span>x <span class="token operator">+</span> y<span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> np<span class="token punctuation">.</span>fromfunction<span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> int<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> aarray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>当提供的索引少于轴的数量时，缺是的索引被认为是完整的切片</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><ul><li>三个点（<code>...</code>)表示产生完整索引元组所需的冒号。如<code>x</code>是rank为5的数组<ul><li><code>x[1, 2, ...]</code>相当于<code>x[1, 2, :, :, :]</code></li><li><code>x[..., 3]</code> 相当于<code>x[:, :, :, :, 3]</code></li></ul></li><li>对多维数组的迭代是相对于第一个轴完成的</li></ul><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> row <span class="token keyword">in</span> a<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">30</span> <span class="token number">31</span> <span class="token number">32</span> <span class="token number">33</span> <span class="token number">34</span><span class="token punctuation">]</span></code></pre><p>如果想对数组中的每个元素执行操作，可以使用<code>flat</code>属性，该属性是数组的所有元素的迭代器</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> element <span class="token keyword">in</span> a<span class="token punctuation">.</span>flat<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token number">0</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token number">10</span><span class="token number">11</span><span class="token number">12</span><span class="token number">13</span><span class="token number">14</span><span class="token number">20</span><span class="token number">21</span><span class="token number">22</span><span class="token number">23</span><span class="token number">24</span><span class="token number">30</span><span class="token number">31</span><span class="token number">32</span><span class="token number">33</span><span class="token number">34</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Playing Atari with Deep Reinforcement Learning</title>
      <link href="/2020/03/03/playing-atari-with-deep-reinforcement-learning/"/>
      <url>/2020/03/03/playing-atari-with-deep-reinforcement-learning/</url>
      
        <content type="html"><![CDATA[<h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>This is the first deep learning model using reforcement learning to learn contorl policies ditectly from high-dimensional sensory input. The model is a <strong>convolutional neural network</strong> , trained with a bariant of Q-Learning.</p><p>Input: raw pixels<br>Output: a alue function estimating future reawards</p><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h3><ul><li>Learning tp control agents directly <strong>from high-dimensional sensory input</strong> like vision and speech is one of the long-standing challenges of RL</li><li>Deep learning have made it possible to extract hig-level features from raw sensory data. The neural network architrctures including <strong>recurrnet neural network</strong>, <strong>multilayer perceptrons</strong>, <strong>restricted Boltzmann machines and recurrent neural networks</strong>, and have ex-ploited both <strong>supervised</strong> and <strong>unsupervised learning</strong>.</li><li>RL algorithms must be able to learn from a <strong>scalar reward signal that is frequently space, noisy and delayed.</strong></li><li>The network is trained with a variant of Q-learning algorithm, with stochastic gradirnt <strong>descent</strong> to update the weights.</li><li>Arcade Learning Enviroment: Atari 2600 presents agents with a high dimensional visualimput(210x160RGB video at 60Hz)</li><li>The goal is to create a single neural network agent that is able to successfully learn to play as many of the game as possible.</li></ul><h3 id="2-Background"><a href="#2-Background" class="headerlink" title="2. Background"></a>2. Background</h3><ul><li><p>The Programe</p><ul><li>Environment $\mathcal{E}$ may be stochastic.</li><li>Atari emulator: a sequence of <strong>actions, observations, rewards</strong></li><li>Each time-step the agent selects an action $a_t$</li><li>The emulator’s internal state observers an image $x_t \in\mathbb{R}^{d}$ ,  which is a <strong>vector of raw pixel values representing the current screen</strong></li><li>The emulator receives a reward $r_t$ representing the change in game score.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Paper Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deep Reinforcement Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>About Proxy</title>
      <link href="/2020/02/04/about-proxy/"/>
      <url>/2020/02/04/about-proxy/</url>
      
        <content type="html"><![CDATA[<h1 id="About-Proxy"><a href="#About-Proxy" class="headerlink" title="About Proxy"></a>About Proxy</h1><p><del>Script: <a href="https://github.com/liuyaanng/SSR" target="_blank" rel="noopener">SSR</a></del>  SSR seems very unstable, i use <strong>v2ray</strong> now.</p><p>Ping test: <a href="http://ping.chinaz.com/" target="_blank" rel="noopener">ping</a> </p><p><img src="1.png" alt="Youtube speed"> </p><h2 id="V2Ray"><a href="#V2Ray" class="headerlink" title="V2Ray"></a>V2Ray</h2><p>Preconditions:</p><ul><li>a VPS: <a href="https://www.vultr.com/" target="_blank" rel="noopener">vultr</a>( $5/m , i uesd now) , <a href="https://billing.virmach.com/cart.php" target="_blank" rel="noopener">VIRMACH</a>( $1.25/m)</li><li>a Domain: (<a href="https://www.namesilo.com/" target="_blank" rel="noopener">Namesilo</a>($0.99), <a href="https://www.freenom.com/" target="_blank" rel="noopener">Freenom</a>free) )</li><li>VPS OS version: Debian 9+ / Ubuntu 18.04+ / CentOS 7+</li></ul><h3 id="1-Resolve-the-domain-to-the-IP-of-your-VPS"><a href="#1-Resolve-the-domain-to-the-IP-of-your-VPS" class="headerlink" title="1. Resolve the domain to the IP of your VPS"></a>1. Resolve the domain to the IP of your VPS</h3><p><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a> </p><h4 id="1-Add-site"><a href="#1-Add-site" class="headerlink" title="1. Add site"></a>1. Add site</h4><p><img src="2.png" alt> </p><h4 id="2-Change-your-domain-NS"><a href="#2-Change-your-domain-NS" class="headerlink" title="2. Change your domain NS"></a>2. Change your domain NS</h4><p><img src="5.png" alt> </p><p><img src="3.png" alt> </p><p><img src="4.png" alt> </p><h4 id="3-Add-record"><a href="#3-Add-record" class="headerlink" title="3. Add record"></a>3. Add record</h4><p><img src="6.png" alt> </p><p><del>You can light the cloud icon to use a proxy which can hidden real ip. ~</del> it is possible to make v2ray doesn’t work.</p><p>NOTE: <strong>Do it after installed V2Ray if u need it</strong></p><h4 id="4-Ping"><a href="#4-Ping" class="headerlink" title="4. Ping"></a>4. Ping</h4><p><img src="7.png" alt> </p><p>it works.</p><h3 id="2-Set-BBR-lotserver"><a href="#2-Set-BBR-lotserver" class="headerlink" title="2. Set BBR lotserver"></a>2. Set BBR lotserver</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate https://raw.githubusercontent.com/liuyaanng/SSR/master/tcp.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x tcp.sh <span class="token operator">&amp;&amp;</span> ./tcp.sh</code></pre><p><img src="8.png" alt> </p><h3 id="3-Install-V2Ray"><a href="#3-Install-V2Ray" class="headerlink" title="3. Install V2Ray"></a>3. Install V2Ray</h3><p>There are two way to install V2Ray use different methods.</p><ul><li>Vmess+websocket+TLS+Nginx+Website</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">tee</span> v2ray_ins.log</code></pre><ul><li>Vmess + HTTP2 over TLS</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install_h2.sh<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">tee</span> v2ray_ins_h2.log</code></pre><p><img src="9.png" alt> </p><p>SELF TESTING</p><h3 id="4-Run-V2Ray"><a href="#4-Run-V2Ray" class="headerlink" title="4. Run V2Ray"></a>4. Run V2Ray</h3><ul><li>start v2ray: <code>systemctl start v2ray</code></li><li>stop v2ray: <code>systemctl stop v2ray</code></li><li>start nginx: <code>systemctl start nginx</code></li><li>stop nginx: <code>systemctl stop nginx</code></li></ul><h3 id="5-V2Ray-client"><a href="#5-V2Ray-client" class="headerlink" title="5. V2Ray client"></a>5. V2Ray client</h3><ul><li><p>Windows: </p><ul><li><a href="https://tlanyan.me/download.php?filename=/v2/windows/v2rayN-v3.5.zip" target="_blank" rel="noopener">V2RayN</a> </li></ul></li><li><p>MacOS:</p><ul><li><a href="https://tlanyan.me/download.php?filename=/v2/macos/v2rayU-v1.5.1.dmg" target="_blank" rel="noopener">V2RayU</a> </li><li><a href="https://github.com/yichengchen/clashX/releases/download/1.18.2/ClashX.dmg" target="_blank" rel="noopener">ClashX</a> (what i use now)</li></ul></li><li><p>Linux:</p><ul><li><p><a href="https://www.jianshu.com/p/a5b6d9dc0441" target="_blank" rel="noopener">link</a> </p></li><li><p><a href="https://snapcraft.io/install/v2ray-core/arch#install" target="_blank" rel="noopener">Snap</a></p></li><li><p>Configuration V2Ray</p><p>config file is located in <code>/etc/v2ray/config.json</code></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">{</span><span class="token string">"policy"</span><span class="token keyword">:</span> null,<span class="token string">"log"</span><span class="token keyword">:</span> <span class="token punctuation">{</span><span class="token string">"access"</span><span class="token keyword">:</span> <span class="token string">""</span>,<span class="token string">"error"</span><span class="token keyword">:</span> <span class="token string">""</span>,<span class="token string">"loglevel"</span><span class="token keyword">:</span> <span class="token string">"warning"</span><span class="token punctuation">}</span>,<span class="token string">"inbounds"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>  <span class="token string">"tag"</span><span class="token keyword">:</span> <span class="token string">"proxy"</span>,  <span class="token string">"port"</span><span class="token keyword">:</span> 1080,  <span class="token string">"listen"</span><span class="token keyword">:</span> <span class="token string">"127.0.0.1"</span>,  <span class="token string">"protocol"</span><span class="token keyword">:</span> <span class="token string">"socks"</span>,  <span class="token string">"sniffing"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"enabled"</span><span class="token keyword">:</span> true,    <span class="token string">"destOverride"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>      <span class="token string">"http"</span>,      <span class="token string">"tls"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span>,  <span class="token string">"settings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"auth"</span><span class="token keyword">:</span> <span class="token string">"noauth"</span>,    <span class="token string">"udp"</span><span class="token keyword">:</span> true,    <span class="token string">"ip"</span><span class="token keyword">:</span> null,    <span class="token string">"address"</span><span class="token keyword">:</span> null,    <span class="token string">"clients"</span><span class="token keyword">:</span> null  <span class="token punctuation">}</span>,  <span class="token string">"streamSettings"</span><span class="token keyword">:</span> null<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"outbounds"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>  <span class="token string">"tag"</span><span class="token keyword">:</span> <span class="token string">"proxy"</span>,  <span class="token string">"protocol"</span><span class="token keyword">:</span> <span class="token string">"vmess"</span>,  <span class="token string">"settings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"vnext"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token string">"address"</span><span class="token keyword">:</span> <span class="token string">" "</span>, //your domain address        <span class="token string">"port"</span><span class="token keyword">:</span>  ,   //port        <span class="token string">"users"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            <span class="token string">"id"</span><span class="token keyword">:</span> <span class="token string">" "</span>,   //id            <span class="token string">"alterId"</span><span class="token keyword">:</span> 2,            <span class="token string">"email"</span><span class="token keyword">:</span> <span class="token string">"t@t.tt"</span>,            <span class="token string">"security"</span><span class="token keyword">:</span> <span class="token string">"auto"</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>,    <span class="token string">"servers"</span><span class="token keyword">:</span> null,    <span class="token string">"response"</span><span class="token keyword">:</span> null  <span class="token punctuation">}</span>,    <span class="token string">"streamSettings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"network"</span><span class="token keyword">:</span> <span class="token string">"ws"</span>,    <span class="token string">"security"</span><span class="token keyword">:</span> <span class="token string">"tls"</span>,    <span class="token string">"tlsSettings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>      <span class="token string">"allowInsecure"</span><span class="token keyword">:</span> true,      <span class="token string">"serverName"</span><span class="token keyword">:</span> <span class="token string">" "</span>    //domain address    <span class="token punctuation">}</span>,    <span class="token string">"tcpSettings"</span><span class="token keyword">:</span> null,    <span class="token string">"kcpSettings"</span><span class="token keyword">:</span> null,    <span class="token string">"wsSettings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>      <span class="token string">"connectionReuse"</span><span class="token keyword">:</span> true,      <span class="token string">"path"</span><span class="token keyword">:</span> <span class="token string">"/e3137ae7/"</span>,   //path      <span class="token string">"headers"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>        <span class="token string">"Host"</span><span class="token keyword">:</span> <span class="token string">" "</span>  //domain address      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>,    <span class="token string">"httpSettings"</span><span class="token keyword">:</span> null,    <span class="token string">"quicSettings"</span><span class="token keyword">:</span> null  <span class="token punctuation">}</span>,  <span class="token string">"mux"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"enabled"</span><span class="token keyword">:</span> true,    <span class="token string">"concurrency"</span><span class="token keyword">:</span> 8  <span class="token punctuation">}</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>  <span class="token string">"tag"</span><span class="token keyword">:</span> <span class="token string">"direct"</span>,  <span class="token string">"protocol"</span><span class="token keyword">:</span> <span class="token string">"freedom"</span>,  <span class="token string">"settings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"vnext"</span><span class="token keyword">:</span> null,    <span class="token string">"servers"</span><span class="token keyword">:</span> null,    <span class="token string">"response"</span><span class="token keyword">:</span> null  <span class="token punctuation">}</span>,  <span class="token string">"streamSettings"</span><span class="token keyword">:</span> null,  <span class="token string">"mux"</span><span class="token keyword">:</span> null<span class="token punctuation">}</span>,<span class="token punctuation">{</span>  <span class="token string">"tag"</span><span class="token keyword">:</span> <span class="token string">"block"</span>,  <span class="token string">"protocol"</span><span class="token keyword">:</span> <span class="token string">"blackhole"</span>,  <span class="token string">"settings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>    <span class="token string">"vnext"</span><span class="token keyword">:</span> null,    <span class="token string">"servers"</span><span class="token keyword">:</span> null,    <span class="token string">"response"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>      <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"http"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>,  <span class="token string">"streamSettings"</span><span class="token keyword">:</span> null,  <span class="token string">"mux"</span><span class="token keyword">:</span> null<span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">"stats"</span><span class="token keyword">:</span> null,<span class="token string">"api"</span><span class="token keyword">:</span> null,<span class="token string">"dns"</span><span class="token keyword">:</span> null,<span class="token string">"routing"</span><span class="token keyword">:</span> <span class="token punctuation">{</span><span class="token string">"domainStrategy"</span><span class="token keyword">:</span> <span class="token string">"IPIfNonMatch"</span>,<span class="token string">"rules"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token string">"type"</span><span class="token keyword">:</span> <span class="token string">"field"</span>,    <span class="token string">"port"</span><span class="token keyword">:</span> null,    <span class="token string">"inboundTag"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>      <span class="token string">"api"</span>    <span class="token punctuation">]</span>,    <span class="token string">"outboundTag"</span><span class="token keyword">:</span> <span class="token string">"api"</span>,    <span class="token string">"ip"</span><span class="token keyword">:</span> null,    <span class="token string">"domain"</span><span class="token keyword">:</span> null  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li></ul></li></ul><h2 id="Terminal-Proxy"><a href="#Terminal-Proxy" class="headerlink" title="Terminal Proxy"></a>Terminal Proxy</h2><h3 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h3><p>i can make some terminal commands run with proxy. But it seems can’t work on my computer. Sad. Anyway, i still share the way to install and configure.</p><ul><li>Installation</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S proxychains</code></pre><p>Or you can install it from source code. (make sure your <code>gcc</code> installed)</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/rofl0r/proxychains-ng<span class="token function">cd</span> proxychains-ng./configure<span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">sudo</span> <span class="token function">make</span> install-config<span class="token punctuation">(</span>generate config file<span class="token punctuation">)</span></code></pre><ul><li>Configuration<br>config file is saved in <code>/etc/proxychains.conf</code></li></ul><p>Add <code>socks5  127.0.0.1 1080</code> to the end. note the space!</p><ul><li>Use</li></ul><p>Add <code>proxychains</code> before the terminal commands.</p><pre class=" language-bash"><code class="language-bash">proxychains <span class="token function">git</span> clone https://github.com/rofl0r/proxychains-ng</code></pre><p>you can run <code>npm</code> , <code>docker</code> … But <code>ping</code> command is not suitable, because proxychains can only proxy <strong>TCP</strong>, and <code>ping</code> is use <strong>ICMP</strong>.</p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>You may need to configure a proxy server if you’re having trouble cloning or fetching from a remote repository or getting an error like unable to access <code>Couldn&#39;t resolve host</code>.</p><p>Consider something like:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global http.proxy http://proxyUsername:proxyPassword@proxy.server.com:port</code></pre><p>i use <code>git config --global http.proxy &#39;socks5://127.0.0.1:1080&#39;</code> to set my git cause i use socks5.</p><p>i also use <code>git config --local http.proxy &#39;socks5://127.0.0.1:1080&#39;</code> to set my local config that can only work in ‘git clone’ repositories.</p><p>Check global proxy:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global http.proxy</code></pre><p>Check local proxy:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --local http.proxy</code></pre><p>Cancel proxy:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global --unset http.proxy</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --local --unset http.proxy</code></pre><h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><p>Create <code>.wgetrc</code> file in home directory.</p><pre class=" language-bash"><code class="language-bash">use_proxy<span class="token operator">=</span>yeshttp_proxy<span class="token operator">=</span>127.0.0.1:1080https_proxy<span class="token operator">=</span>127.0.0.1:1080</code></pre><p>it can only use http proxy.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Horner&#39;s Method</title>
      <link href="/2020/02/02/horner-s-method/"/>
      <url>/2020/02/02/horner-s-method/</url>
      
        <content type="html"><![CDATA[<h3 id="Function-vs-Polynomial"><a href="#Function-vs-Polynomial" class="headerlink" title="Function vs Polynomial"></a>Function vs Polynomial</h3><ul><li>f(x) means a function, any function<ul><li>$$ f(x) = \sin (e^x) + \ln ( \frac{1}{x^2+1} ) $$</li><li>$$ f(x) = \alpha x^3 - \arctan(x) $$</li></ul></li><li>p(x) means a polynomial function<ul><li>$$ p(x) = dx^3 + cx^2 + bx + a $$</li><li>$$ p(x) = a + bx + cx^2 + dx^3 $$</li></ul></li><li>evaluating p(x) can be slow<ul><li>$$ p(x) = a + bx + cx^2 + dx^3 $$</li><li>$$ p(x) = a + b \times x + c \times x \times x + d \times x \times x \times x $$</li></ul></li></ul><p>It include <strong>4 additions</strong> and <strong>6 multiplications</strong></p><h3 id="Horner’s-Method"><a href="#Horner’s-Method" class="headerlink" title="Horner’s Method"></a>Horner’s Method</h3><ul><li>Rewrite p(x)<ul><li>$$ p(x) = a + bx + cx^2 + dx^3 $$</li><li>$$ p(x) = a + bx + x(cx + dx^2) $$</li><li>$$ p(x) = a + x(b + x(cx + dx)) $$</li><li>$$ p(x) = a + x \times (b + x \times (c + d \times x)) $$</li></ul></li></ul><p>It include <strong>3 additions</strong> and <strong>3 multiplications</strong></p><ul><li>In terms of $a_n$<ul><li>$$ p(x) = a_0 + a_1x + a_2x^2 + a_3x^3 + \cdots + a_nx^n $$</li><li>$$ p(x) = a_0x^0 + a_1x + a_2x^2 + a_3x^3 + \cdots + a_nx^n  = \sum_{i=0}^{n} a_i x^i $$</li><li>$$ p(x) = a_0 +x(a_1 + x(a_2 + \cdots + x(a_{n-1} + xa_n    ) \cdots )) $$</li><li>$$p(x) = p_0(x) where p_i(x) = \begin{cases} a_i + x \times p_{i+1}(x), if i &lt; n \\ a_n, if i = n \end{cases}$$</li></ul></li></ul><h4 id="Pseudocode"><a href="#Pseudocode" class="headerlink" title="Pseudocode"></a>Pseudocode</h4><p>Give the value of coefficient $a_0$, $a_1$, $\cdots$, $a_n$ and $x$.</p><pre class=" language-python"><code class="language-python">y <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token operator">=</span> n downto <span class="token number">0</span>  y <span class="token operator">=</span> a_i <span class="token operator">+</span> xy</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SORT</title>
      <link href="/2020/01/29/sort/"/>
      <url>/2020/01/29/sort/</url>
      
        <content type="html"><![CDATA[<h2 id="SORT"><a href="#SORT" class="headerlink" title="SORT"></a>SORT</h2><h3 id="1-BUBBLE-SORT"><a href="#1-BUBBLE-SORT" class="headerlink" title="1. BUBBLE SORT"></a>1. BUBBLE SORT</h3><pre class=" language-python"><code class="language-python">BUBBLE<span class="token operator">-</span>SORT<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token operator">//</span>A<span class="token punctuation">:</span>sort array<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span> to A<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>  <span class="token keyword">for</span> j <span class="token operator">=</span> A<span class="token punctuation">.</span>length to i <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">if</span> A<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> A<span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span>      swap<span class="token punctuation">(</span>A<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> A<span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span></code></pre><p><img src="BUBBLE_SORT.gif" alt="BUBBLE_SORT"> </p><p>$$ \Theta (n^2) $$</p><h3 id="2-INSERTION-SORT"><a href="#2-INSERTION-SORT" class="headerlink" title="2. INSERTION SORT"></a>2. INSERTION SORT</h3><pre class=" language-python"><code class="language-python">INSERTION<span class="token operator">-</span>SORT<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token operator">//</span>A<span class="token punctuation">:</span>sort array<span class="token keyword">for</span> j <span class="token operator">=</span> <span class="token number">2</span> to A<span class="token punctuation">.</span>length  key <span class="token operator">=</span> A<span class="token punctuation">[</span>j<span class="token punctuation">]</span>  <span class="token operator">//</span>Insert A<span class="token punctuation">[</span>j<span class="token punctuation">]</span> into the sorted sequence A<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">.</span>j<span class="token number">-1</span><span class="token punctuation">]</span>  i <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token number">1</span>  <span class="token keyword">while</span> i <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">and</span> A<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> key    A<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> A<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    i <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span>  A<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> key</code></pre><p><img src="INSERTION_SORT.gif" alt="INSERTION_SORT"> </p><p>$$ \Theta (n^2) $$</p><h3 id="3-SELECT-SORT"><a href="#3-SELECT-SORT" class="headerlink" title="3. SELECT SORT"></a>3. SELECT SORT</h3><pre class=" language-python"><code class="language-python">SELECT<span class="token operator">-</span>SORT<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token operator">//</span>A<span class="token punctuation">:</span>sort array<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span> to range<span class="token punctuation">(</span>i<span class="token punctuation">,</span>A<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  min <span class="token operator">=</span> A<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token keyword">for</span> j <span class="token operator">=</span> <span class="token number">1</span> to A<span class="token punctuation">.</span>length    <span class="token keyword">if</span> min <span class="token operator">></span> A<span class="token punctuation">[</span>j<span class="token punctuation">]</span>      min <span class="token operator">=</span> A<span class="token punctuation">[</span>j<span class="token punctuation">]</span>      min_index <span class="token operator">=</span> j  swap<span class="token punctuation">(</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>A<span class="token punctuation">[</span>min_index<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p><img src="SELECT_SORT.gif" alt="SELECT_SORT"> </p><p>$$ \Theta (n^2) $$</p><h3 id="4-MERGE-SORT"><a href="#4-MERGE-SORT" class="headerlink" title="4. MERGE SORT"></a>4. MERGE SORT</h3><pre class=" language-python"><code class="language-python">MERGE<span class="token operator">-</span>SORT<span class="token punctuation">(</span>A<span class="token punctuation">,</span> p<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token operator">//</span>A<span class="token punctuation">:</span>sort array<span class="token operator">//</span>p<span class="token punctuation">:</span>begin index<span class="token operator">//</span>r<span class="token punctuation">:</span>end index<span class="token keyword">if</span> p <span class="token operator">&lt;</span> r  q <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span>  MERGE<span class="token operator">-</span>SORT<span class="token punctuation">(</span>A<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>  MERGE<span class="token operator">-</span>SORT<span class="token punctuation">(</span>A<span class="token punctuation">,</span> q<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>  MERGE<span class="token punctuation">(</span>A<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> r<span class="token punctuation">)</span>MERGE<span class="token punctuation">(</span>A<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token operator">//</span>A<span class="token punctuation">:</span>sort array<span class="token operator">//</span>p<span class="token punctuation">:</span>begin index<span class="token operator">//</span>q<span class="token punctuation">:</span>mid index<span class="token operator">//</span>r<span class="token punctuation">:</span>end indexn1 <span class="token operator">=</span> q <span class="token operator">-</span> p <span class="token operator">+</span> <span class="token number">1</span>n2 <span class="token operator">=</span> r <span class="token operator">-</span> qLet L<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">.</span>n1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">and</span> R<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">.</span>n2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> be new arrays<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span> to n1  L<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> A<span class="token punctuation">[</span>p <span class="token operator">+</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">for</span> j <span class="token operator">=</span> <span class="token number">1</span> to n2  R<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> A<span class="token punctuation">[</span>q <span class="token operator">+</span> j<span class="token punctuation">]</span>L<span class="token punctuation">[</span>n1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> infinityR<span class="token punctuation">[</span>n2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> infinityi <span class="token operator">=</span> <span class="token number">1</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">for</span> k <span class="token operator">=</span> p to r  <span class="token keyword">if</span> L<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> R<span class="token punctuation">[</span>j<span class="token punctuation">]</span>    A<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>  <span class="token keyword">else</span>    A<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> R<span class="token punctuation">[</span>j<span class="token punctuation">]</span>    j <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span></code></pre><p><img src="MERGE_SORT.gif" alt="MERGE_SORT"> </p><p>$$ \Theta (n) $$</p>]]></content>
      
      
      <categories>
          
          <category> Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020</title>
      <link href="/2020/01/01/2020/"/>
      <url>/2020/01/01/2020/</url>
      
        <content type="html"><![CDATA[<h2 id="New-Plan"><a href="#New-Plan" class="headerlink" title="New Plan"></a>New Plan</h2><ol start="0"><li><input disabled type="checkbox"> Love her!</li><li><input disabled type="checkbox"> Python</li><li><input disabled type="checkbox"> Math </li><li><input disabled type="checkbox"> IELTS</li><li><input disabled type="checkbox"> algorithm</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux</title>
      <link href="/2019/12/06/arch-linux/"/>
      <url>/2019/12/06/arch-linux/</url>
      
        <content type="html"><![CDATA[<h2 id="Arch-linux-i3"><a href="#Arch-linux-i3" class="headerlink" title="Arch linux + i3"></a>Arch linux + i3</h2><p><img src="https://i.loli.net/2019/12/07/ykIzuo8Z1PSGpLv.png" alt="arch+i3"><br><img src="main.png" alt><br><img src="albert.png" alt><br><img src="music.png" alt> </p><h2 id="Installation-guide"><a href="#Installation-guide" class="headerlink" title="Installation guide"></a>Installation guide</h2><h3 id="1-Boot-the-live-environment"><a href="#1-Boot-the-live-environment" class="headerlink" title="1. Boot the live environment"></a>1. Boot the live environment</h3><p>The live environment can be booted from a USB flash deive, an optical disc or a network with PXE. </p><h3 id="2-Connect-the-Internet"><a href="#2-Connect-the-Internet" class="headerlink" title="2. Connect the Internet"></a>2. Connect the Internet</h3><pre class=" language-bash"><code class="language-bash">wifi-menu</code></pre><p>Use <code>ping www.archlinux.org</code> to verify the connection.</p><h3 id="3-Update-the-system-clock"><a href="#3-Update-the-system-clock" class="headerlink" title="3. Update the system clock"></a>3. Update the system clock</h3><p>Use <code>tiledatectl</code> to ensure the system colck is accurate</p><pre class=" language-bash"><code class="language-bash">timedatectl set-ntp <span class="token boolean">true</span></code></pre><p>To check the service status, use <code>timedatectl status</code></p><p><img src="1.png" alt="timedate"> </p><h3 id="4-Partition-the-disks"><a href="#4-Partition-the-disks" class="headerlink" title="4. Partition the disks"></a>4. Partition the disks</h3><p>When recognized by the live system, disks are assigned to a block device such as <code>/dev/sda</code> or <code>/dev/nvme0n1</code> . To identify these devices, use <code>lsblk</code> or <code>fdisk</code> .</p><pre class=" language-bash"><code class="language-bash"><span class="token function">fdisk</span> -l</code></pre><p>Use <a href="https://wiki.archlinux.org/index.php/Fdisk" target="_blank" rel="noopener">fdisk</a> or <a href="https://wiki.archlinux.org/index.php/Parted" target="_blank" rel="noopener">parted</a> to modify partition tables. </p><p>for example: </p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># parted /dev/sda</span><span class="token punctuation">(</span>parted<span class="token punctuation">)</span> mklabelNew disk label type? gpt<span class="token punctuation">(</span>parted<span class="token punctuation">)</span> <span class="token keyword">exit</span></code></pre><p>Use <code>cfdisk</code> to create partition.    </p><p>It should include <strong>EFI</strong> , <strong>/</strong> (root), <strong>/home</strong> , <strong>/swap</strong> .</p><p><img src="2.png" alt="Disks"> </p><h3 id="5-Format-the-partitions"><a href="#5-Format-the-partitions" class="headerlink" title="5. Format the partitions"></a>5. Format the partitions</h3><p>Note the correct partitions</p><ul><li>EFI partition</li></ul><pre class=" language-bash"><code class="language-bash">mkfs.vfat /dev/sda2</code></pre><ul><li>root and home partition</li></ul><pre class=" language-bash"><code class="language-bash">mkfs.ext4 /dev/sda3mkfs.ext4 /dev/sda4</code></pre><ul><li>swap partition</li></ul><pre class=" language-bash"><code class="language-bash">mkswap -f /dev/sda5swapon /dev/swap</code></pre><h3 id="6-Mount-the-file-systems"><a href="#6-Mount-the-file-systems" class="headerlink" title="6. Mount the file systems"></a>6. Mount the file systems</h3><p>Pay attention to the <strong>order</strong> of mounting partitions!</p><ul><li>mount the file system on the root partition to <code>/mnt</code></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">mount</span> /dev/sda3 /mnt</code></pre><ul><li>create <strong>home</strong> folder in <code>/mnt</code> folder and mount the file system on the home partition to <code>/mnt/home</code></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /mnt/home<span class="token function">mount</span> /dev/sda4 /mnt/home</code></pre><ul><li>create <strong>/mnt/boot/EFI</strong> folder and mount the file system on the EFI partition to <code>/mnt/boot/EFI</code></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /mnt/boot<span class="token function">mkdir</span> /mnt/boot/EFI<span class="token function">mount</span> /dev/sda2 /mnt/boot/EFI</code></pre><h3 id="7-Select-the-mirrors"><a href="#7-Select-the-mirrors" class="headerlink" title="7. Select the mirrors"></a>7. Select the mirrors</h3><pre class=" language-bash"><code class="language-bash">vim /etc/pacman.d/mirrorlist</code></pre><p>Paste the China mirrors in the beginning</p><p><img src="3.png" alt="mirrorlist"> </p><h3 id="8-Install-essential-packages"><a href="#8-Install-essential-packages" class="headerlink" title="8. Install essential packages"></a>8. Install essential packages</h3><pre class=" language-bash"><code class="language-bash">pacstrap /mnt base linux linux-firmware</code></pre><h3 id="9-Generate-an-fstab-file"><a href="#9-Generate-an-fstab-file" class="headerlink" title="9. Generate an fstab file"></a>9. Generate an <strong>fstab</strong> file</h3><pre class=" language-bash"><code class="language-bash">genfstab -U /mnt <span class="token operator">>></span> /mnt/etc/fstab</code></pre><p>Check the resulting <code>/mnt/etc/fstab</code> file, and edit it in case of errors.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> /mnt/etc/fstab</code></pre><p><img src="4.png" alt="fstab"> </p><h3 id="10-Change-root-into-the-new-system"><a href="#10-Change-root-into-the-new-system" class="headerlink" title="10. Change root into the new system"></a>10. Change root into the new system</h3><pre class=" language-bash"><code class="language-bash">arch-chroot /mnt</code></pre><h3 id="11-Time-zone"><a href="#11-Time-zone" class="headerlink" title="11. Time zone"></a>11. Time zone</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc.localtimehwclock --systohc</code></pre><h3 id="12-Localozation-Language"><a href="#12-Localozation-Language" class="headerlink" title="12. Localozation(Language)"></a>12. Localozation(Language)</h3><ul><li>Uncomment <code>en_US.UTF-8 UTF-8</code> and others needed locals in <code>/etc/locale.gen</code> , and generate them with:</li></ul><pre class=" language-bash"><code class="language-bash">locale-gen</code></pre><ul><li>Create the <code>locale.conf</code> file, and set <code>LANG</code> variable accordingly:</li></ul><pre class=" language-bash"><code class="language-bash">vim /etc/locale.confLANG<span class="token operator">=</span>en_US.UTF-8</code></pre><h3 id="13-Initramfs"><a href="#13-Initramfs" class="headerlink" title="13. Initramfs"></a>13. Initramfs</h3><pre class=" language-bash"><code class="language-bash">mkinitcpio -P</code></pre><h3 id="14-Root-password"><a href="#14-Root-password" class="headerlink" title="14. Root password"></a>14. Root password</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">passwd</span> root</code></pre><h3 id="15-Network-configuration"><a href="#15-Network-configuration" class="headerlink" title="15. Network configuration"></a>15. <a href="https://wiki.archlinux.org/index.php/Network_configuration" target="_blank" rel="noopener">Network configuration</a></h3><ul><li>Create the <strong>hostname</strong> file</li></ul><pre class=" language-bash"><code class="language-bash">vim /etc/hostname</code></pre><p>Enter your hostname in this file.</p><ul><li>Add matching entries to <strong>hosts</strong></li></ul><pre class=" language-bash"><code class="language-bash">vim /etc/hosts</code></pre><pre><code>127.0.0.1    localhost::1          localhost127.0.0.1    yourhostname.localdomain    yourhostname</code></pre><ul><li>Install some software to ensure you can connect the Internet after reboot system.</li></ul><pre class=" language-bash"><code class="language-bash">pacman -S iw wpa_supplicant dialog networkmanager</code></pre><p><a href="#nm">Detailed configuration</a> </p><h3 id="16-Microcode"><a href="#16-Microcode" class="headerlink" title="16. Microcode"></a>16. <a href="https://wiki.archlinux.org/index.php/Microcode" target="_blank" rel="noopener">Microcode</a></h3><p>My computer is <code>Intel</code> processors.</p><pre class=" language-bash"><code class="language-bash">pacman -S intel-ucode</code></pre><h3 id="17-Boot-loader"><a href="#17-Boot-loader" class="headerlink" title="17. Boot loader"></a>17. <a href="https://wiki.archlinux.org/index.php/Arch_boot_process#Boot_loader" target="_blank" rel="noopener">Boot loader</a></h3><p><a href="https://wiki.archlinux.org/index.php/GRUB" target="_blank" rel="noopener"><strong>GRUB</strong></a> </p><pre class=" language-bash"><code class="language-bash">pacman -S grub efibootmgrgrub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span>/boot/EFI -bootloader-id<span class="token operator">=</span>Archlinuxgrub-mkconfig -o /boot/grub/grub.cfg</code></pre><p>If you can see some <code>img</code> file generated, it means the grub boot loader file are successful creatted.</p><h3 id="18-Reboot"><a href="#18-Reboot" class="headerlink" title="18. Reboot"></a>18. Reboot</h3><pre class=" language-bash"><code class="language-bash"><span class="token keyword">exit</span><span class="token function">umount</span> -R /mnt<span class="token function">reboot</span></code></pre><p>Use <code>uname -a</code> to view the Version of Arch linux.</p><p><img src="5.png" alt="Arch_linux Version"> </p><h2 id="My-config-recommendations"><a href="#My-config-recommendations" class="headerlink" title="My config recommendations"></a>My config recommendations</h2><h3 id="1-Add-users"><a href="#1-Add-users" class="headerlink" title="1. Add users"></a>1. Add users</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">useradd</span> -s -G wheel -s /bin/bash username</code></pre><p>To allow user to gain full root privileges when he precdeds a command with <code>sudo</code> , add the following line to <code>/etc/sudoers</code> .</p><pre class=" language-bash"><code class="language-bash">USER_NAME ALL<span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> ALL</code></pre><p><code>su username</code> to switch users.</p><h3 id="2-NetworkManager"><a href="#2-NetworkManager" class="headerlink" title="2. NetworkManager "></a>2. <a id="nm"><a href="https://wiki.archlinux.org/index.php/NetworkManager" target="_blank" rel="noopener">NetworkManager</a> </a></h3><p>NetworkManager(package <code>networkmanager</code> ) contains a daemon, a command line interface( <code>nmcli</code> ) and a curses-based interface( <code>nmtui</code> ). After installation, you should <strong>enable the daemon</strong>.</p><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> NetworkManager.servicesystemctl start NetworkManager.service</code></pre><p>Use <code>ip link</code> to view the network interface.</p><p><img src="6.png" alt="Network interface"> </p><p><strong>Usage</strong></p><ul><li>List nearby wifi networks</li></ul><pre class=" language-bash"><code class="language-bash">nmcli device wifi list</code></pre><ul><li>Connect to a wifi network</li></ul><pre class=" language-bash"><code class="language-bash">nmcli device wifi connect SSID password password</code></pre><ul><li>Disconnect an interface</li></ul><pre class=" language-bash"><code class="language-bash">nmcli device disconnect ifname eth0</code></pre><ul><li>See a list of network devices and wheir state</li></ul><pre class=" language-bash"><code class="language-bash">nmcli device</code></pre><ul><li>Turn off wifi</li></ul><pre class=" language-bash"><code class="language-bash">nmcli radio wifi off</code></pre><p><code>nm-applet</code> for a system tray applet</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S network-manager-applet</code></pre><ul><li>Add <code>exec --no-startup-id nm-applet</code> to <code>~/.config/i3/config</code> fot autostart <code>nm-applet</code> .</li></ul><h3 id="3-Xorg-display-server"><a href="#3-Xorg-display-server" class="headerlink" title="3. Xorg display server"></a>3. <a href="https://wiki.archlinux.org/index.php/Xorg" target="_blank" rel="noopener">Xorg</a> display server</h3><ul><li>Installation</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S xorg xorg-server xorg-apps</code></pre><ul><li><p>Driver installation</p><ol><li>First, identify your card:</li></ol><pre class=" language-bash"><code class="language-bash">lspci <span class="token operator">|</span> <span class="token function">grep</span> -e VGA -e 3D</code></pre><p><img src="7.png" alt="card"> </p><p><img src="8.png" alt> </p><ol start="2"><li>Install an appropriate deiver</li></ol><pre class=" language-bash"><code class="language-bash">pacman -Ss xf86-video</code></pre><p><strong>Note</strong> : For NVIDIA Optimus enabled laptop which uses an integrated video card combined with a dedicated GPU, You  <strong>can not</strong> just install <code>xf86-video-intel</code> &amp; <code>nvidia</code> , it will get a blcak screen. See <a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus" target="_blank" rel="noopener">NVIDIA Optimus</a> to get more informations. </p><p>I just install <code>xf86-video-vesa</code> . </p><pre class=" language-bash"><code class="language-bash">pacman -S xf86-video-vesa</code></pre><p><a href="https://wiki.archlinux.org/index.php/Xorg#Driver_installation" target="_blank" rel="noopener">Xorg: Driver_installtion</a> </p></li><li><p>Use <a href="https://wiki.archlinux.org/index.php/Xinit" target="_blank" rel="noopener">xinit</a> to start Xorg display server.</p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S xorg-xinit</code></pre><ul><li>Create <code>.xinitrc</code> file(in common users)</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc</code></pre><ul><li>Tap-to-click</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/X11/xorg.conf.d/30-touchpad.conf</code></pre><p>Add the following lines to it.</p><pre><code>Section &quot;InputClass&quot;  Identifier &quot;touchpad&quot;  Driver &quot;libinput&quot;  MatchIsTouchpad &quot;on&quot;  Option &quot;Tapping&quot; &quot;on&quot;EndSection</code></pre><ul><li>Install Windows Manager (i3)</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S i3</code></pre><p>It include <code>i3-gaps</code> , <code>i3wm</code> , <code>i3blocks</code> , <code>i3lock</code> , <code>i3status</code></p><ul><li>Use i3</li></ul><p>Add <code>exec i3</code> to the end of <code>~.xinitrc</code> .</p><ul><li>Start Xorg server.</li></ul><pre class=" language-bash"><code class="language-bash">startx</code></pre><ul><li>Autostart X at login</li></ul><p>I’m a <a href="https://fishshell.com/" target="_blank" rel="noopener">fish</a> user, so i just need add the following to the bottom of my <code>~/.config/fish/config.fish</code> .</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Start X at login</span><span class="token keyword">if</span> status is-login    <span class="token keyword">if</span> <span class="token function">test</span> -z <span class="token string">"<span class="token variable">$DISPLAY</span>"</span> -a <span class="token variable">$XDG_VTNR</span> <span class="token operator">=</span> 1        <span class="token function">exec</span> startx -- -keeptty    endend</code></pre><p>Other shell user (like <strong>bash</strong> , <strong>zsh</strong> ), Please visit <a href="https://wiki.archlinux.org/index.php/Xinit#Autostart_X_at_login" target="_blank" rel="noopener">here</a> </p><h3 id="4-i3wm"><a href="#4-i3wm" class="headerlink" title="4. i3wm"></a>4. i3wm</h3><p><a href="https://i3wm.org" target="_blank" rel="noopener">i3wm</a>  ,   <a href="https://wiki.archlinux.org/index.php/I3" target="_blank" rel="noopener">i3-ArchWiki</a> </p><p><a href="https://github.com/liuyaanng/Arch_linux#i3-and-i3status" target="_blank" rel="noopener">My i3 config</a> </p><h3 id="5-Some-useful-software"><a href="#5-Some-useful-software" class="headerlink" title="5. Some useful software"></a>5. Some useful software</h3><ul><li>yaourt</li></ul><p>Add the source to <code>/etc/pacman.conf</code></p><pre><code>[archlinuxcn]#The Chinese Arch Linux communities packages.SigLevel = Optional TrustAllServer = http://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch#Server   = http://repo.archlinuxcn.org/$arch#Server   = http://repo.archlinux.fr/$arch</code></pre><p>Synchronized communities</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Syu</code></pre><p>Insatll yaourt </p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S yaourt</code></pre><ul><li><a href="https://godliuyang.wang/2019/08/24/manjaro-i3wm-huan-jing-pei-zhi-pian/#toc-heading-13" target="_blank" rel="noopener">Software i use often</a></li></ul><h3 id="6-Fonts"><a href="#6-Fonts" class="headerlink" title="6. Fonts"></a>6. Fonts</h3><p><a href="https://wiki.archlinux.org/index.php/Fonts" target="_blank" rel="noopener">Fonts-ArchWiki</a> , <a href="https://github.com/ryanoasis/nerd-fonts" target="_blank" rel="noopener">Nerd-fonts</a> , <a href="https://unicode-table.com/en/" target="_blank" rel="noopener">Unicode-table</a>  </p><table><thead><tr><th align="center">adobe-source-code-pro</th><th align="center">adobe-source-han-serif-cn-fonts</th><th align="center">adobe-source-han-serif-tw-fonts</th></tr></thead><tbody><tr><td align="center">ttf-symbola</td><td align="center">nerd-fonts-complete</td><td align="center">nerd-fonts-dejavu-complete</td></tr><tr><td align="center">font-awesome</td><td align="center">noto-fonts-emoji</td><td align="center"></td></tr></tbody></table><p><code>fc-list</code> to show the fonts you have installed.</p><h3 id="7-Volume"><a href="#7-Volume" class="headerlink" title="7. Volume"></a>7. Volume</h3><ul><li><p>ALSA is a set of built-in GNU/Linux modules. Therefore, manual insatllation is not necessary.</p></li><li><p>Install <strong>pulseaudio</strong></p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S pulseaudio</code></pre><ul><li>Install <strong>alsa-utils</strong></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S alsa-utils</code></pre><p>Use <code>alsamixer</code> to manage the system volume</p><ul><li>VoulmeIcon</li></ul><p><img src="9.png" alt="VolumeIcon"> </p><p>If you want a System volume tray, you can try <strong>volumeicon</strong></p><ol><li><p>Install volumeicon</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S volumeicon</code></pre></li><li><p>Add <code>volumeicon</code> file in <code>~/.config/volumeicon</code>  , and add the following lines to it.</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>Alsa<span class="token punctuation">]</span>card<span class="token operator">=</span>default<span class="token punctuation">[</span>Notification<span class="token punctuation">]</span>show_notification<span class="token operator">=</span>truenotification_type<span class="token operator">=</span>1<span class="token punctuation">[</span>StatusIcon<span class="token punctuation">]</span>stepsize<span class="token operator">=</span>5onclick<span class="token operator">=</span>xterm -e <span class="token string">'alsamixer'</span>theme<span class="token operator">=</span>White Gnomeuse_panel_specific_icons<span class="token operator">=</span>truelmb_slider<span class="token operator">=</span>truemmb_mute<span class="token operator">=</span>trueuse_horizontal_slider<span class="token operator">=</span>falseshow_sound_level<span class="token operator">=</span>trueuse_transparent_bac<span class="token operator">&lt;</span>++<span class="token operator">></span>kground<span class="token operator">=</span>true<span class="token punctuation">[</span>Hotkeys<span class="token punctuation">]</span>up_enabled<span class="token operator">=</span>truedown_enabled<span class="token operator">=</span>truemute_enabled<span class="token operator">=</span>trueup<span class="token operator">=</span>XF86AudioRaiseVolumedown<span class="token operator">=</span>XF86AudioLowerVolumemute<span class="token operator">=</span>XF86AudioMute</code></pre></li><li><p>Create <code>pulseaudio-ctl.desktop</code> in <code>~/.config/autostart</code> , and add the following lines to it.</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>Desktop Entry<span class="token punctuation">]</span>Encoding<span class="token operator">=</span>UTF-8Type<span class="token operator">=</span>ApplicationName<span class="token operator">=</span>pulseaudio-ctlcomment<span class="token operator">=</span>Set Volume to 70%Exec<span class="token operator">=</span>pulseaudio-ctl-normalStartupNotify<span class="token operator">=</span>trueTerminal<span class="token operator">=</span>falseHidden<span class="token operator">=</span>false</code></pre></li><li><p>Add <code>exec --no-startup-id volumeicon</code> to <code>~/.config/i3/config</code> .</p></li><li><p>I wrote two scripts to control the volume of the system with <code>alsamixer</code> and <code>dunst</code> , put them to <code>/usr/bin/</code> .</p><p><a href="https://github.com/liuyaanng/Arch_linux/blob/master/volume_up.sh" target="_blank" rel="noopener">volume_up</a><br><a href="https://github.com/liuyaanng/Arch_linux/blob/master/volume_down.sh" target="_blank" rel="noopener">volume_down</a> </p></li></ol><h3 id="8-Screen-brightness"><a href="#8-Screen-brightness" class="headerlink" title="8. Screen brightness"></a>8. Screen brightness</h3><p>A good advice for backlight management is <code>xorg-xbacklight</code> , but it seems not work on my computer. </p><p><img src="12.png" alt="xbacklight -error"> </p><p>If you have the same problem, you can try the solution of Wiki, but it still can’t work on my computer. Sad! So i try another way to control the screen brightness.<br>The backlight can be controlled by the file <code>/sys/class/backlight/intel_backlight/brightness</code> ‘s value. So i wrote a script to control it. I named it <code>intel_brightness_control.sh</code></p><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">set</span> -efile<span class="token operator">=</span><span class="token string">"/sys/class/backlight/intel_backlight/brightness"</span>current<span class="token operator">=</span><span class="token punctuation">$(</span>cat <span class="token string">"<span class="token variable">$file</span>"</span><span class="token punctuation">)</span>new<span class="token operator">=</span><span class="token string">"<span class="token variable">$current</span>"</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"-inc"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>  new<span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> current <span class="token operator">+</span> $<span class="token number">2</span> <span class="token variable">))</span></span>  status<span class="token operator">=</span><span class="token string">"Up"</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"-dec"</span> <span class="token punctuation">]</span><span class="token keyword">then</span>  <span class="token keyword">if</span> <span class="token punctuation">[</span> current <span class="token operator">&lt;</span> 100 <span class="token punctuation">]</span>  <span class="token keyword">then</span>    new<span class="token operator">=</span><span class="token string">"50"</span>  <span class="token keyword">else</span>    new<span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> current <span class="token operator">-</span> $<span class="token number">2</span> <span class="token variable">))</span></span>  <span class="token keyword">fi</span>  status<span class="token operator">=</span><span class="token string">"Down"</span><span class="token keyword">fi</span><span class="token keyword">echo</span> <span class="token string">"<span class="token variable">$new</span>"</span> <span class="token operator">|</span> <span class="token function">tee</span> <span class="token string">"<span class="token variable">$file</span>"</span>brightness<span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>light -G<span class="token variable">`</span></span><span class="token function">notify-send</span> <span class="token string">"Brightness <span class="token variable">$status</span>(<span class="token variable">$brightness</span>%)"</span></code></pre><p>Remember put it in your <code>/usr/bin/</code>.</p><p>Then do <code>sudo chmod 777 /sys/class/backlight/intel_backlight/brightness</code> . The last thing is adding the following lines to <code>.config/i3/config</code> .</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Screen brightness controls</span>bindsym XF86MonBrightnessUp <span class="token function">exec</span> <span class="token string">"intel_brightness_control.sh -inc 100"</span>bindsym XF86MonBrightnessDown <span class="token function">exec</span> <span class="token string">"intel_brightness_control.sh -dec 100"</span></code></pre><h3 id="9-Bluetooth"><a href="#9-Bluetooth" class="headerlink" title="9. Bluetooth"></a>9. Bluetooth</h3><ul><li>Install <strong>bluez</strong> , <strong>bluez-utils</strong></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S bluez bluez-utils</code></pre><ul><li>The generic Bluetooth driver is the <code>btusb</code> Kernel module. Use <code>lsmod</code> to check whether that module is loaded. </li></ul><p><img src="11.png" alt="btusb module"><br>  If it’s not, do <code>modprobe btusb</code> to load the moudle.</p><ul><li>Start / Enable</li></ul><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> bluetooth.servicesystemctl start bluetooth.service</code></pre><ul><li>Auto power-on after boot</li></ul><p>Add the line <code>AutoEnable=true</code> in <code>/etc/bluetooth/main.conf</code> at the bottom in the <code>[Policy]</code> section.</p><ul><li>Discoverable on startup</li></ul><pre class=" language-bash"><code class="language-bash">/etc/bluetooth/main.conf<span class="token punctuation">[</span>General<span class="token punctuation">]</span>DiscoverableTimeout <span class="token operator">=</span> 0Discoverable<span class="token operator">=</span>true</code></pre><ul><li>Install <strong>pulseaudio-bluetooth</strong> to use audio equipment like bluetooth headphones or speakers.</li></ul><p><a href="https://wiki.archlinux.org/index.php/Bluetooth_headset" target="_blank" rel="noopener">Bluetooth headset</a> </p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S pulseaudio-bluetooth</code></pre><ul><li>Install <a href="https://github.com/blueman-project/blueman" target="_blank" rel="noopener">blueman</a> </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S blueman</code></pre><ol><li><code>blueman-applet</code> to use.</li><li>add <code>exec --no-startup-id blueman-applet</code> to <code>~/.config/i3/config</code> to auto start <code>blueman-applet</code> .</li></ol><h3 id="10-Notify-Dunst"><a href="#10-Notify-Dunst" class="headerlink" title="10. Notify(Dunst)"></a>10. Notify(Dunst)</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S libnotify dunst</code></pre><p>Create <code>org.freedesktop.Notifications.service</code> in <code>/usr/share/dbus-1/services/</code> folder. Add the following lines.</p><pre><code>[D-BUS Service]Name.org.freedesktop.NotificationsExec=/usr/local/bin/dunst</code></pre><p>An example configuration file is included at <code>/usr/local/share/dunst/dunstrc</code> . Copy this file to <code>~/.config/dunst/dunstrc</code> and edit it accordingly.</p><p><a href="https://github.com/liuyaanng/Arch_linux/tree/master/dunst" target="_blank" rel="noopener">My Dunstrc</a> </p><p>Use <code>notify-send &quot;Hello, world!&quot;</code> to test.</p><p><img src="10.png" alt="Dunst"> </p><h3 id="11-Shutdown-Reboot-LockScreen"><a href="#11-Shutdown-Reboot-LockScreen" class="headerlink" title="11. Shutdown Reboot LockScreen"></a>11. Shutdown Reboot LockScreen</h3><ul><li>Create a script named <code>i3exit</code> . Make sure you have <code>polkit</code> installed. </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span>lock<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    i3lock<span class="token punctuation">}</span><span class="token keyword">case</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token keyword">in</span>    lock<span class="token punctuation">)</span>        blurlock        <span class="token punctuation">;</span><span class="token punctuation">;</span>    logout<span class="token punctuation">)</span>        i3-msg <span class="token keyword">exit</span>        <span class="token punctuation">;</span><span class="token punctuation">;</span>    suspend<span class="token punctuation">)</span>        blurlock <span class="token operator">&amp;&amp;</span> systemctl <span class="token function">suspend</span>        <span class="token punctuation">;</span><span class="token punctuation">;</span>    hibernate<span class="token punctuation">)</span>        blurlock <span class="token operator">&amp;&amp;</span> systemctl hibernate        <span class="token punctuation">;</span><span class="token punctuation">;</span>    reboot<span class="token punctuation">)</span>        systemctl <span class="token function">reboot</span>        <span class="token punctuation">;</span><span class="token punctuation">;</span>    shutdown<span class="token punctuation">)</span>        systemctl poweroff        <span class="token punctuation">;</span><span class="token punctuation">;</span>    *<span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token string">"Usage: <span class="token variable">$0</span> {lock|logout|suspend|hibernate|reboot|shutdown}"</span>        <span class="token keyword">exit</span> 2esac<span class="token keyword">exit</span> 0</code></pre><p>Do <code>chmod +x</code> and put it in <code>$PATH</code> ( <code>/usr/bin/</code> ) .</p><ul><li>Add the following lines to <code>.config/i3/config</code></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token keyword">set</span> <span class="token variable">$mode_system</span> System <span class="token punctuation">(</span>l<span class="token punctuation">)</span> lock, <span class="token punctuation">(</span>e<span class="token punctuation">)</span> logout, <span class="token punctuation">(</span>s<span class="token punctuation">)</span> suspend, <span class="token punctuation">(</span>h<span class="token punctuation">)</span> hibernate, <span class="token punctuation">(</span>r<span class="token punctuation">)</span> reboot, <span class="token punctuation">(</span>Shift+s<span class="token punctuation">)</span> <span class="token function">shutdown</span>mode <span class="token string">"<span class="token variable">$mode_system</span>"</span> <span class="token punctuation">{</span>    bindsym l <span class="token function">exec</span> --no-startup-id i3exit lock, mode <span class="token string">"default"</span>    bindsym e <span class="token function">exec</span> --no-startup-id i3exit logout, mode <span class="token string">"default"</span>    bindsym s <span class="token function">exec</span> --no-startup-id i3exit suspend, mode <span class="token string">"default"</span>    bindsym h <span class="token function">exec</span> --no-startup-id i3exit hibernate, mode <span class="token string">"default"</span>    bindsym r <span class="token function">exec</span> --no-startup-id i3exit reboot, mode <span class="token string">"default"</span>    bindsym Shift+s <span class="token function">exec</span> --no-startup-id i3exit shutdown, mode <span class="token string">"default"</span>      <span class="token comment" spellcheck="true"># back to normal: Enter or Escape</span>    bindsym Return mode <span class="token string">"default"</span>    bindsym Escape mode <span class="token string">"default"</span><span class="token punctuation">}</span>bindsym <span class="token variable">$mod</span>+Pause mode <span class="token string">"<span class="token variable">$mode_system</span>"</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Arch </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili-Evolved</title>
      <link href="/2019/09/21/bilibili-evolved/"/>
      <url>/2019/09/21/bilibili-evolved/</url>
      
        <content type="html"><![CDATA[<h2 id="Bilibili-Evolved"><a href="#Bilibili-Evolved" class="headerlink" title="Bilibili-Evolved"></a>Bilibili-Evolved</h2><p><img src="1.png" alt><br><img src="2.png" alt><br><img src="3.png" alt><br><img src="4.png" alt></p><h3 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h3><ul><li><p>You should install <a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a> first.</p></li><li><p><a href="https://greasyfork.org/en/scripts/373563-bilibili-evolved" target="_blank" rel="noopener">Bilibili-Evolved</a></p></li></ul><p>Please access <a href="https://github.com/the1812/Bilibili-Evolved" target="_blank" rel="noopener">GitHub</a> to view how to use it.</p><h3 id="2-Download-videos"><a href="#2-Download-videos" class="headerlink" title="2. Download videos"></a>2. Download videos</h3><h4 id="2-1-Download-single-video"><a href="#2-1-Download-single-video" class="headerlink" title="2.1 Download single video."></a>2.1 Download single video.</h4><p><img src="5.png" alt><br><img src="6.png" alt></p><h4 id="2-2-Batch-export-with-aria2"><a href="#2-2-Batch-export-with-aria2" class="headerlink" title="2.2 Batch export(with aria2)."></a>2.2 Batch export(with aria2).</h4><ul><li>Install aria2.</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S aria2</code></pre><ul><li>export aria2(a txt file)</li></ul><p><img src="7.png" alt></p><ul><li>Download videos in current directory.</li></ul><pre class=" language-bash"><code class="language-bash">aria2c -i Download.txt</code></pre><h3 id="3-Convert-video-files"><a href="#3-Convert-video-files" class="headerlink" title="3. Convert video files."></a>3. Convert video files.</h3><p>The default video files format is <code>flv</code>.<br>I recommend using <a href="http://ffmpeg.org/" target="_blank" rel="noopener">ffmpeg</a> to convert video files format on Linux.</p><pre class=" language-bash"><code class="language-bash">ffmpeg -i input.flv output.mp4</code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili.com </tag>
            
            <tag> Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git &amp; Github</title>
      <link href="/2019/09/18/git-github/"/>
      <url>/2019/09/18/git-github/</url>
      
        <content type="html"><![CDATA[<h3 id="1-When-i-download-files-from-GitHub-Failed-to-connect-to-127-0-0-1-port-1080-Connection-refused"><a href="#1-When-i-download-files-from-GitHub-Failed-to-connect-to-127-0-0-1-port-1080-Connection-refused" class="headerlink" title="1. When i download files from GitHub, Failed to connect to 127.0.0.1 port 1080: Connection refused"></a>1. When i download files from GitHub, <code>Failed to connect to 127.0.0.1 port 1080: Connection refused</code></h3><ol><li>Find wheather you are using proxy server or not.</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global http.proxy</code></pre><ol start="2"><li>Cancel the proxy server.</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global --unset http.proxy</code></pre><h3 id="2-Clone-with-SSH-Github-guide"><a href="#2-Clone-with-SSH-Github-guide" class="headerlink" title="2. Clone with SSH (Github guide)"></a>2. Clone with SSH (<a href="https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh" target="_blank" rel="noopener">Github guide</a>)</h3><ul><li>Install Openssh</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S openssh</code></pre><ul><li>Generating a new SSH key</li></ul><pre class=" language-bash"><code class="language-bash">ssh-keygen</code></pre><p><img src="https://i.loli.net/2019/12/06/foZjquaH75Jnw3Y.png" alt> </p><pre class=" language-bash"><code class="language-bash">tree .ssh</code></pre><p><img src="https://i.loli.net/2019/12/06/oKIUzYLRcp4OhyE.png" alt> </p><ul><li>Copy the SSH key to your clipboard</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> .ssh/id_rsa.pub</code></pre><ul><li>In the upper-right corner of any page, click your profile photo, then click <strong>Settings</strong></li></ul><p><img src="https://i.loli.net/2019/12/06/hIA7KpbfmYMJ14j.png" alt></p><ul><li><p>In the user settings sidebar, click <strong>SSH and GPG keys</strong></p></li><li><p>Click <strong>New SSH key</strong> or <strong>Add SSH key</strong>.</p></li><li><p>In the “Title” field, add a descriptive label for the new key. For example, if you’re using arch linux, you might call this key “Arch linux”</p></li><li><p>Paste your key into the “Key” field.</p></li></ul><p><img src="https://i.loli.net/2019/12/06/vjZVS19MN2A4hoD.png" alt> </p><ul><li>If prompted, confirm your GitHub password.</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda</title>
      <link href="/2019/09/18/anaconda/"/>
      <url>/2019/09/18/anaconda/</url>
      
        <content type="html"><![CDATA[<h2 id="Install-Guide"><a href="#Install-Guide" class="headerlink" title="Install Guide"></a>Install Guide</h2><p>You probably need proxy: <a href="https://godliuyang.wang/2020/02/04/about-proxy/" target="_blank" rel="noopener">About Proxy</a> </p><h3 id="1-Download-Anaconda"><a href="#1-Download-Anaconda" class="headerlink" title="1. Download Anaconda"></a>1. Download <code>Anaconda</code></h3><p>Click here to download <a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">Anaconda</a></p><h3 id="2-Install-Anaconda"><a href="#2-Install-Anaconda" class="headerlink" title="2. Install Anaconda"></a>2. Install <code>Anaconda</code></h3><pre class=" language-bash"><code class="language-bash"><span class="token function">bash</span> ~/Downloads/Anaconda3-2019.07-Linux-x86_64.sh</code></pre><p><img src="3.png" alt></p><p>Press ENTER</p><p><img src="4.png" alt></p><p>input yes </p><p><img src="5.png" alt></p><p>Press ENTER<br>A few minutes later…….</p><p><img src="6.png" alt></p><p>input yes</p><p><img src="7.png" alt></p><p>successful installation.</p><p>You can use <code>conda -V</code> to check the version of anaconda.</p><h3 id="3-Bash-user"><a href="#3-Bash-user" class="headerlink" title="3. Bash user"></a>3. Bash user</h3><pre class=" language-bash"><code class="language-bash">vim ~/.bashrc</code></pre><p>add the following line to your ~/.bashrc.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token string">"/home/xupp/anaconda3/bin:<span class="token variable">$PATH</span>"</span></code></pre><p>Reboot your terminal.</p><h3 id="4-Fish-user"><a href="#4-Fish-user" class="headerlink" title="4. Fish user"></a>4. Fish user</h3><p>If your shell is <strong>fish</strong>, you probably need to configure your environment variable.</p><p><img src="8.png" alt></p><p>I use <code>set</code> command to do this.</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">set</span> -xg</code></pre><p>Prints all global, exported variables.</p><p><img src="1.png" alt></p><p>I find the user name of anaconda path in PATH is wrong.<br>I don’t know why it is, but i know i should correct it.</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">set</span> PATH<span class="token punctuation">[</span>1<span class="token punctuation">]</span> /home/kevin/anaconda3/bin</code></pre><p>it works.</p><p><img src="9.png" alt></p><p><img src="10.png" alt></p><h2 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h2><h3 id="1-Create-Python-environment"><a href="#1-Create-Python-environment" class="headerlink" title="1. Create Python environment"></a>1. Create Python environment</h3><pre class=" language-bash"><code class="language-bash">conda create --name python37 python<span class="token operator">=</span>3.7</code></pre><h3 id="2-Check-Python-Environment-you-have-created"><a href="#2-Check-Python-Environment-you-have-created" class="headerlink" title="2. Check Python Environment you have created."></a>2. Check Python Environment you have created.</h3><pre class=" language-bash"><code class="language-bash">conda info --envs</code></pre><p><img src="11.png" alt> </p><p>Where * indicates the current Python environment</p><h3 id="3-Modify-Python-environment"><a href="#3-Modify-Python-environment" class="headerlink" title="3. Modify Python environment"></a>3. Modify Python environment</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> activate python37</code></pre><p>and modify default Python environment</p><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> deactivate</code></pre><h3 id="4-Delate-Python-environment"><a href="#4-Delate-Python-environment" class="headerlink" title="4. Delate Python environment"></a>4. Delate Python environment</h3><pre class=" language-bash"><code class="language-bash">conda remove --name python37 --all</code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Anaconda3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Vim Config</title>
      <link href="/2019/09/12/my-vim-config/"/>
      <url>/2019/09/12/my-vim-config/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Manjaro i3wm 高效率环境配置篇(持续更新)</title>
      <link href="/2019/08/24/manjaro-i3wm-huan-jing-pei-zhi-pian/"/>
      <url>/2019/08/24/manjaro-i3wm-huan-jing-pei-zhi-pian/</url>
      
        <content type="html"><![CDATA[<p><img src="4.png" alt><br>Manjaro是一款基于Arch Linux、对用户友好、全球排名第1的Linux发行版<br>使用它是因为 AUR软件仓库有着世界上最齐全的Linux软件，万物皆可 pacman ,arch的wiki绝对是我见过的最详细的linux发行版的”说明书”, 在这里基本能解决我所有的问题, 另，作为基于Arch的发行版，每日一 <code>sudo pacman -Syu</code>简直不要太爽啊！<br>有时间一定要尝试一下 原生Arch(有生之年系列，趁还折腾的动)</p><h2 id="1-系统安装"><a href="#1-系统安装" class="headerlink" title="1. 系统安装"></a>1. 系统安装</h2><h3 id="1-1-ISO文件下载"><a href="#1-1-ISO文件下载" class="headerlink" title="1.1 ISO文件下载"></a>1.1 ISO文件下载</h3><p><a href="https://www.manjaro.org/" target="_blank" rel="noopener">Manjaro官网</a></p><p>Manjaro i3属于社区版本<br><a href="https://osdn.net/projects/manjaro-community/storage/i3/18.0.4/manjaro-i3-18.0.4-stable-x86_64.iso/" target="_blank" rel="noopener">Download manjaro-i3-18.0.4-stable-x86_64.iso</a></p><h3 id="1-2-U盘启动盘制作"><a href="#1-2-U盘启动盘制作" class="headerlink" title="1.2 U盘启动盘制作"></a>1.2 U盘启动盘制作</h3><p>首先准备一个容量大于4G的U盘，在制作启动盘之前请先把里面的资料转存到别处，因为此项操作会格式化U盘且不可恢复。<br>刻录工具有很多，</p><ul><li><a href="http://cn.ezbsystems.com/dl2.php?file=uiso9_cn.exe" target="_blank" rel="noopener">UltralISO</a></li><li><a href="http://cdimage.deepin.com/applications/deepin-boot-maker/windows/deepin-boot-maker.exe" target="_blank" rel="noopener">深度启动盘制作工具</a> 深度科技，很简洁的一个工具</li><li><a href="https://github.com/pbatard/rufus/releases/download/v3.6/rufus-3.6.exe" target="_blank" rel="noopener">Rufus</a></li></ul><p>按照软件的操作步骤制作启动盘<br>注：若遇到启动盘系统安装的过程中遇到启动盘不可用则使用 <strong>Rufus</strong> 使用DD镜像模式制作<br><img src="1.png" alt></p><h3 id="1-3-系统安装"><a href="#1-3-系统安装" class="headerlink" title="1.3 系统安装"></a>1.3 系统安装</h3><p>安装过程很简单，参考下面这篇博客<br><a href="https://www.jianshu.com/p/e555a079f78a" target="_blank" rel="noopener">Manjaro Linux i3 安装笔记</a></p><p>安装时语言选择  <strong>简体中文</strong>即可</p><h2 id="2-中文环境配置"><a href="#2-中文环境配置" class="headerlink" title="2. 中文环境配置"></a>2. 中文环境配置</h2><h3 id="2-1-更换Linux国内源"><a href="#2-1-更换Linux国内源" class="headerlink" title="2.1 更换Linux国内源"></a>2.1 更换Linux国内源</h3><p>Manjaro 默认的更新源在国外，没翻墙的宝宝无法更新，这里先换一下更新源</p><h4 id="2-1-1-更新镜像排名"><a href="#2-1-1-更新镜像排名" class="headerlink" title="2.1.1 更新镜像排名"></a>2.1.1 更新镜像排名</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman-mirrors -i -c China -m rank //更新镜像排名</code></pre><p>之后自己选择几个镜像，推荐ustc和tuna的镜像源</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/pacman.d/mirrorlist //查看选择的源<span class="token function">sudo</span> pacman -Syy  //更新数据源</code></pre><h4 id="2-1-2-设置Archlinuxcn源"><a href="#2-1-2-设置Archlinuxcn源" class="headerlink" title="2.1.2 设置Archlinuxcn源"></a>2.1.2 设置Archlinuxcn源</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/pacman.conf</code></pre><p>在文件末尾添加如下:</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>archlinuxcn<span class="token punctuation">]</span>SigLevel <span class="token operator">=</span> Optional TrustedOnly<span class="token comment" spellcheck="true">#中科大源</span>Server <span class="token operator">=</span> https://mirrors.ustc.edu.cn/archlinuxcn/<span class="token variable">$arch</span><span class="token comment" spellcheck="true">#清华源</span>Server <span class="token operator">=</span> http://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="token variable">$arch</span><span class="token punctuation">[</span>antergos<span class="token punctuation">]</span>SigLevel <span class="token operator">=</span> TrustAllServer <span class="token operator">=</span> https://mirrors.ustc.edu.cn/antergos/<span class="token variable">$repo</span>/<span class="token variable">$arch</span>Server <span class="token operator">=</span> http://mirrors.tuna.tsinghua.edu.cn/antergos/<span class="token variable">$repo</span>/<span class="token variable">$arch</span><span class="token punctuation">[</span>arch4edu<span class="token punctuation">]</span>SigLevel <span class="token operator">=</span> TrustAllServer <span class="token operator">=</span> http://mirrors.tuna.tsinghua.edu.cn/arch4edu/<span class="token variable">$arch</span></code></pre><h4 id="2-1-3-导入GPG-key"><a href="#2-1-3-导入GPG-key" class="headerlink" title="2.1.3 导入GPG key"></a>2.1.3 导入GPG key</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Syy //更新数据源<span class="token function">sudo</span> pacman -S archlinuxcn-keyring //安装导入GPG key<span class="token function">sudo</span> pacman -S antergos-keyrin</code></pre><h4 id="2-1-4-更新系统"><a href="#2-1-4-更新系统" class="headerlink" title="2.1.4 更新系统"></a>2.1.4 更新系统</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Syu</code></pre><h3 id="2-2-解决桌面中文显示方块问题"><a href="#2-2-解决桌面中文显示方块问题" class="headerlink" title="2.2 解决桌面中文显示方块问题"></a>2.2 解决桌面中文显示方块问题</h3><p>若遇到桌面时间中文部分显示为 <strong>方块</strong>     </p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /usr/share/conky/conky_maia</code></pre><p>将 <strong>conky.text</strong> 的前四行字体改为 <strong>anti</strong> 即可</p><h3 id="2-3-中文输入法"><a href="#2-3-中文输入法" class="headerlink" title="2.3 中文输入法"></a>2.3 中文输入法</h3><p>先安装fcitx</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S fcitx fcitx-im fcitx-configtool</code></pre><p>安装完fcitx之后，创建.xprofile文件</p><pre class=" language-bash"><code class="language-bash">vim ~/.xprofile</code></pre><p>在里面添加如下内容:</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#fcitx</span><span class="token function">export</span> GTK_IM_MODULE<span class="token operator">=</span>fcitx <span class="token function">export</span> QT_IM_MODULE<span class="token operator">=</span>fcitx <span class="token function">export</span> XMODIFIERS<span class="token operator">=</span><span class="token string">"@im=fcitx"</span></code></pre><p>之后安装中文输入法，搜狗拼音貌似对arch的支持不太好，所以我们选择谷歌拼音</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S fcitx-googlepinyin</code></pre><p>之后在终端运行 <code>$ fcitx</code> 在图形化界面的配置文件中配置输入法即可，配置快捷键<br><img src="2.png" alt><br><img src="3.png" alt></p><p>若中文输入法开机无法自启动，则执行如下操作</p><pre class=" language-bash"><code class="language-bash">vim ~/.i3/config</code></pre><p>添加如下内容:</p><p><code>exec_always fcitx</code></p><h2 id="3-高效率软件以及配置"><a href="#3-高效率软件以及配置" class="headerlink" title="3. 高效率软件以及配置"></a>3. 高效率软件以及配置</h2><h3 id="3-1-软件"><a href="#3-1-软件" class="headerlink" title="3.1 软件"></a>3.1 软件</h3><h4 id="3-1-1-Alacritty"><a href="#3-1-1-Alacritty" class="headerlink" title="3.1.1 Alacritty"></a>3.1.1 Alacritty</h4><p>Alacritty 是一个免费的开源，快速，跨平台的终端仿真器，它使用GPU进行渲染，我使用tree命令跑了一下，确实速度快。kitty也是一款优秀的终端，不过它的配置稍麻烦，感兴趣的可以自行Google.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S alacritty</code></pre><h4 id="3-1-2-fish-amp-oh-my-fish-omf"><a href="#3-1-2-fish-amp-oh-my-fish-omf" class="headerlink" title="3.1.2 fish &amp; oh-my-fish(omf)"></a>3.1.2 fish &amp; oh-my-fish(omf)</h4><ul><li>fish是一个智能且用户友好的命令行shell，适用于macOS，Linux和其他家族。fish包含语法突出显示，自动提示类型和精美的选项卡完成等功能，无需配置。<br>Terminal下默认的SHELL是bash, 但bash作为你经常使用的工具来说一点都不便捷,相信有很多人都用过另一款shell,它的名字是<strong>zsh</strong>，以及<strong>oh-my-zsh</strong>，我也用了一段时间的zsh，在用的过程中我发现它有时候运行贼慢，忍不了，而且配置虽说有oh-my-zsh管理，但终归不是傻瓜式工具，直到有一天我发现了 <strong>fish</strong>,官网号称是一个专为90后设计的shell。<br>安装很简单:</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S fish</code></pre><p>终端输入<code>fish</code>即可进入</p><ul><li>查看已经安装的shell</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> /etc/shells</code></pre><p><img src="12.png" alt></p><ul><li>修改默认shell</li></ul><p>看一下上一步输出的<code>fish</code>的位置，然后执行</p><pre class=" language-bash"><code class="language-bash">chsh -s usr/bin/fish</code></pre><p><img src="13.png" alt><br>之后重启终端,shell就默认为fish了<br><img src="14.png" alt></p><p>配置文件的位置是<code>/home/kevin/.config/fish/functions/fish_prompt.fish</code>，可以在这里设置替换命令，提高效率，举个例子:<br><img src="18.png" alt></p><ul><li>oh-my-fish是一个 Fishshell 框架，允许你安装扩展或更改你的 shell 外观的软件包。它简单易用，快速可扩展。使用 omf，你可以根据你的想法，很容易地安装主题，丰富你的外观和安装插件来调整你的 Fish shell。    </li><li>安装omf<br>在fish shell里执行</li></ul><pre class=" language-bash"><code class="language-bash">curl -L https://get.oh-my.fish <span class="token operator">|</span> fish</code></pre><ul><li>列出所有的安装包</li></ul><pre class=" language-bash"><code class="language-bash">omf list</code></pre><p>这条命令会列出一安装的主题和插件</p><p><img src="15.png" alt></p><ul><li>列出已安装主题</li></ul><pre class=" language-bash"><code class="language-bash">omf theme</code></pre><ul><li>安装一个新主题<br>我现在用的主题叫 ays<pre class=" language-bash"><code class="language-bash">omf <span class="token function">install</span> ays</code></pre></li><li>改变主题</li></ul><pre class=" language-bash"><code class="language-bash">omf theme ays</code></pre><ul><li>卸载oh-my-fish</li></ul><pre class=" language-bash"><code class="language-bash">omf destroy</code></pre><ul><li><p>Fish 运行Bash commands<br>例如 在fish 不能运行 time 命令，以下是解决办法    </p><ul><li><p>在 <code>fish/functions/</code> 目录下创建 <code>time.fish</code> 文件，在里面输入    </p><pre><code>function time --description &quot;alias time bash -c time&quot; bash -c &quot;time $argv&quot;;end</code></pre></li></ul></li></ul><p>其他具体功能见<a href="https://github.com/oh-my-fish/oh-my-fish" target="_blank" rel="noopener">oh-my-fish</a></p><h4 id="3-1-3-Chromium"><a href="#3-1-3-Chromium" class="headerlink" title="3.1.3 Chromium"></a>3.1.3 Chromium</h4><p>安装方式:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S chromium</code></pre><h4 id="3-1-4-nitrogen"><a href="#3-1-4-nitrogen" class="headerlink" title="3.1.4 nitrogen"></a>3.1.4 nitrogen</h4><p>一款可视化换壁纸的软件,当然<strong>feh</strong>也是一款优秀的壁纸切换软件，教程很多，这里不再说了</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S nitrogen</code></pre><p><img src="5.png" alt></p><h4 id="3-1-5-neofetch"><a href="#3-1-5-neofetch" class="headerlink" title="3.1.5 neofetch"></a>3.1.5 neofetch</h4><p>neofetch是一个个性化显示Linux系统信息的工具</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S neofetch</code></pre><p><img src="19.png" alt></p><h4 id="3-1-6-vim"><a href="#3-1-6-vim" class="headerlink" title="3.1.6 vim"></a>3.1.6 vim</h4><p><img src="6.png" alt></p><p>文本/代码编辑中最最最为优秀经典的上古神器,之后我会写一个调教Vim的教程</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S vim </code></pre><h4 id="3-1-7-albert"><a href="#3-1-7-albert" class="headerlink" title="3.1.7 albert"></a>3.1.7 albert</h4><p><img src="7.png" alt><br>一款软件/文件/搜索 启动器</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S albert</code></pre><p>第一次运行会提示你设置一下</p><p><img src="8.png" alt><br><img src="9.png" alt></p><h4 id="3-1-8-iease-music"><a href="#3-1-8-iease-music" class="headerlink" title="3.1.8 iease-music"></a>3.1.8 iease-music</h4><p>网易云音乐最漂亮的第三方客户端！</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S iease-music</code></pre><p><img src="10.png" alt></p><h4 id="3-1-9-deepin-screenshot"><a href="#3-1-9-deepin-screenshot" class="headerlink" title="3.1.9 deepin-screenshot"></a>3.1.9 deepin-screenshot</h4><p>深度截图</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S deepin-screenshot</code></pre><h4 id="3-1-10-shadowsocks-qt5"><a href="#3-1-10-shadowsocks-qt5" class="headerlink" title="3.1.10 shadowsocks-qt5"></a>3.1.10 shadowsocks-qt5</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S shadowsocks-qt5</code></pre><h4 id="3-1-11-thefuck"><a href="#3-1-11-thefuck" class="headerlink" title="3.1.11 thefuck"></a>3.1.11 thefuck</h4><p>自从用了”Thefuck”,妈妈再也不用担心我敲错命令了。<br>有了它，万物皆可fffffffffuck!</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S thefuck</code></pre><p><img src="11.png" alt></p><h4 id="3-1-12-compton"><a href="#3-1-12-compton" class="headerlink" title="3.1.12 compton"></a>3.1.12 compton</h4><p>设置窗口半透明+毛玻璃效果</p><p><img src="16.png" alt></p><p>Manjaro i3 自带的有compton，不过这个只能做到半透明而没有毛玻璃效果，我使用的是<a href="https://github.com/tryone144/compton" target="_blank" rel="noopener">Compton</a>,下面详细介绍一下安装过程</p><ol><li>卸载原有的compton</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -R compton</code></pre><p>若遇到依赖问题无法卸载，则</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Rc compton</code></pre><ol start="2"><li>clone仓库</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:liuyaanng/compton.git</code></pre><ol start="3"><li>安装</li></ol><p>具体内容参考<a href="https://github.com/liuyaanng/compton/blob/dual_kawase/README.md" target="_blank" rel="noopener">README</a><br>安装前要确保下列依赖已经安装。<br>其实大部分都已经安装,只有个别没有，若下面安装不成功，则按提示把依赖装上即可，有问题也可以在issues上查看</p><p><img src="17.png" alt></p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> compton<span class="token comment" spellcheck="true"># Make the main program</span><span class="token function">make</span><span class="token comment" spellcheck="true"># Make the man page</span><span class="token function">make</span> docs<span class="token comment" spellcheck="true"># Install</span><span class="token function">make</span> <span class="token function">install</span></code></pre><ol start="4"><li>配置</li></ol><p>配置信息在<a href>.config</a></p><h4 id="3-1-13-deepin-file-manager"><a href="#3-1-13-deepin-file-manager" class="headerlink" title="3.1.13 deepin-file-manager"></a>3.1.13 deepin-file-manager</h4><p>默认的 <code>pcmanfm</code> 竟然没有搜索功能，这不能忍啊<br>我使用 <code>deepin-file-manager</code> 来代替默认的 <code>pcmanfm</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S deepin-file-manager</code></pre><p>在配置文件里</p><p><img src="20.png" alt></p><h3 id="3-2-i3的配置"><a href="#3-2-i3的配置" class="headerlink" title="3.2 i3的配置"></a>3.2 i3的配置</h3><p>i3的配置文件在 <code>~/.i3/config</code></p><p>里面的配置信息介绍的很详细,需要更详细的信息你可以阅读官方<a href="https://i3wm.org/docs/userguide.html" target="_blank" rel="noopener">userguide</a></p><p> 首先在<code>Autoapplications</code>处添加自启动的应用</p><pre class=" language-bash"><code class="language-bash">exec_always fcitxexec_always albert</code></pre><ul><li>把系统默认terminal换成<code>alacritty</code><br>在 <code>start a terminal</code>处将原来的代码注释掉，加上以下语句</li></ul><pre class=" language-bash"><code class="language-bash">bindsym <span class="token variable">$mod</span>+Return <span class="token function">exec</span> alacritty</code></pre><ul><li>设置软件启动快捷键</li></ul><p>在配置文件中添加</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">set</span> <span class="token variable">$mod</span> Mod4<span class="token keyword">set</span> <span class="token variable">$mod1</span> Mod1</code></pre><p>mod在这里设置的是键盘的<code>Super</code>键<br>mod1在这里设置的是<code>Alt</code>键</p><pre class=" language-bash"><code class="language-bash">bindsym <span class="token variable">$mod</span>+c <span class="token function">exec</span> chromiumbindsym <span class="token variable">$mod</span>+p <span class="token function">exec</span> nitrogenbindsym <span class="token variable">$mod1</span>+m <span class="token function">exec</span> iease-musicbindsym <span class="token variable">$mod1</span>+Shift+a <span class="token function">exec</span> deepin-screenshot</code></pre><ul><li>窗口之间的间距通过i3-gaps来设置，若没有安装，则</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S i3-gaps</code></pre><p>在配置文件中加入</p><pre class=" language-bash"><code class="language-bash">gaps inner 16gaps outer 0</code></pre><p>可以根据自己喜好调整数值</p><ul><li>xbacklight config</li></ul><p>install <code>xorg-xbacklight</code> first</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S xorg-xbacklight </code></pre><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h4 id="彻底解决蜂鸣问题"><a href="#彻底解决蜂鸣问题" class="headerlink" title="彻底解决蜂鸣问题"></a>彻底解决蜂鸣问题</h4><p>由于蜂鸣是由主板发出来的声音，故不能通过调节音量来消除此声音，要从源头上解决</p><ul><li>关闭终端下Tab键的蜂鸣提示</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> vim /etc/inputrc</code></pre><p>将 <code>set bell-style none</code> 前的注释去掉</p><ul><li>关闭vim中错误提示蜂鸣声</li></ul><pre class=" language-bash"><code class="language-bash">vim .vim/vimrc</code></pre><p>在里面加入  <code>set vb t_vb=</code></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Manjaro </tag>
            
            <tag> i3wm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Face Recognition</title>
      <link href="/2019/08/10/face-recognition-with-opencv/"/>
      <url>/2019/08/10/face-recognition-with-opencv/</url>
      
        <content type="html"><![CDATA[<h1 id="Face-Recognition-with-OpenCV"><a href="#Face-Recognition-with-OpenCV" class="headerlink" title="Face Recognition with OpenCV"></a>Face Recognition with OpenCV</h1><h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>My Particular Environment:<br>Ubuntu16.04 + OpenCV3.3.0 + OpenCV_contrib3.3.0</p><h2 id="1-Image-Acquisition-and-Face-Database-Creation"><a href="#1-Image-Acquisition-and-Face-Database-Creation" class="headerlink" title="1. Image Acquisition and Face Database Creation"></a>1. Image Acquisition and Face Database Creation</h2><h3 id="1-1-Image-Acquisition"><a href="#1-1-Image-Acquisition" class="headerlink" title="1.1 Image Acquisition"></a>1.1 Image Acquisition</h3><h4 id="1-1-1-Steps-and-methods"><a href="#1-1-1-Steps-and-methods" class="headerlink" title="1.1.1 Steps and methods"></a>1.1.1 Steps and methods</h4><ol><li>Open the camera and capture images;</li><li>Loading the face classifier;</li><li>Start face detection, frame the face part and display;</li><li>Under the condition that the face is detected, take a picture with one button;</li><li>For the face part, resize and write the image file in the specified directory;</li></ol><h4 id="1-1-2-Code"><a href="#1-1-2-Code" class="headerlink" title="1.1.2 Code"></a>1.1.2 Code</h4><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/imgproc/imgproc.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/objdetect/objdetect.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/face.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;fstream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;sstream></span> </span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token operator">::</span>face<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> CV_COLOR_GREEN cv::Scalar(0, 255, 0)</span><span class="token keyword">int</span> <span class="token function">resize_save</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> faceIn<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> path<span class="token punctuation">,</span> <span class="token keyword">int</span>  faceseq<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Input: current image, the path of file, the name or faceseq of images.</span><span class="token comment" spellcheck="true">//Output: None</span><span class="token comment" spellcheck="true">//Function: resize the current image to (92, 112), which is same to the train data.</span><span class="token keyword">int</span> <span class="token function">get_face</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Input: the path of file.</span><span class="token comment" spellcheck="true">//Output: None</span><span class="token comment" spellcheck="true">//Function: Use face_cascade to detect if there are faces in the window, and save the faces through function reszie_save.</span><span class="token keyword">int</span> <span class="token function">resize_save</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> faceIn<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> path<span class="token punctuation">,</span> <span class="token keyword">int</span>  faceseq<span class="token punctuation">)</span><span class="token punctuation">{</span>  string strname<span class="token punctuation">;</span>  Mat faceOut<span class="token punctuation">;</span>  <span class="token keyword">bool</span> ret<span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>faceIn<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"FaceIn is empty.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>faceIn<span class="token punctuation">.</span>cols <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">resize</span><span class="token punctuation">(</span>faceIn<span class="token punctuation">,</span> faceOut<span class="token punctuation">,</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//Resize and Keep a match with the train database.</span>    strname <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%s/%d.jpg"</span><span class="token punctuation">,</span> path<span class="token punctuation">,</span> faceseq<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//mkdir</span>    ret <span class="token operator">=</span> <span class="token function">imwrite</span><span class="token punctuation">(</span>strname<span class="token punctuation">,</span> faceOut<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//save image. Note the file suffix.</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Image write failed!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please check filename[%s] is legal!\n"</span><span class="token punctuation">,</span> strname<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>strname<span class="token punctuation">,</span> faceOut<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">get_face</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> path<span class="token punctuation">)</span><span class="token punctuation">{</span>  CascadeClassifier face_cascade<span class="token punctuation">;</span>  VideoCapture camera<span class="token punctuation">;</span>  <span class="token keyword">int</span> ret<span class="token punctuation">;</span>  Mat frame<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//camera frame</span>  vector<span class="token operator">&lt;</span>Rect<span class="token operator">></span> objects<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//The faces coordinates.</span>  Mat img_gary<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Gradation pictures.</span>  Mat faceImg<span class="token punctuation">;</span>  <span class="token keyword">int</span> faceNum <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//</span>  <span class="token keyword">char</span> key<span class="token punctuation">;</span>  camera<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>camera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Open camera failed."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Open camera succeed. "</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//Load the face cascadeclassifier.</span>  ret <span class="token operator">=</span> face_cascade<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"haarcascade_frontalface_alt2.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span><span class="token punctuation">{</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Load xml failed."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Load xml succeed."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    camera <span class="token operator">>></span> frame<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">continue</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">cvtColor</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> img_gary<span class="token punctuation">,</span> COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Transform frame as the gradation picture, note imshow is still the original frame.</span>    <span class="token function">equalizeHist</span><span class="token punctuation">(</span>img_gary<span class="token punctuation">,</span> img_gary<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Histogram equalization, which is helpful to improve the quality of pictures.</span>    <span class="token comment" spellcheck="true">//Face detection</span>    face_cascade<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>img_gary<span class="token punctuation">,</span> objects<span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> objects<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">rectangle</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> objects<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> CV_COLOR_GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"Camera"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>    key <span class="token operator">=</span> <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token string">'p'</span><span class="token operator">:</span> <span class="token comment" spellcheck="true">//tap 'P' to save.</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>objects<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          faceImg <span class="token operator">=</span> <span class="token function">frame</span><span class="token punctuation">(</span>objects<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          ret <span class="token operator">=</span> <span class="token function">resize_save</span><span class="token punctuation">(</span>faceImg<span class="token punctuation">,</span> path<span class="token punctuation">,</span> faceNum<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"resize_save succeed.\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>            faceNum<span class="token operator">++</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">27</span><span class="token operator">:</span>   <span class="token comment" spellcheck="true">//switch to ESC</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Esc ..."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"usage: %s &lt;path>\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token function">get_face</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="4.jpg" alt><br>Note:    </p><ol><li>After the compilation is successful, the execution executable file must provide parameters, which are the directories for storing the face image, and it must be an existing directory.(E.g: ./program_name Img/s41)    </li><li>Press the “P” button to take a photo and save the face. Press the “Esc” button to exit.</li></ol><h3 id="1-2-Face-Database-Creation"><a href="#1-2-Face-Database-Creation" class="headerlink" title="1.2 Face Database Creation"></a>1.2 Face Database Creation</h3><p>The official document provides a download of the face database, and i use the <a href="http://www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html" target="_blank" rel="noopener">AT&amp;T Facedatabase</a> to create my face database. I have updated this zip file to my github, you can download it from <a href="att_faces.zip">here</a> faster.<br>AT&amp;T Face Database is also known as the OCR face database, 40 people, 10 photos per person. The photos are token at different times, different lighting, different expressions(closed eyes, laughing or not laughing), different face details(with or without glasses). All images were captured on a dark , even background with a vertical face o the front(some with a slight rotation).<br>You can download the compressed package from the website, and first extract the att_faces folder. There are 40 folders under the folder, which named from “s1” to “s40”. Each folder has the same person’s photos with different expressions, and there are 10 face photos.<br>The format of these images is “.pgm”<br><img src="1.png" alt><br><img src="2.png" alt></p><p>Note:<br>If you want to add your own photos to the face database through the program, the number of added pictures must be no less than 2.</p><h2 id="2-Face-Recognition-Model-training"><a href="#2-Face-Recognition-Model-training" class="headerlink" title="2. Face Recognition Model training"></a>2. Face Recognition Model training</h2><h3 id="2-1-Create-a-label-file-CSV"><a href="#2-1-Create-a-label-file-CSV" class="headerlink" title="2.1 Create a label file CSV"></a>2.1 Create a label file CSV</h3><p>With the face database data, we need to read it in the program, here we need to use csv file to read the image data in the face database.<br>The format of a csv file: image path name + label, such as /Img/s1/image.jpg;1<br>Assume the face image path is: /Img/s1/01..jpg<br>And we give this face image a label “1”, this label represents the person’s name. One person’s face image label must be the same.<br>You can create a csv file manually and then enter the data one by one. But if you use python, you don’t have to do this tedious and boring work.<br>The following is a piece of code which can write data in the CSV file automatically.</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token punctuation">.</span>path<span class="token comment" spellcheck="true"># This is a tiny script to help you creating a CSV file from a face</span><span class="token comment" spellcheck="true"># database with a similar hierarchie:</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#  </span><span class="token comment" spellcheck="true">#  </span><span class="token comment" spellcheck="true">#  |-- s1</span><span class="token comment" spellcheck="true">#  |   |-- 1.pgm</span><span class="token comment" spellcheck="true">#  |   |-- ...</span><span class="token comment" spellcheck="true">#  |   |-- 10.pgm</span><span class="token comment" spellcheck="true">#  |-- s2</span><span class="token comment" spellcheck="true">#  |   |-- 1.pgm</span><span class="token comment" spellcheck="true">#  |   |-- ...</span><span class="token comment" spellcheck="true">#  |   |-- 10.pgm</span><span class="token comment" spellcheck="true">#  ...</span><span class="token comment" spellcheck="true">#  |-- s40</span><span class="token comment" spellcheck="true">#  |   |-- 1.pgm</span><span class="token comment" spellcheck="true">#  |   |-- ...</span><span class="token comment" spellcheck="true">#  |   |-- 10.pgm</span><span class="token comment" spellcheck="true">#</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"usage: create_csv &lt;base_path>"</span>        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    BASE_PATH<span class="token operator">=</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            SEPARATOR<span class="token operator">=</span><span class="token string">";"</span>    <span class="token comment" spellcheck="true"># This is output csv file.</span>    fh <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"../at.csv"</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> dirname<span class="token punctuation">,</span> dirnames<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>BASE_PATH<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> subdirname <span class="token keyword">in</span> dirnames<span class="token punctuation">:</span>            subject_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dirname<span class="token punctuation">,</span> subdirname<span class="token punctuation">)</span>            <span class="token keyword">for</span> filename <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>subject_path<span class="token punctuation">)</span><span class="token punctuation">:</span>                abs_path <span class="token operator">=</span> <span class="token string">"%s/%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>subject_path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s%s%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>abs_path<span class="token punctuation">,</span> SEPARATOR<span class="token punctuation">,</span> subdirname<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                fh<span class="token punctuation">.</span>write<span class="token punctuation">(</span>abs_path<span class="token punctuation">)</span>                fh<span class="token punctuation">.</span>write<span class="token punctuation">(</span>SEPARATOR<span class="token punctuation">)</span>                fh<span class="token punctuation">.</span>write<span class="token punctuation">(</span>subdirname<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                fh<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    fh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>You should set the image path parameter (absolute path) when running.(E.g: <strong>python filename.py /home/kevin/OpenCV/face_rec/Img</strong> ) and you can get a CSV file like this:<br><img src="5.png" alt><br>This CSV file is created.</p><h3 id="2-2-Model-training"><a href="#2-2-Model-training" class="headerlink" title="2.2 Model training"></a>2.2 Model training</h3><p>This is the official example of OpenCV: <a href="https://docs.opencv.org/3.2.0/da/d60/tutorial_face_main.html" target="_blank" rel="noopener">Click here</a><br>They offer three models: Eigenfaces, Fisherfaces and Local Binary Patterns Histograms(LBPH)    </p><p>Then I will train my own face database based on these models on the first step.</p><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">static</span> Mat <span class="token function">norm_0_255</span><span class="token punctuation">(</span>InputArray _src<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat src <span class="token operator">=</span> _src<span class="token punctuation">.</span><span class="token function">getMat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Mat dst<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Create and return a normalized image matrix:</span>  <span class="token keyword">switch</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">channels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>        cv<span class="token operator">::</span><span class="token function">normalize</span><span class="token punctuation">(</span>_src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> NORM_MINMAX<span class="token punctuation">,</span> CV_8UC1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>        cv<span class="token operator">::</span><span class="token function">normalize</span><span class="token punctuation">(</span>_src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> NORM_MINMAX<span class="token punctuation">,</span> CV_8UC3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>        src<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> dst<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//load CSV file</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read_csv</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span> filename<span class="token punctuation">,</span> vector<span class="token operator">&lt;</span>Mat<span class="token operator">></span><span class="token operator">&amp;</span> images<span class="token punctuation">,</span> vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> labels<span class="token punctuation">,</span> <span class="token keyword">char</span> separator <span class="token operator">=</span> <span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  std<span class="token operator">::</span>ifstream <span class="token function">file</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ifstream<span class="token operator">::</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>        string error_message <span class="token operator">=</span> <span class="token string">"No valid input file was given, please check the given filename."</span><span class="token punctuation">;</span>        <span class="token function">CV_Error</span><span class="token punctuation">(</span>Error<span class="token operator">::</span>StsBadArg<span class="token punctuation">,</span> error_message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    string line<span class="token punctuation">,</span> path<span class="token punctuation">,</span> classlabel<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">getline</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        stringstream <span class="token function">liness</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getline</span><span class="token punctuation">(</span>liness<span class="token punctuation">,</span> path<span class="token punctuation">,</span> separator<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">getline</span><span class="token punctuation">(</span>liness<span class="token punctuation">,</span> classlabel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>path<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>classlabel<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            images<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">imread</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            labels<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>classlabel<span class="token punctuation">.</span><span class="token function">c_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">train_model</span><span class="token punctuation">(</span><span class="token keyword">const</span> string<span class="token operator">&amp;</span> fn_csv<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 2 containers to store image data and corresponding labels</span>    vector<span class="token operator">&lt;</span>Mat<span class="token operator">></span> images<span class="token punctuation">;</span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> labels<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// load data</span>    <span class="token keyword">try</span>    <span class="token punctuation">{</span>        <span class="token function">read_csv</span><span class="token punctuation">(</span>fn_csv<span class="token punctuation">,</span> images<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span>cv<span class="token operator">::</span>Exception<span class="token operator">&amp;</span> e<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cerr <span class="token operator">&lt;&lt;</span> <span class="token string">"Error opening file \""</span> <span class="token operator">&lt;&lt;</span> fn_csv <span class="token operator">&lt;&lt;</span> <span class="token string">"\". Reason: "</span> <span class="token operator">&lt;&lt;</span> e<span class="token punctuation">.</span>msg <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>images<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        string error_message <span class="token operator">=</span> <span class="token string">"This demo needs at least 2 images to work. Please add more images to your data set!"</span><span class="token punctuation">;</span>        <span class="token function">CV_Error</span><span class="token punctuation">(</span>CV_StsError<span class="token punctuation">,</span> error_message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Mat testSample <span class="token operator">=</span> images<span class="token punctuation">[</span>images<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> testLabel <span class="token operator">=</span> labels<span class="token punctuation">[</span>labels<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    images<span class="token punctuation">.</span><span class="token function">pop_back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    labels<span class="token punctuation">.</span><span class="token function">pop_back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// The following lines create a feature face model for face recognition.</span>     <span class="token comment" spellcheck="true">// Train it with images and tags read from a CSV file.</span>     <span class="token comment" spellcheck="true">// Here is a complete PCA transform</span>     <span class="token comment" spellcheck="true">//If you only want to keep 10 principal components, use the following code</span>     <span class="token comment" spellcheck="true">// cv::EigenFaceRecognizer::create(10);</span>     <span class="token comment" spellcheck="true">// cv::FisherFaceRecognizer::create(10);</span>     <span class="token comment" spellcheck="true">//</span>     <span class="token comment" spellcheck="true">// If you also want to initialize with a confidence threshold, use the following statement:</span>     <span class="token comment" spellcheck="true">// cv::EigenFaceRecognizer::create(10, 123.0);</span>     <span class="token comment" spellcheck="true">//</span>     <span class="token comment" spellcheck="true">// If you use all features and use a threshold, use the following statement:</span>     <span class="token comment" spellcheck="true">// cv::EigenFaceRecognizer::create(0, 123.0);</span>     <span class="token comment" spellcheck="true">// cv::FisherFaceRecognizer::create(0, 123.0);</span>    Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> model0 <span class="token operator">=</span> EigenFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model0<span class="token operator">-</span><span class="token operator">></span><span class="token function">train</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">;</span>    model0<span class="token operator">-</span><span class="token operator">></span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"MyFacePCAModel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> model1 <span class="token operator">=</span> FisherFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model1<span class="token operator">-</span><span class="token operator">></span><span class="token function">train</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">;</span>    model1<span class="token operator">-</span><span class="token operator">></span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"MyFaceFisherModel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     Ptr<span class="token operator">&lt;</span>LBPHFaceRecognizer<span class="token operator">></span> model2 <span class="token operator">=</span> LBPHFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    model2<span class="token operator">-</span><span class="token operator">></span><span class="token function">train</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">;</span>    model2<span class="token operator">-</span><span class="token operator">></span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"MyFaceLBPHModel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// The test image is predicted below, predictedLabel is the predicted label result</span>    <span class="token keyword">int</span> predictedLabel0 <span class="token operator">=</span> model0<span class="token operator">-</span><span class="token operator">></span><span class="token function">predict</span><span class="token punctuation">(</span>testSample<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> predictedLabel1 <span class="token operator">=</span> model1<span class="token operator">-</span><span class="token operator">></span><span class="token function">predict</span><span class="token punctuation">(</span>testSample<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> predictedLabel2 <span class="token operator">=</span> model2<span class="token operator">-</span><span class="token operator">></span><span class="token function">predict</span><span class="token punctuation">(</span>testSample<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// There is also a way to get the result and get the threshold:</span>    <span class="token comment" spellcheck="true">//      int predictedLabel = -1;</span>    <span class="token comment" spellcheck="true">//      double confidence = 0.0;</span>    <span class="token comment" spellcheck="true">//      model->predict(testSample, predictedLabel, confidence);</span>    string result_message0 <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Predicted class = %d / Actual class = %d."</span><span class="token punctuation">,</span> predictedLabel0<span class="token punctuation">,</span> testLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>    string result_message1 <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Predicted class = %d / Actual class = %d."</span><span class="token punctuation">,</span> predictedLabel1<span class="token punctuation">,</span> testLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>    string result_message2 <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Predicted class = %d / Actual class = %d."</span><span class="token punctuation">,</span> predictedLabel2<span class="token punctuation">,</span> testLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> result_message0 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> result_message1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> result_message2 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"usage: %s &lt;csv_file>\n"</span><span class="token punctuation">,</span> argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  string fn_csv <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">train_model</span><span class="token punctuation">(</span>fn_csv<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>At this point, we have completed the training of the face model. And we get three files:     </p><p><code>MyFaceFisherModel.xml、MyFaceLBPHModel.xml、MyFacePCAModel.xml</code></p><p><img src="6.png" alt><br>Note:    </p><ol><li><p>Changes to the API of the OpenCV3.3 Face Recognition Module</p><p>a. Facerec.hpp before opencv3.3</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">ifndef</span> __OPENCV_FACEREC_HPP__</span><span class="token macro property">#<span class="token directive keyword">define</span> __OPENCV_FACEREC_HPP__</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/face.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/core.hpp"</span></span><span class="token keyword">namespace</span> cv <span class="token punctuation">{</span> <span class="token keyword">namespace</span> face <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// base for two classes</span><span class="token keyword">class</span> <span class="token class-name">CV_EXPORTS_W</span> BasicFaceRecognizer <span class="token operator">:</span> <span class="token keyword">public</span> FaceRecognizer<span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token comment" spellcheck="true">/** @see setNumComponents */</span>    CV_WRAP <span class="token keyword">virtual</span> <span class="token keyword">int</span> <span class="token function">getNumComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// ----------- ...... -----------</span>    CV_WRAP <span class="token keyword">virtual</span> cv<span class="token operator">::</span>Mat <span class="token function">getEigenValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    CV_WRAP <span class="token keyword">virtual</span> cv<span class="token operator">::</span>Mat <span class="token function">getEigenVectors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    CV_WRAP <span class="token keyword">virtual</span> cv<span class="token operator">::</span>Mat <span class="token function">getMean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>CV_EXPORTS_W Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> <span class="token function">createEigenFaceRecognizer</span><span class="token punctuation">(</span><span class="token keyword">int</span> num_components <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">double</span> threshold <span class="token operator">=</span> DBL_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>CV_EXPORTS_W Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> <span class="token function">createFisherFaceRecognizer</span><span class="token punctuation">(</span><span class="token keyword">int</span> num_components <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">double</span> threshold <span class="token operator">=</span> DBL_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CV_EXPORTS_W</span> LBPHFaceRecognizer <span class="token operator">:</span> <span class="token keyword">public</span> FaceRecognizer<span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token comment" spellcheck="true">/** @see setGridX */</span>    CV_WRAP <span class="token keyword">virtual</span> <span class="token keyword">int</span> <span class="token function">getGridX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/** @copybrief getGridX @see getGridX */</span>    CV_WRAP <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">setGridX</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// ----------- ...... -----------</span>    CV_WRAP <span class="token keyword">virtual</span> cv<span class="token operator">::</span>Mat <span class="token function">getLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>CV_EXPORTS_W Ptr<span class="token operator">&lt;</span>LBPHFaceRecognizer<span class="token operator">></span> <span class="token function">createLBPHFaceRecognizer</span><span class="token punctuation">(</span><span class="token keyword">int</span> radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">int</span> neighbors<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">int</span> grid_x<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">int</span> grid_y<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">double</span> threshold <span class="token operator">=</span> DBL_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//namespace cv::face</span><span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment" spellcheck="true">//__OPENCV_FACEREC_HPP__</span></code></pre><ul><li><p>Comment section of the ninth line: <code>// base for two classes</code>,  This shows that BasicFaceRecognizer is the base class of two classes: EigenFaceRecognizer and FisherFaceRecognizer. With LBPHFaceRecognizer is irrelevant. Even the new API is still the case.</p></li><li><p>Method of creating three face recognizers.</p><pre class=" language-cpp"><code class="language-cpp">Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> model <span class="token operator">=</span>  <span class="token function">createEigenFaceRecognizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> model <span class="token operator">=</span>  <span class="token function">createFisherFaceRecognizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Ptr<span class="token operator">&lt;</span>LBPHFaceRecognizer<span class="token operator">></span> model  <span class="token operator">=</span>  <span class="token function">createLBPHFaceRecognizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><p>b. Facerec.hpp after opencv3.3</p></li></ol><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">ifndef</span> __OPENCV_FACEREC_HPP__</span><span class="token macro property">#<span class="token directive keyword">define</span> __OPENCV_FACEREC_HPP__</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/face.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/core.hpp"</span></span><span class="token keyword">namespace</span> cv <span class="token punctuation">{</span> <span class="token keyword">namespace</span> face <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// base for two classes</span><span class="token keyword">class</span> <span class="token class-name">CV_EXPORTS_W</span> BasicFaceRecognizer <span class="token operator">:</span> <span class="token keyword">public</span> FaceRecognizer<span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token comment" spellcheck="true">/** @see setNumComponents */</span>    CV_WRAP <span class="token keyword">int</span> <span class="token function">getNumComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// ----------- ...... -----------</span>    CV_WRAP cv<span class="token operator">::</span>Mat <span class="token function">getEigenValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    CV_WRAP cv<span class="token operator">::</span>Mat <span class="token function">getEigenVectors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    CV_WRAP cv<span class="token operator">::</span>Mat <span class="token function">getMean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">const</span> FileNode<span class="token operator">&amp;</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span>FileStorage<span class="token operator">&amp;</span> fs<span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    <span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>    <span class="token keyword">using</span> FaceRecognizer<span class="token operator">::</span>read<span class="token punctuation">;</span>    <span class="token keyword">using</span> FaceRecognizer<span class="token operator">::</span>write<span class="token punctuation">;</span><span class="token keyword">protected</span><span class="token operator">:</span>    <span class="token keyword">int</span> _num_components<span class="token punctuation">;</span>    <span class="token keyword">double</span> _threshold<span class="token punctuation">;</span>    std<span class="token operator">::</span>vector<span class="token operator">&lt;</span>Mat<span class="token operator">></span> _projections<span class="token punctuation">;</span>    Mat _labels<span class="token punctuation">;</span>    Mat _eigenvectors<span class="token punctuation">;</span>    Mat _eigenvalues<span class="token punctuation">;</span>    Mat _mean<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CV_EXPORTS_W</span> EigenFaceRecognizer <span class="token operator">:</span> <span class="token keyword">public</span> BasicFaceRecognizer<span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    CV_WRAP <span class="token keyword">static</span> Ptr<span class="token operator">&lt;</span>EigenFaceRecognizer<span class="token operator">></span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">int</span> num_components <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">double</span> threshold <span class="token operator">=</span> DBL_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CV_EXPORTS_W</span> FisherFaceRecognizer <span class="token operator">:</span> <span class="token keyword">public</span> BasicFaceRecognizer<span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    CV_WRAP <span class="token keyword">static</span> Ptr<span class="token operator">&lt;</span>FisherFaceRecognizer<span class="token operator">></span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">int</span> num_components <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">double</span> threshold <span class="token operator">=</span> DBL_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">CV_EXPORTS_W</span> LBPHFaceRecognizer <span class="token operator">:</span> <span class="token keyword">public</span> FaceRecognizer<span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token comment" spellcheck="true">/** @see setGridX */</span>    CV_WRAP <span class="token keyword">virtual</span> <span class="token keyword">int</span> <span class="token function">getGridX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// ----------- ...... -----------</span>    CV_WRAP <span class="token keyword">virtual</span> cv<span class="token operator">::</span>Mat <span class="token function">getLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    CV_WRAP <span class="token keyword">static</span> Ptr<span class="token operator">&lt;</span>LBPHFaceRecognizer<span class="token operator">></span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">int</span> radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">int</span> neighbors<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">int</span> grid_x<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">int</span> grid_y<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">double</span> threshold <span class="token operator">=</span> DBL_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//namespace cv::face</span><span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment" spellcheck="true">//__OPENCV_FACEREC_HPP__</span></code></pre><ul><li>Both EigenFaceRecognizer and FisherFaceRecognizer are inherited from BasicFaceRecognizer. However, the LBFPHaceRecognizer, like the BasicFaceRecognizer, inherits from FaceRecognizer.    </li><li>Method of creating three face recognizer</li></ul><pre class=" language-cpp"><code class="language-cpp">Ptr<span class="token operator">&lt;</span>EigenFaceRecognizer<span class="token operator">></span> model  <span class="token operator">=</span> EigenFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Ptr<span class="token operator">&lt;</span>FisherFaceRecognizer<span class="token operator">></span> model <span class="token operator">=</span> FisherFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Ptr<span class="token operator">&lt;</span>LBPHFaceRecognizer<span class="token operator">></span> model   <span class="token operator">=</span> LBPHFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="3-Identify-faces-in-the-video-stream-camera"><a href="#3-Identify-faces-in-the-video-stream-camera" class="headerlink" title="3. Identify faces in the video stream (camera)"></a>3. Identify faces in the video stream (camera)</h2><h3 id="3-1-Ready-to-work"><a href="#3-1-Ready-to-work" class="headerlink" title="3.1 Ready to work."></a>3.1 Ready to work.</h3><h4 id="3-1-1-Copy-the-training-file-obtained-in-the-second-step-to-the-current-folder"><a href="#3-1-1-Copy-the-training-file-obtained-in-the-second-step-to-the-current-folder" class="headerlink" title="3.1.1 Copy the training file obtained in the second step to the current folder."></a>3.1.1 Copy the training file obtained in the second step to the current folder.</h4><h4 id="3-1-2-The-process-or-method-of-Face-Recognition"><a href="#3-1-2-The-process-or-method-of-Face-Recognition" class="headerlink" title="3.1.2 The process or method of Face Recognition"></a>3.1.2 The process or method of Face Recognition</h4><p>This step has a similar part to the creation of a face recognition database.</p><ul><li>Open the camera</li><li>Loading face detector, face model</li><li>Scale the image (for efficiency)</li><li>Face recognition (compare to face model)</li><li>Label faces with rectangular wireframes and add text labels</li></ul><h4 id="3-2-Code"><a href="#3-2-Code" class="headerlink" title="3.2 Code"></a>3.2 Code</h4><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/opencv.hpp></span>  </span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/core.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/face.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/highgui.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/imgproc.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;fstream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;sstream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token operator">::</span>face<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> ROW_MIN        45</span><span class="token keyword">int</span> exitFlag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">Recognition_And_Draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">Recognition_And_Draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//</span>  <span class="token keyword">double</span> scale <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Zoom factor</span>  <span class="token keyword">double</span> fx <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> scale<span class="token punctuation">;</span>  Mat frame<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//Video frame</span>  VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//Open the camera</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Open camera failed.\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//Load cascade classifier</span>  CascadeClassifier cascade<span class="token punctuation">;</span>  ret <span class="token operator">=</span> cascade<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"haarcascade_frontalface_alt2.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Load xml failed[ret = %d]. \n"</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Load xml succeed."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Loading trained face models</span>  Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> modelPCA <span class="token operator">=</span> EigenFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    modelPCA<span class="token operator">-</span><span class="token operator">></span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">"MyFacePCAModel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Ptr<span class="token operator">&lt;</span>BasicFaceRecognizer<span class="token operator">></span> modelFisher <span class="token operator">=</span> FisherFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  modelFisher<span class="token operator">-</span><span class="token operator">></span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">"MyFaceFisherModel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Ptr<span class="token operator">&lt;</span>LBPHFaceRecognizer<span class="token operator">></span> modelLBPH <span class="token operator">=</span> LBPHFaceRecognizer<span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    modelLBPH<span class="token operator">-</span><span class="token operator">></span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">"MyFaceLBPHModel.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>exitFlag<span class="token punctuation">)</span><span class="token punctuation">{</span>    cap <span class="token operator">>></span> frame<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">continue</span><span class="token punctuation">;</span>    Mat facesImg<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//</span>    vector<span class="token operator">&lt;</span>Rect<span class="token operator">></span> faces<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//Create a vector container for storing faces</span>    Mat gary_img<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//grayscale image</span>    Mat scl_gary_img<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Scaled grayscale image</span>    <span class="token function">cvtColor</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> gary_img<span class="token punctuation">,</span> COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Convert the original image to a grayscale image</span>    <span class="token function">resize</span><span class="token punctuation">(</span>gary_img<span class="token punctuation">,</span> scl_gary_img<span class="token punctuation">,</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fx<span class="token punctuation">,</span> fx<span class="token punctuation">,</span> INTER_LINEAR<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//resize img</span>    <span class="token function">equalizeHist</span><span class="token punctuation">(</span> scl_gary_img<span class="token punctuation">,</span> scl_gary_img <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//face detection</span>    cascade<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>scl_gary_img<span class="token punctuation">,</span> faces<span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">|</span>CASCADE_SCALE_IMAGE<span class="token punctuation">,</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Face.size = %ld\n"</span><span class="token punctuation">,</span> faces<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//facesImg = scl_gary_img(faces[0]);</span>    Mat face_resize<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//To prevent the picture is too small (that is, people too far away from the camera)</span>    <span class="token keyword">int</span> predictPCA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> predictFisher <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> predictLBPH <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> faces<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      Rect rectFace <span class="token operator">=</span> faces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      facesImg <span class="token operator">=</span> <span class="token function">scl_gary_img</span><span class="token punctuation">(</span>faces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>facesImg<span class="token punctuation">.</span>rows <span class="token operator">>=</span> ROW_MIN<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">resize</span><span class="token punctuation">(</span>facesImg<span class="token punctuation">,</span> face_resize<span class="token punctuation">,</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"faceImg.rows[%d] &lt; %d \n"</span><span class="token punctuation">,</span> facesImg<span class="token punctuation">.</span>rows<span class="token punctuation">,</span> ROW_MIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">continue</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>face_resize<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        predictPCA <span class="token operator">=</span> modelPCA<span class="token operator">-</span><span class="token operator">></span><span class="token function">predict</span><span class="token punctuation">(</span>face_resize<span class="token punctuation">)</span><span class="token punctuation">;</span>          predictFisher <span class="token operator">=</span> modelFisher<span class="token operator">-</span><span class="token operator">></span><span class="token function">predict</span><span class="token punctuation">(</span>face_resize<span class="token punctuation">)</span><span class="token punctuation">;</span>          predictLBPH <span class="token operator">=</span> modelLBPH<span class="token operator">-</span><span class="token operator">></span><span class="token function">predict</span><span class="token punctuation">(</span>face_resize<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>      cout <span class="token operator">&lt;&lt;</span> <span class="token string">"predictPCA   : "</span> <span class="token operator">&lt;&lt;</span> predictPCA    <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>      cout <span class="token operator">&lt;&lt;</span> <span class="token string">"predictFisher: "</span> <span class="token operator">&lt;&lt;</span> predictFisher <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>      cout <span class="token operator">&lt;&lt;</span> <span class="token string">"predictLBPH  : "</span> <span class="token operator">&lt;&lt;</span> predictLBPH   <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>      <span class="token function">rectangle</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token function">Point</span><span class="token punctuation">(</span>rectFace<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rectFace<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">,</span> <span class="token function">Point</span><span class="token punctuation">(</span>rectFace<span class="token punctuation">.</span>x <span class="token operator">+</span> rectFace<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rectFace<span class="token punctuation">.</span>y <span class="token operator">+</span> rectFace<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">,</span> <span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>predictPCA <span class="token operator">==</span> <span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">putText</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token string">"Liuyang"</span><span class="token punctuation">,</span> <span class="token function">Point</span><span class="token punctuation">(</span>faces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> faces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">,</span> FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token function">putText</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token string">"X"</span><span class="token punctuation">,</span> <span class="token function">Point</span><span class="token punctuation">(</span>faces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> faces<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">,</span> FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// if(faces.size() &lt;= 0){</span>  <span class="token comment" spellcheck="true">//  cout &lt;&lt; "There are no faces in the camera.\n" &lt;&lt; endl;</span> <span class="token comment" spellcheck="true">// }</span>    <span class="token punctuation">}</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"frame"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                exitFlag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Esc..."</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">Recognition_And_Draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="7.jpg" alt></p><p>Note:    </p><ol><li>This program supports multiple face recognition at the same time</li><li>Face recognition accuracy is not high, and it is susceptible to environmental factors such as light.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Face Recognition </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
            <tag> c++ </tag>
            
            <tag> Face Recongnition </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to install OpenCV and OpenCV_contrib in Ubuntu16.04</title>
      <link href="/2019/08/09/how-to-install-opencv-and-opencv-contrib-in-ubuntu16-04/"/>
      <url>/2019/08/09/how-to-install-opencv-and-opencv-contrib-in-ubuntu16-04/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Enjoy PyTorch-Task1</title>
      <link href="/2019/08/07/enjoy-pytorch-task1/"/>
      <url>/2019/08/07/enjoy-pytorch-task1/</url>
      
        <content type="html"><![CDATA[<h1 id="Installing-PyTorch-with-Anaconda-and-Conda"><a href="#Installing-PyTorch-with-Anaconda-and-Conda" class="headerlink" title="Installing PyTorch with Anaconda and Conda"></a>Installing PyTorch with Anaconda and Conda</h1><p>My Particular Environment:</p><ul><li>OS: Ubuntu 16.04</li><li>Package Manager: conda</li><li>Python: 3.6</li><li>CUDA: None</li></ul><p>Getting started with PyTorch is very easy. The recommended best option is to use the Anaconda Pythob package manager.</p><ol><li><a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">Download and install Anaconda</a>(Go with the latest Python version)<br>You can download the <code>.sh</code> package from the Anaconda website, but it’s very slowly for me. So i find another choice.<br>You can find it in <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">Tsinghua university open source mirror station</a>, which i download is <code>Anaconda3-5.2.0-Linux-x86_64.sh</code>. Or if you already get the “wget”, you can run this command in the terminal.<pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.2.0-Linux-x86_64.sh</code></pre>Use <code>conda -V</code> to check the Version of Anaconda after open a new terminal.<br>If it isn’t work, try,<pre class=" language-bash"><code class="language-bash"><span class="token keyword">echo</span> <span class="token string">'export PATH="~/anaconda3/bin:<span class="token variable">$PATH</span>"'</span> <span class="token operator">>></span> ~/.bashrc<span class="token function">source</span> ./bashrc</code></pre></li><li>Go to the Getting Started section on the <a href="https://pytorch.org/" target="_blank" rel="noopener">Pytorch website</a>.</li><li>Specify the appropriate configuration options for your particular environment.<br><img src="1.png" alt></li><li>Run the presented command in the terminal to install Pytorch.<pre class=" language-bash"><code class="language-bash">conda <span class="token function">install</span> pytorch-cpu torchvision-cpu -c pytorch</code></pre></li></ol><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torchvision<span class="token keyword">import</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">as</span> Data<span class="token comment" spellcheck="true"># Hyper Parameters</span>EPOCH <span class="token operator">=</span> <span class="token number">1</span>  BATCH_SIZE <span class="token operator">=</span> <span class="token number">50</span>LR <span class="token operator">=</span> <span class="token number">0.001</span>  DOWNLOAD_MNIST <span class="token operator">=</span> <span class="token boolean">True</span>  <span class="token comment" spellcheck="true"># Mnist</span>train_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>MNIST<span class="token punctuation">(</span>    root<span class="token operator">=</span><span class="token string">'./mnist/'</span><span class="token punctuation">,</span>      train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># this is training data</span>    transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># exchange PIL.Image or numpy.ndarray to torch.FloatTensor (C x H x W)</span>    download<span class="token operator">=</span>DOWNLOAD_MNIST<span class="token punctuation">,</span>  <span class="token punctuation">)</span>test_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>MNIST<span class="token punctuation">(</span>    root<span class="token operator">=</span><span class="token string">'./mnist/'</span><span class="token punctuation">,</span>    train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># BATCH_SIZE</span>train_loader <span class="token operator">=</span> Data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>    dataset<span class="token operator">=</span>train_data<span class="token punctuation">,</span>    batch_size<span class="token operator">=</span>BATCH_SIZE<span class="token punctuation">,</span>    shuffle<span class="token operator">=</span><span class="token boolean">True</span>  <span class="token punctuation">)</span><span class="token comment" spellcheck="true"># test_data</span>test_x <span class="token operator">=</span> torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>test_data<span class="token punctuation">.</span>test_data<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>type<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>FloatTensor<span class="token punctuation">)</span>test_y <span class="token operator">=</span> test_data<span class="token punctuation">.</span>test_labels<span class="token comment" spellcheck="true"># cnn</span><span class="token keyword">class</span> <span class="token class-name">CNN</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        super<span class="token punctuation">(</span>CNN<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            <span class="token comment" spellcheck="true"># (1, 28, 28)</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>                in_channels<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                out_channels<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>                kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>                  stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                  padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>                groups<span class="token operator">=</span><span class="token number">1</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># (16, 28, 38)</span>            nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span>kernel_size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># (16, 14, 14)</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>                in_channels<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>                out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span>                kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>                stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>                padding<span class="token operator">=</span><span class="token number">2</span>            <span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>ReLU<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span>kernel_size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>layer3 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># print(x.shape)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(x.shape)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(x.shape)</span>        x <span class="token operator">=</span> x<span class="token punctuation">.</span>view<span class="token punctuation">(</span>x<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(x.shape)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>layer3<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print(x.shape)</span>        <span class="token keyword">return</span> xcnn <span class="token operator">=</span> CNN<span class="token punctuation">(</span><span class="token punctuation">)</span>optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>cnn<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span>LR<span class="token punctuation">)</span>loss_function <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> epoch <span class="token keyword">in</span> range<span class="token punctuation">(</span>EPOCH<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> step<span class="token punctuation">,</span> <span class="token punctuation">(</span>b_x<span class="token punctuation">,</span> b_y<span class="token punctuation">)</span> <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>train_loader<span class="token punctuation">)</span><span class="token punctuation">:</span>        output <span class="token operator">=</span> cnn<span class="token punctuation">(</span>b_x<span class="token punctuation">)</span>        loss <span class="token operator">=</span> loss_function<span class="token punctuation">(</span>output<span class="token punctuation">,</span> b_y<span class="token punctuation">)</span>        optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>        loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>        optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'finished training'</span><span class="token punctuation">)</span>test_out <span class="token operator">=</span> cnn<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span>predict_y <span class="token operator">=</span> torch<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>test_out<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Accuracy in Test : %.4f%%'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>sum<span class="token punctuation">(</span>predict_y <span class="token operator">==</span> test_y<span class="token punctuation">.</span>data<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token operator">/</span> len<span class="token punctuation">(</span>predict_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PyTorch Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyTorch </tag>
            
            <tag> Deep Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Enjoy PyTorch</title>
      <link href="/2019/08/07/enjoy-pytorch/"/>
      <url>/2019/08/07/enjoy-pytorch/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> PyTorch Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyTorch </tag>
            
            <tag> Deep Learing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCA算法实现</title>
      <link href="/2019/08/07/pca-suan-fa-shi-xian/"/>
      <url>/2019/08/07/pca-suan-fa-shi-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="PCA算法实例及C-实现"><a href="#PCA算法实例及C-实现" class="headerlink" title="PCA算法实例及C++实现"></a>PCA算法实例及C++实现</h1><h2 id="PCA算法"><a href="#PCA算法" class="headerlink" title="PCA算法"></a>PCA算法</h2><p>总结一下PCA的算法步骤：</p><p>设有m条n维数据。</p><ol><li>将原始数据按列组成n行m列矩阵X</li><li>将X的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值</li><li>求出协方差矩阵 $C=\frac{1}{m}XX^\mathsf{T}$</li><li>求出协方差矩阵的特征值及对应的特征向量</li><li>将特征向量按对应特征值大小从上到下按行排列成矩阵，取前k行组成矩阵P</li><li>$Y = PX$即为降维到k维后的数据</li></ol><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>以<br>$$ \begin{pmatrix}<br>  -1 &amp; -1 &amp; 0 &amp; 2 &amp; 0 \\\<br>  -2 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \<br>\end{pmatrix} $$<br>为例，我们用PCA方法将这组二维数据其降到一维。</p><p>因为这个矩阵的每行已经是零均值，这里我们直接求协方差矩阵：<br>$$ C=\frac{1}{5}\begin{pmatrix}<br>  -1 &amp; -1 &amp; 0 &amp; 2 &amp; 0 \\\<br>  -2 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \<br>\end{pmatrix}\begin{pmatrix}<br>  -1 &amp; -2 \\\<br>  -1 &amp; 0  \\\<br>  0  &amp; 0  \\\<br>  2  &amp; 1  \\\<br>  0  &amp; 1 \<br>\end{pmatrix}=\begin{pmatrix}<br>  \frac{6}{5} &amp; \frac{4}{5} \\\<br>  \frac{4}{5} &amp; \frac{6}{5} \<br>\end{pmatrix}$$<br>然后求其特征值和特征向量，具体求解方法不再详述，可以参考相关资料。求解后特征值为：<br>$$\lambda_1=2,\lambda_2=2/5$$<br>其对应的特征向量分别是：<br>$$c_1\begin{pmatrix}<br>  1 \\\<br>  1<br>\end{pmatrix},c_2\begin{pmatrix}<br>  -1 \\\<br>  1<br>\end{pmatrix}$$<br>其中对应的特征向量分别是一个通解， $c_1$和 $c_2$ 可取任意实数。那么标准化后的特征向量为：<br>$$\begin{pmatrix}<br>  1/\sqrt{2} \\\<br>  1/\sqrt{2}<br>\end{pmatrix},\begin{pmatrix}<br>  -1/\sqrt{2} \\\<br>  1/\sqrt{2}<br>\end{pmatrix}$$<br>因此我们的矩阵P是：<br>$$P=\begin{pmatrix}<br>  1/\sqrt{2}  &amp; 1/\sqrt{2}  \\\<br>  -1/\sqrt{2} &amp; 1/\sqrt{2}<br>\end{pmatrix}$$<br>最后我们用P的第一行乘以数据矩阵，就得到了降维后的表示：<br>$$Y=\begin{pmatrix}<br>  1/\sqrt{2} &amp; 1/\sqrt{2}<br>\end{pmatrix}\begin{pmatrix}<br>  -1 &amp; -1 &amp; 0 &amp; 2 &amp; 0 \\\<br>  -2 &amp; 0 &amp; 0 &amp; 1 &amp; 1<br>\end{pmatrix}=\begin{pmatrix}<br>  -3/\sqrt{2} &amp; -1/\sqrt{2} &amp; 0 &amp; 3/\sqrt{2} &amp; -1/\sqrt{2}<br>\end{pmatrix}$$<br>可以验证协方差矩阵C的对角化：<br>$$PCP^\mathsf{T}=\begin{pmatrix}<br>  1/\sqrt{2}  &amp; 1/\sqrt{2}  \\\<br>  -1/\sqrt{2} &amp; 1/\sqrt{2}<br>\end{pmatrix}\begin{pmatrix}<br>  6/5 &amp; 4/5 \\\<br>  4/5 &amp; 6/5<br>\end{pmatrix}\begin{pmatrix}<br>  1/\sqrt{2} &amp; -1/\sqrt{2}  \\\<br>  1/\sqrt{2} &amp; 1/\sqrt{2}<br>\end{pmatrix}=\begin{pmatrix}<br>  2 &amp; 0  \\\<br>  0 &amp; 2/5<br>\end{pmatrix}$$<br><img src="02.png" alt></p><h2 id="C-实现"><a href="#C-实现" class="headerlink" title="C++实现"></a>C++实现</h2><p>因为要对一组图片信息进行训练，所以我写了一部分通过摄像头截取图片帧的代码，<code>get_img()</code>函数。这里提取了5个特征脸和一个均值脸</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/imgproc/imgproc.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/objdetect/objdetect.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;fstream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;sstream></span></span><span class="token macro property">#<span class="token directive keyword">define</span> img_num 300 </span><span class="token comment" spellcheck="true">//训练图片的张数</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通过摄像头保存要训练的图片</span><span class="token comment" spellcheck="true">//打开摄像头</span><span class="token keyword">int</span> <span class="token function">get_img</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Mat frame<span class="token punctuation">;</span>  <span class="token keyword">bool</span> stop <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>stop<span class="token punctuation">)</span><span class="token punctuation">{</span>    cap <span class="token operator">>></span> frame<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>frame<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      stop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//string filename = format("%d.jpg", i);</span>    <span class="token keyword">char</span> filename<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">sprintf</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">"Img/%d.jpg"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imwrite</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>    i<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"frame"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">></span> img_num<span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//把图像归一化为0-255</span>Mat <span class="token function">norm_0_255</span><span class="token punctuation">(</span><span class="token keyword">const</span> Mat<span class="token operator">&amp;</span> src<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat dst<span class="token punctuation">;</span>  <span class="token keyword">switch</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">channels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>        cv<span class="token operator">::</span><span class="token function">normalize</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> NORM_MINMAX<span class="token punctuation">,</span> CV_8UC1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>        cv<span class="token operator">::</span><span class="token function">normalize</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> NORM_MINMAX<span class="token punctuation">,</span> CV_8UC3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span>        src<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>dst<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> dst<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//将给定的图像转化为行矩阵</span>Mat <span class="token function">asRowMatrix</span><span class="token punctuation">(</span><span class="token keyword">const</span> vector<span class="token operator">&lt;</span>Mat<span class="token operator">></span><span class="token operator">&amp;</span> src<span class="token punctuation">,</span> <span class="token keyword">int</span> rtype<span class="token punctuation">,</span> <span class="token keyword">double</span> alpha <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">double</span> beta <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 样本数量</span>  size_t n <span class="token operator">=</span> src<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//没有样本，返回空矩阵</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//样本的维数</span>  size_t d <span class="token operator">=</span> src<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Mat <span class="token function">data</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> d<span class="token punctuation">,</span> rtype<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//拷贝数据</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      string error_message <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Image number %d was empty, please check your input data."</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">CV_Error</span><span class="token punctuation">(</span>CV_StsBadArg<span class="token punctuation">,</span> error_message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//确保数据能被reshape</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">total</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> d<span class="token punctuation">)</span><span class="token punctuation">{</span>      string error_message <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Wrong number of elements in matrix #%d! Expected %d was %d."</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> d<span class="token punctuation">,</span> src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">CV_Error</span><span class="token punctuation">(</span>CV_StsBadArg<span class="token punctuation">,</span> error_message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Mat xi <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//转化为1行，n列的格式</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">isContinuous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convertTo</span><span class="token punctuation">(</span>xi<span class="token punctuation">,</span> rtype<span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> beta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>      src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convertTo</span><span class="token punctuation">(</span>xi<span class="token punctuation">,</span> rtype<span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> beta<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  vector<span class="token operator">&lt;</span>Mat<span class="token operator">></span> db<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//get_img();</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>img_num<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    string filename <span class="token operator">=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Img/%d.jpg"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    db<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">imread</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> IMREAD_GRAYSCALE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// Build a matrix with the observations in row:</span>    Mat data <span class="token operator">=</span> <span class="token function">asRowMatrix</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> CV_32FC1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// PCA算法保持5主成分分量</span>    <span class="token keyword">int</span> num_components <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//执行pca算法</span>    PCA <span class="token function">pca</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CV_PCA_DATA_AS_ROW<span class="token punctuation">,</span> num_components<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//copy  pca算法结果</span>    Mat mean <span class="token operator">=</span> pca<span class="token punctuation">.</span>mean<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat eigenvalues <span class="token operator">=</span> pca<span class="token punctuation">.</span>eigenvalues<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat eigenvectors <span class="token operator">=</span> pca<span class="token punctuation">.</span>eigenvectors<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//均值脸</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"avg"</span><span class="token punctuation">,</span> <span class="token function">norm_0_255</span><span class="token punctuation">(</span>mean<span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//五个特征脸</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"pc1"</span><span class="token punctuation">,</span> <span class="token function">norm_0_255</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>eigenvectors<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"pc2"</span><span class="token punctuation">,</span> <span class="token function">norm_0_255</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>eigenvectors<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"pc3"</span><span class="token punctuation">,</span> <span class="token function">norm_0_255</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>eigenvectors<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"pc4"</span><span class="token punctuation">,</span> <span class="token function">norm_0_255</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>eigenvectors<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"pc5"</span><span class="token punctuation">,</span> <span class="token function">norm_0_255</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>eigenvectors<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reshape</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> db<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Success!</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="01.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> OpenCV </tag>
            
            <tag> c++ </tag>
            
            <tag> PCA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PCA原理分析</title>
      <link href="/2019/08/05/pca-yuan-li-fen-xi/"/>
      <url>/2019/08/05/pca-yuan-li-fen-xi/</url>
      
        <content type="html"><![CDATA[<p>参考资料<br><a href="PCA.pdf">PCA原理分析</a></p><h1 id="PCA的数学原理"><a href="#PCA的数学原理" class="headerlink" title="PCA的数学原理"></a>PCA的数学原理</h1><p>PCA（Principal Component Analysis）是一种常用的数据分析方法。PCA通过线性变换将原始数据变换为一组各维度线性无关的表示，可用于提取数据的主要特征分量，常用于高维数据的降维。</p><h2 id="数据的向量表示以及降维问题"><a href="#数据的向量表示以及降维问题" class="headerlink" title="数据的向量表示以及降维问题"></a>数据的向量表示以及降维问题</h2><p>一般情况下，在数据挖掘和机器学习中，数据被表示为向量。例如某个外卖商家2018年全年的流量及交易记录可以看成是一组数据的集合，其中每一天的数据是一条记录。记录的格式如下:<br>(日期, 浏览量，访客数，下单数，成交数，成交金额)<br>其中”日期”是一个记录标志而非度量值，而数据挖掘关心的大多是度量值，因此如果我们忽略日期这个字段后，我们得到一组记录，每条记录可以被表示为一个五维向量，其中一条看起来大约是这个样子：<br>$$(1000, 580, 300, 240, 3000)^T$$<br>注意这里用了转置，习惯上使用列向量来表示一条记录。本文说到的向量默认都是列向量。    </p><p>我们当然可以对这一组五维向量进行分析和挖掘，不过很多机器学习算法的复杂度和数据的维数有着密切关系，甚至与维数呈指数级关联。当然，这里区区五维的数据，也许还无所谓，但是实际机器学习中处理成千上万甚至几十万维的情况也并不罕见，在这种情况下，机器学习的资源消耗是不可接受的，因此我们必须对数据进行降维。</p><p>降维当然意味着信息的丢失，不过鉴于实际数据本身常常存在的相关性，我们可以想办法在降维的同时将信息的损失尽量降低。    </p><p>举一个例子，假如某学籍数据有两列M和F，其中M列的取值是如何此学生为男性取值1，为女性取值0；而F列是学生为女性取值1，男性取值0。此时如果我们统计全部学籍数据，会发现对于任何一条记录来说，当M为1时F必定为0，反之当M为0时F必定为1。在这种情况下，我们将M或F去掉实际上没有任何信息的损失，因为只要保留一列就可以完全还原另一列。<br>当然上面是一个极端的情况，在现实中也许不会出现，不过类似的情况还是很常见的。例如上面淘宝店铺的数据，从经验我们可以知道，“浏览量”和“访客数”往往具有较强的相关关系，而“下单数”和“成交数”也具有较强的相关关系。这里我们非正式的使用“ <strong>相关关系</strong>”这个词，可以直观理解为“当某一天这个店铺的浏览量较高（或较低）时，我们应该很大程度上认为这天的访客数也较高（或较低）”。<br>这种情况表明，如果我们删除浏览量或访客数其中一个指标，我们应该期待并不会丢失太多信息。因此我们可以删除一个，以降低机器学习算法的复杂度。    </p><p>上面给出的是降维的朴素思想描述，可以有助于直观理解降维的动机和可行性，但并不具有操作指导意义。例如，我们到底删除哪一列损失的信息才最小？亦或根本不是单纯删除几列，而是通过某些变换将原始数据变为更少的列但又使得丢失的信息最小？到底如何度量丢失信息的多少？如何根据原始数据决定具体的降维操作步骤？下面对降维问题进行数学化和形式化的讨论</p><h2 id="向量的表示及基变换"><a href="#向量的表示及基变换" class="headerlink" title="向量的表示及基变换"></a>向量的表示及基变换</h2><h3 id="内积与投影"><a href="#内积与投影" class="headerlink" title="内积与投影"></a>内积与投影</h3><p>下面先来看一个高中就学过的向量运算：内积。两个维数相同的向量的内积被定义为：</p><p>$$(a_1, a_2, \dots ,a_n)^T \cdot (b_1, b_2, \dots , b_n)^T = a_1b_1 + a_2b_2 + \dots + a_nb_n)$$<br>内积运算将两个向量映射为一个实数。其计算方式非常容易理解，但是其意义并不明显。下面我们分析内积的几何意义。假设A和B是两个n维向量，我们知道n维向量可以等价表示为n维空间中的一条从原点发射的有向线段，为了简单起见我们假设A和B均为二维向量,则 $A = (x_1,y_1)$, $B = (x_2,y_2)$. 则在二维平面上A和B可以用两条发自原点的有向线段表示，见下图：<br><img src="01.png" alt><br>好，现在我们从A点向B所在直线引一条垂线。我们知道垂线与B的交点叫做A在B上的投影，再设A与B的夹角是a，则投影的矢量长度为|A|cos(a),其中 $|A| = \sqrt{x_1^2 + y_1^2}$ 是向量A的模，也就是A线段的标量长度。<br>注意这里我们专门区分了矢量长度和标量长度，标量长度总是大于等于0，值就是线段的长度；而矢量长度可能为负，其绝对值是线段长度，而符号取决于其方向与标准方向相同或相反。<br>到这里还是看不出内积和这东西有什么关系，不过如果我们将内积表示为另一种我们熟悉的形式：<br>$$ A \cdot B = |A||B|cos(a)$$</p><p>现在事情似乎是有点眉目了：A与B的内积等于A到B的投影长度乘以B的模。再进一步，如果我们假设B的模为1，即让|B|=1，那么就变成了：<br>$$A \cdot B = |A|cos(a)$$<br>也就是说， <strong>设向量B的模为1，则A与B的内积值等于A向B所在直线投影的矢量长度！</strong>这就是内积的一种几何解释，也是我们得到的第一个重要结论。在后面的推导中，将反复使用这个结论。</p><h3 id="基"><a href="#基" class="headerlink" title="基"></a>基</h3><p>下面我们继续在二维空间内讨论向量。上文说过，一个二维向量可以对应二维笛卡尔直角坐标系中从原点出发的一个有向线段。例如下面这个向量：<br><img src="02.png" alt><br>在代数表示方面，我们经常用线段终点的点坐标表示向量，例如上面的向量可以表示为(3,2)，这是我们再熟悉不过的向量表示。<br>不过我们常常忽略， <strong>只有一个(3,2)本身是不能够精确表示一个向量的</strong>。我们仔细看一下，这里的3实际表示的是向量在x轴上的投影值是3，在y轴上的投影值是2。也就是说我们其实隐式引入了一个定义：以x轴和y轴上正方向长度为1的向量为标准。那么一个向量(3,2)实际是说在x轴投影为3而y轴的投影为2。注意投影是一个矢量，所以可以为负。<br>更正式的说，向量(x,y)实际上表示线性组合：<br>$$x(1,0)^T + y(0,1)^T$$<br>不难证明所有二维向量都可以表示为这样的线性组合。此处(1,0)和(0,1)叫做二维空间中的一组基。<br><img src="03.png" alt><br>所以， <strong>要准确描述向量，首先要确定一组基，然后给出在基所在的各个直线上的投影值，就可以了</strong>。只不过我们经常省略第一步，而默认以(1,0)和(0,1)为基。<br>我们之所以默认选择(1,0)和(0,1)为基，当然是比较方便，因为它们分别是x和y轴正方向上的单位向量，因此就使得二维平面上点坐标和向量一一对应，非常方便。但实际上任何两个线性无关的二维向量都可以成为一组基，所谓线性无关在二维平面内可以直观认为是两个不在一条直线上的向量。    </p><p>例如，(1,1)和(-1,1)也可以成为一组基。一般来说，我们希望基的模是1，因为从内积的意义可以看到，如果基的模是1，那么就可以方便的用向量点乘基而直接获得其在新基上的坐标了！实际上，对应任何一个向量我们总可以找到其同方向上模为1的向量，只要让两个分量分别除以模就好了。例如，上面的基可以变为 $(\frac{1}{\sqrt 2},\frac{1}{\sqrt 2})$ 和 $(\frac{-1}{\sqrt 2},\frac{1}{\sqrt 2})$.<br>现在，我们想获得(3,2)在新基上的坐标，即在两个方向上的投影矢量值，那么根据内积的几何意义，我们只要分别计算(3,2)和两个基的内积，不难得到新的坐标为 $(\frac{5}{\sqrt 2},\frac{-1}{\sqrt 2})$。下图给出了新的基以及(3,2)在新基上坐标值的示意图：<br><img src="05.png" alt><br>一要求就是线性无关，非正交的基也是可以的。不过因为正交基有较好的性质，所以一般使用的基都是正交的。</p><h3 id="基变换的矩阵表示"><a href="#基变换的矩阵表示" class="headerlink" title="基变换的矩阵表示"></a>基变换的矩阵表示</h3><p>下面我们找一种简便的方式来表示基变换。还是拿上面的例子，想一下，将(3,2)变换为新基上的坐标，就是用(3,2)与第一个基做内积运算，作为第一个新的坐标分量，然后用(3,2)与第二个基做内积运算，作为第二个新坐标的分量。实际上，我们可以用矩阵相乘的形式简洁的表示这个变换：<br>$$\begin{pmatrix}<br>1/ \sqrt 2 &amp; 1/ \sqrt 2 \\\<br>-1/ \sqrt 2 &amp; 1/ \sqrt 2 \<br>\end{pmatrix}<br>\begin{pmatrix}<br>3 \\\<br>2 \<br>\end{pmatrix} = \begin{pmatrix}<br>5 / \sqrt 2 \\\<br>-1/ \sqrt 2 \<br>\end{pmatrix}$$</p><p>太漂亮了！其中矩阵的两行分别为两个基，乘以原向量，其结果刚好为新基的坐标。可以稍微推广一下，如果我们有m个二维向量，只要将二维向量按列排成一个两行m列矩阵，然后用“基矩阵”乘以这个矩阵，就得到了所有这些向量在新基下的值。例如 $(1,1)，(2,2)，(3,3)$，想变换到刚才那组基上，则可以这样表示：</p><p>$$\begin{pmatrix}<br>1 / \sqrt 2 &amp; 1/ \sqrt 2 \\\<br>-1 / \sqrt 2 &amp; 1/ \sqrt 2 \<br>\end{pmatrix}<br>\begin{pmatrix}<br>1 &amp; 2 &amp; 3 \\\<br>1 &amp; 2 &amp; 3 \<br>\end{pmatrix} = \begin{pmatrix}<br>2 / \sqrt 2 &amp; 4 / \sqrt 2 &amp; 6 / \sqrt 2 \\\<br>0 &amp; 0 &amp; 0 \<br>\end{pmatrix}$$</p><p>于是一组向量的基变换被干净的表示为矩阵的相乘。<br><strong>一般的，如果我们有M个N维向量，想将其变换为由R个N维向量表示的新空间中，那么首先将R个基按行组成矩阵A，然后将向量按列组成矩阵B，那么两矩阵的乘积AB就是变换结果，其中AB的第m列为A中第m列变换后的结果。</strong><br>数学表示为：<br>$$\begin{pmatrix}<br>p_1 \\\<br>p_2 \\\<br>\vdots \\\<br>p_R \<br>\end{pmatrix}<br>\begin{pmatrix}<br>a_1 &amp; a_2 &amp; \dots &amp; a_M \<br>\end{pmatrix} = \begin{pmatrix}<br>p_1a_1 &amp; p_1a_2 &amp; \dots &amp; p_1a_M \\\<br>p_2a_1 &amp; p_2a_2 &amp; \dots &amp; p_2a_M \\\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\\<br>p_Ra_1 &amp; p_Ra_2 &amp; \dots &amp; p_Ra_M \<br>\end{pmatrix}$$<br>其中 $p_i$是一个行向量，表示第i个基， $a_j$是一个列向量，表示第j个原始数据记录。<br>特别要注意的是，这里R可以小于N，而R决定了变换后数据的维数。也就是说，我们可以将一N维数据变换到更低维度的空间中去，变换后的维度取决于基的数量。因此这种矩阵相乘的表示也可以表示降维变换。<br>最后，上述分析同时给矩阵相乘找到了一种物理解释： <strong>两个矩阵相乘的意义是将右边矩阵中的每一列列向量变换到左边矩阵中每一行行向量为基所表示的空间中去</strong>。更抽象的说，一个矩阵可以表示一种线性变换。很多同学在学线性代数时对矩阵相乘的方法感到奇怪，但是如果明白了矩阵相乘的物理意义，其合理性就一目了然了。    </p><h3 id="协方差矩阵及优化目标"><a href="#协方差矩阵及优化目标" class="headerlink" title="协方差矩阵及优化目标"></a>协方差矩阵及优化目标</h3><p>上面我们讨论了选择不同的基可以对同样一组数据给出不同的表示，而且如果基的数量少于向量本身的维数，则可以达到降维的效果。但是我们还没有回答一个最最关键的问题：如何选择基才是最优的。或者说，如果我们有一组N维向量，现在要将其降到K维（K小于N），那么我们应该如何选择K个基才能最大程度保留原有的信息？<br>要完全数学化这个问题非常繁杂，这里我们用一种非形式化的直观方法来看这个问题。</p><p>为了避免过于抽象的讨论，我们仍以一个具体的例子展开。假设我们的数据由五条记录组成，将它们表示成矩阵形式：<br>$$ \begin{pmatrix}<br>1 &amp; 1 &amp;2 &amp; 4 &amp; 2 \\\<br>1 &amp; 3 &amp; 3 &amp; 4 &amp; 4 \<br>\end{pmatrix}$$<br>其中每一列为一条数据记录，而一行为一个字段。为了后续处理方便，我们首先将每个字段内所有值都减去字段均值，其结果是将每个字段都变为均值为0（这样做的道理和好处后面会看到）。<br>我们看上面的数据，第一个字段均值为2，第二个字段均值为3，所以变换后：<br>$$ \begin{pmatrix}<br>-1 &amp; -1 &amp; 0 &amp; 2 &amp; 0 \\\<br>-2 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \<br>\end{pmatrix}$$<br>我们可以看下五条数据在平面直角坐标系内的样子：<br><img src="06.png" alt><br>现在问题来了：如果我们必须使用一维来表示这些数据，又希望尽量保留原始的信息，你要如何选择？    </p><p>通过上一节对基变换的讨论我们知道，这个问题实际上是要在二维平面中选择一个方向，将所有数据都投影到这个方向所在直线上，用投影值表示原始记录。这是一个实际的二维降到一维的问题。    </p><p>那么如何选择这个方向（或者说基）才能尽量保留最多的原始信息呢？一种直观的看法是：希望投影后的投影值尽可能分散。    </p><p>以上图为例，可以看出如果向x轴投影，那么最左边的两个点会重叠在一起，中间的两个点也会重叠在一起，于是本身四个各不相同的二维点投影后只剩下两个不同的值了，这是一种严重的信息丢失，同理，如果向y轴投影最上面的两个点和分布在x轴上的两个点也会重叠。所以看来x和y轴都不是最好的投影选择。我们直观目测，如果向通过第一象限和第三象限的斜线投影，则五个点在投影后还是可以区分的。<br>下面，我们用数学方法表述这个问题。</p><h3 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h3><p>上文说到，我们希望投影后投影值尽可能分散，而这种分散程度，可以用数学上的方差来表述。此处，一个字段的方差可以看做是每个元素与字段均值的差的平方和的均值，即：<br>$$Var(a)=\frac{1}{m} \sum_{i=1}^{m}(a_i- \mu)^2$$<br>由于上面我们已经将每个字段的均值都化为0了，因此方差可以直接用每个元素的平方和除以元素个数表示：<br>$$Var(a) = \frac{1}{m} \sum_{i=1}^{m}a_i^2$$<br>于是上面的问题被形式化表述为：寻找一个一维基，使得所有数据变换为这个基上的坐标表示后，方差值最大。    </p><h3 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h3><p>对于上面二维降成一维的问题来说，找到那个使得方差最大的方向就可以了。不过对于更高维，还有一个问题需要解决。考虑三维降到二维问题。与之前相同，首先我们希望找到一个方向使得投影后方差最大，这样就完成了第一个方向的选择，继而我们选择第二个投影方向。<br>如果我们还是单纯只选择方差最大的方向，很明显，这个方向与第一个方向应该是“几乎重合在一起”，显然这样的维度是没有用的，因此，应该有其他约束条件。从直观上说，让两个字段尽可能表示更多的原始信息，我们是不希望它们之间存在（线性）相关性的，因为相关性意味着两个字段不是完全独立，必然存在重复表示的信息。<br>数学上可以用两个字段的协方差表示其相关性，由于已经让每个字段均值为0，则：<br>$$Cov(a,b)=\frac{1}{m} \sum_{i=1}^{m}a_ib_i$$<br>可以看到，在字段均值为0的情况下，两个字段的协方差简洁的表示为其内积除以元素数m。</p><p>当协方差为0时，表示两个字段完全独立。为了让协方差为0，我们选择第二个基时只能在与第一个基正交的方向上选择。因此最终选择的两个方向一定是正交的。</p><p>至此，我们得到了降维问题的优化目标：<strong>将一组N维向量降为K维（K大于0，小于N），其目标是选择K个单位（模为1）正交基，使得原始数据变换到这组基上后，各字段两两间协方差为0，而字段的方差则尽可能大（在正交的约束下，取最大的K个方差）</strong>。</p><h3 id="协方差矩阵"><a href="#协方差矩阵" class="headerlink" title="协方差矩阵"></a>协方差矩阵</h3><p>上面我们导出了优化目标，但是这个目标似乎不能直接作为操作指南（或者说算法），因为它只说要什么，但根本没有说怎么做。所以我们要继续在数学上研究计算方案。</p><p>我们看到，最终要达到的目的与字段内方差及字段间协方差有密切关系。因此我们希望能将两者统一表示，仔细观察发现，两者均可以表示为内积的形式，而内积又与矩阵相乘密切相关。于是我们来了灵感：</p><p>假设我们只有a和b两个字段，那么我们将它们按行组成矩阵X：</p><p>$$ X = \begin{pmatrix}<br>a_1 &amp; a_2 &amp; \dots &amp; a_m \\\<br>b_1 &amp; b_2 &amp; \dots &amp; b_m \<br>\end{pmatrix}$$<br>然后我们用X乘以X的转置，并乘上系数 $\frac{1}{m}$：<br>$$\frac{1}{m} \begin{pmatrix}<br>\frac{1}{m} \sum_{i=1}^{m}a_i^2 &amp; \frac{1}{m} \sum_{i=1}^{m}a_ib_i \\\<br>\frac{1}{m} \sum_{i=1}^{m}a_ib_i &amp; \frac{1}{m} \sum_{i=1}^{m}b_i^2 \<br>\end{pmatrix}$$</p><p>奇迹出现了！这个矩阵对角线上的两个元素分别是两个字段的方差，而其它元素是a和b的协方差。两者被统一到了一个矩阵的。</p><p>根据矩阵相乘的运算法则，这个结论很容易被推广到一般情况：</p><p><strong>设我们有m个n维数据记录，将其按列排成n乘m的矩阵X，设 $C = \frac{1}{m}XX^T$,则C是一个对称矩阵，其对角线分别个各个字段的方差，而第i行j列和j行i列元素相同，表示i和j两个字段的协方差。</strong></p><h3 id="协方差矩阵对角化"><a href="#协方差矩阵对角化" class="headerlink" title="协方差矩阵对角化"></a>协方差矩阵对角化</h3><p>根据上述推导，我们发现要达到优化目前，等价于将协方差矩阵对角化：即除对角线外的其它元素化为0，并且在对角线上将元素按大小从上到下排列，这样我们就达到了优化目的。这样说可能还不是很明晰，我们进一步看下原矩阵与基变换后矩阵协方差矩阵的关系：</p><p>设原始数据矩阵X对应的协方差矩阵为C，而P是一组基按行组成的矩阵，设Y=PX，则Y为X对P做基变换后的数据。设Y的协方差矩阵为D，我们推导一下D与C的关系：<br>$$\begin{align}<br>D &amp;= \frac{1}{m}YY^T \\\<br>  &amp;= \frac{1}{m}(PX)(PX)^T \\\<br>  &amp;= \frac{1}{m}PXX^T P^T \\\<br>  &amp;= P(\frac{1}{m}XX^T)P^T \\\<br>  &amp;= PCP^T<br>\end{align}$$</p><p>现在事情很明白了！我们要找的P不是别的，而是能让原始协方差矩阵对角化的P。换句话说，优化目标变成了寻找一个矩阵P，满足 $PCP^T$ 是一个对角矩阵，并且对角元素按从大到小依次排列，那么P的前K行就是要寻找的基，用P的前K行组成的矩阵乘以X就使得X从N维降到了K维并满足上述优化条件。<br>现在所有焦点都聚焦在了协方差矩阵对角化问题上，有时，我们真应该感谢数学家的先行，因为矩阵对角化在线性代数领域已经属于被玩烂了的东西，所以这在数学上根本不是问题。</p><p>由上文知道，协方差矩阵C是一个是对称矩阵，在线性代数上，实对称矩阵有一系列非常好的性质：</p><ol><li>实对称矩阵不同特征值对应的特征向量必然正交</li><li>设特征向量λ重数为r，则必然存在r个线性无关的特征向量对应于λ，因此可以将这r个特征向量单位正交化。<br>由上面两条可知，一个n行n列的实对称矩阵一定可以找到n个单位正交特征向量，设这n个特征向量为 $e_1,e_2,\dots,e_n,$ 我们将其按列组成矩阵：<br>$$E = \begin{pmatrix}<br>e_1 &amp; e_2 &amp; \dots &amp; e_n \<br>\end{pmatrix}$$<br>则对协方差矩阵C有如下结论：<br>$$E_TCE = \Lambda = \begin{pmatrix}<br>\lambda_1 &amp; &amp; &amp; \\\<br>&amp; \lambda_2 &amp; &amp; \\\<br>&amp; &amp; \ddots &amp; \\\<br>&amp; &amp; &amp; \lambda_n \<br>\end{pmatrix}$$<br>其中 $Lambda$为对角矩阵，其对角元素为各特征向量对应的特征值（可能有重复）。</li></ol><p>以上结论不再给出严格的数学证明，对证明感兴趣的朋友可以参考线性代数书籍关于“实对称矩阵对角化”的内容。</p><p>到这里，我们发现我们已经找到了需要的矩阵P：<br>$$P = E^T$$</p><p>P是协方差矩阵的特征向量单位化后按行排列出的矩阵，其中每一行都是C的一个特征向量。如果设P按照Λ中特征值的从大到小，将特征向量从上到下排列，则用P的前K行组成的矩阵乘以原始数据矩阵X，就得到了我们需要的降维后的数据矩阵Y。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PCA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Face Detection</title>
      <link href="/2019/08/03/face-detection/"/>
      <url>/2019/08/03/face-detection/</url>
      
        <content type="html"><![CDATA[<h1 id="人脸检测"><a href="#人脸检测" class="headerlink" title="人脸检测"></a>人脸检测</h1><h2 id="OpenCV模块"><a href="#OpenCV模块" class="headerlink" title="OpenCV模块"></a>OpenCV模块</h2><ul><li>core：简洁核心模块，基本函数，基本数据结构</li><li>imgproc：图像处理模块，线性和非线性图像滤波，几何图像转换，颜色空间转换，直方图等。</li><li>video：视频分析模块，运动估计，背景消除，物体跟踪算法</li><li>calib3d：基本多视角几何算法，单体和立体相机的标定，对象姿势估计，双目立体匹配算法和元素的三维重建</li><li>features2d：包含了显著特征检测算法，描述算子和算子匹配算法</li><li>objdetect：物体检测和一些预定义的物体的检测（如人脸，眼睛，杯子，人，汽车等)</li><li>ml：多种机器学习算法，如K均值，支持向量机和神经网络</li><li>highgui：简单易用接口，有视频捕捉，图像和视频编码功能，简单UI接口，iOS的是其中一个子集</li><li>gpu：GPU加速算法，iOS不可用</li><li>ocl：OpenCL通用算法，iOS不可用</li><li>其它辅助模块，如用户贡献的算法</li></ul><h2 id="人脸检测-1"><a href="#人脸检测-1" class="headerlink" title="人脸检测"></a>人脸检测</h2><h2 id="检测图片中的人脸"><a href="#检测图片中的人脸" class="headerlink" title="检测图片中的人脸"></a>检测图片中的人脸</h2><p>在OpenCV中，主要使用两种特征进行人脸检测，Haar特征和LBP特征，下面使用的是LBP特征。<br>实现人脸检测主要依赖于detectMultiScale()函数</p><pre class=" language-cpp"><code class="language-cpp">CV_WRAP <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">detectMultiScale</span><span class="token punctuation">(</span> <span class="token keyword">const</span> Mat<span class="token operator">&amp;</span> image<span class="token punctuation">,</span>  CV_OUT vector<span class="token operator">&lt;</span>Rect<span class="token operator">></span><span class="token operator">&amp;</span> objects<span class="token punctuation">,</span>  <span class="token keyword">double</span> scaleFactor<span class="token operator">=</span><span class="token number">1.1</span><span class="token punctuation">,</span>  <span class="token keyword">int</span> minNeighbors<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>  Size minSize<span class="token operator">=</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Size maxSize<span class="token operator">=</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>各参数含义如下：<br><strong>const Mat&amp; image</strong>: 需要被检测的图像（灰度图）。<br><strong>vector<rect>&amp; objects</rect></strong>: 保存被检测出的人脸位置坐标序列。<br><strong>double scaleFactor</strong>: 每次图片缩放的比例。<br><strong>int minNeighbors</strong>: 每一个人脸至少要检测到多少次才算是真的人脸。<br><strong>doubleint flags</strong>： 决定是缩放分类器来检测，还是缩放图像。<br><strong>Size()</strong>: 表示人脸的最大最小尺寸。</p><p>具体实现代码如下:</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/objdetect/objdetect.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/core.hpp></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> CV_COLOR_GREEN cv::Scalar(0, 255, 0)</span>CascadeClassifier faceCascade<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span> Mat img<span class="token punctuation">;</span> CascadeClassifier <span class="token function">faceDetector</span><span class="token punctuation">(</span><span class="token string">"lbpcascade_frontalface.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读取分类器</span> img <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//读取检测的图片原图</span> vector<span class="token operator">&lt;</span>Rect<span class="token operator">></span> objects<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//存放检测的对象</span> faceDetector<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//执行检测</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> objects<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//遍历检测到的脸</span> <span class="token punctuation">{</span>  <span class="token function">rectangle</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> objects<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> CV_COLOR_RED<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//画出检测到的脸</span> <span class="token punctuation">}</span> <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//显示结果</span> <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>检测结果:<br><img src="https://i.loli.net/2019/08/01/5d42b5d26727057681.png" alt><br><img src="https://i.loli.net/2019/08/01/5d42b5d26fea564434.png" alt><br><img src="https://i.loli.net/2019/08/01/5d42b5d2b360c81753.png" alt></p><h3 id="检测视频中的人脸"><a href="#检测视频中的人脸" class="headerlink" title="检测视频中的人脸"></a>检测视频中的人脸</h3><p>原理就是对视频逐帧处理，1s大约分为30帧。</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/imgproc/imgproc.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/objdetect/objdetect.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> CV_COLOR_GREEN cv::Scalar(0, 255, 0)</span>CascadeClassifier faceCascade<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//打开摄像头</span>  VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//读取分类器</span>  CascadeClassifier <span class="token function">faceDetector</span><span class="token punctuation">(</span><span class="token string">"lbpcascade_frontalface.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  vector<span class="token operator">&lt;</span>Rect<span class="token operator">></span> objects<span class="token punctuation">;</span>  Mat frame<span class="token punctuation">;</span>  Mat edges<span class="token punctuation">;</span>  <span class="token keyword">bool</span> stop <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>stop<span class="token punctuation">)</span><span class="token punctuation">{</span>    cap <span class="token operator">>></span> frame<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>frame<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      stop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> scaleFactor<span class="token operator">=</span><span class="token number">1.1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> minNeighbors <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//int flags = 1;</span>    <span class="token comment" spellcheck="true">//cvtColor(frame, edges, CV_BGR2GRAY);</span>    <span class="token comment" spellcheck="true">//GaussianBlur(edges, edges, Size(7,7), 1.5, 1.5);</span>    faceDetector<span class="token punctuation">.</span><span class="token function">detectMultiScale</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> objects<span class="token punctuation">,</span>scaleFactor<span class="token punctuation">,</span> minNeighbors<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> objects<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">rectangle</span><span class="token punctuation">(</span>frame<span class="token punctuation">,</span> objects<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> CV_COLOR_GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">rectangle</span><span class="token punctuation">(</span>edges<span class="token punctuation">,</span> objects<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> CV_COLOR_GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//imshow("edge", edges);</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"frame"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span>      stop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>识别结果:</p><p><img src="https://i.loli.net/2019/08/02/5d43e017d9e1227148.png" alt><br><img src="https://i.loli.net/2019/08/02/5d43e017f281538470.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 人脸检测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Face_Detection </tag>
            
            <tag> OpenCV </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Local Binary Patterns</title>
      <link href="/2019/08/01/local-binary-patterns/"/>
      <url>/2019/08/01/local-binary-patterns/</url>
      
        <content type="html"><![CDATA[<h1 id="LBP算法"><a href="#LBP算法" class="headerlink" title="LBP算法"></a>LBP算法</h1><p>LBP（Local Binary Patterns，局部二值模式）是一种能够有效地度量和提取图像局部纹理信息的算子，具有旋转不变性和灰度不变性等显著的优点。它是人脸识别中一种提取特征的重要方法，具有对光照不敏感的特性，但是对姿态和表情的鲁棒性不强。</p><h2 id="纹理"><a href="#纹理" class="headerlink" title="纹理"></a>纹理</h2><p>纹理是由于物体表面物理属性不同所引起的能够表示某个特定表面特征的灰度或颜色信息。纹理反映了图像灰度模式的空间分布，包含了图像的表面信息及其周围环境的关系。</p><h2 id="基本的LBP算子"><a href="#基本的LBP算子" class="headerlink" title="基本的LBP算子"></a>基本的LBP算子</h2><p>局部二值模式是一种灰度范围内的纹理描述方式。最初的LBP算子定义在一个3×3的窗口，以窗口中心像素点为阈值，将相邻的像素的灰度值与其进行比较，若周围的像素值大于中心点的值，则将该像素位置标记为1,否则为0.这样一个3×3邻域内的8个点可产生一个8-bit的无符号数，再按其位置赋予不同权重求和得一整数，即可得到该窗口的 <strong>LBP</strong> 值，并用这个数反映该区域的纹理信息。<br>对比度分量C是邻域中所有大于和等于中心点像素的均值与所有小于中心点像素的均值之差。<br><img src="https://i.loli.net/2019/07/31/5d415779ca87257597.jpg" alt></p><p>基本的LBP算子最大的缺陷是只覆盖了一个固定半径范围内的小区域，改进的LBP算子，将3×3邻域扩展到任意邻域，用圆形邻域代替了正方形邻域，该算子允许在半径为R的圆形邻域内有任意多个像素点。</p><ul><li>一个局部区域的纹理分布可假设为局部区域内像素灰度的联合分布密度<br>$$T = t(g_c,g_0, ….,g_{p-1})$$<br>$g_c$表示局部区域的中心点的灰度值,$g_p(p=0,1,…,p)$对应中心点周围等距分布的P个点</li><li>采用 <strong>双线性插算法</strong> 对没有完全落在像素位置的点计算灰度值。邻域内的$g_p$点的坐标可以表示为:<br>$$(x_p,y_p) = (x_c + Rcos(\frac{2\pi}{P}),y_c - Rsin(\frac{2\pi}{P}))$$<br>$(x_c,y_c)$表示中心点的坐标</li><li>将中心点$g_c$的值从邻域像素的灰度值$g_p$中减去，则局部区域的纹理可以用中心点和中心点与周边像素值之差的联合分布来表示:<br>$$T = t(g_c,g_0-g_c,….,g_{p-1}-g_c)$$</li><li>假设中心像素点$g_c$与周边点像素$g_p$的差值$g_p-g_c(p=0,1,…P)$独立于中心点$g_c$，则<br>$$T\approx t(g_c)(g_0-g_c,…,g_{p-1}-g_c)$$</li><li>实际上，$t(g_c)$只是描述了整个图像的亮度分布情况，而和图像的局部纹理无关，它不能为纹理分析提供任何有价值的信息<br>$$T\approx t(g_0-g_c,…,g_{p-1}-g_c)$$</li><li>差值的联合分布具有灰度平移不变性，即邻域中所有P+1个像素同时加上或减去某个值，其表征的纹理不变。</li><li>为了达到尺度不变的目的，只考虑差值的符号<br>$$T\approx t(s(g_0-g_c),…,s(g_p-g_c))$$</li></ul><p>$$s(x)=\begin{cases}<br>1 , \quad &amp;x &gt; 0  \\\<br>0 , &amp;x \geqslant 0<br>\end{cases}<br>$$</p><p>上式得到了一个8位的二进制数，再对像素按不同位置用$2^p$进行加权求和，这样得到了一个与邻域像素点相关的唯一的 <strong>LBP</strong> 值，这个值称为 <strong>模式</strong>。这个值描述的是以$(x_c,y_c)$为中心的局部区域的纹理，可以表示为<br>$$LBP(x_c,y_c) = \sum_{p=0}^{P-1}s(g_p - g_c)2^P$$<br>上式意味着差值的符号转化成一个P-bit的二进制数，进而转化成为一个取值范围为0-$2^p$的离散的LBP值，或者说转化为一种LBP模式。</p><ul><li>局部区域的灰度分布或纹理，可以用这个LBP值或LBP模式近似描述为:<br>$$T\approx t(LBP(x_c,y_c))$$<br>LBP算子对于任何单调的灰度变化具有鲁棒性，用符号$LBP_P^R$表示在半径为R的圆形邻域内有P个像素点$g_p(p=0,1,…,P)$的LBP算子<br><img src="https://i.loli.net/2019/07/31/5d415779b84ac47631.jpg" alt></li></ul><h2 id="LBP等价模式"><a href="#LBP等价模式" class="headerlink" title="LBP等价模式"></a>LBP等价模式</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>当某个局部二进制模式所对应的循环二进制数从０到１或从１到０最多有两次跳变时，该局部二进制模式所对应的二进制就称为一个等价模式类。比如00000000,11111111,10001111都是等价类。</p><h3 id="检验方法"><a href="#检验方法" class="headerlink" title="检验方法"></a>检验方法</h3><p>检验某种模式是否是等价模式的简单办法是将其和其移动一位后的二进制模式按位相减的绝对值求和<br>$$U(G_p) = |s(g_{p-1}-g_c)-s(g_0-g_c)|+\sum_{p=1}^{P-1}|s(g_p-g_c)-s(g_{p-1}-g_c)$$<br>若某种模式计算得到的 $U(G_p)$小于或等于２，则将其归于等价模式<br><img src="https://i.loli.net/2019/07/31/5d415779c949196019.jpg" alt></p><h2 id="旋转不变的LBP算子"><a href="#旋转不变的LBP算子" class="headerlink" title="旋转不变的LBP算子"></a>旋转不变的LBP算子</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>不断旋转圆形邻域得到一系列的初始定义的LBP值，取其最小值作为该邻域的LBP值，用公式表示为:<br>$$LBP_{P,R}^{ri} = min(ROR(LBP_{P,R}^{ri},i)|i=0,1,…,P-1)$$<br>$LBP^{ri}$表示旋转不变的LBP算子，$ROR(x,i)$函数为旋转函数，表示将x循环右移i(i&lt;P)位。</p><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li>对于图像旋转，表现的更为鲁棒，并且LBP模式的种类进一步减少，使纹理识别更加容易。</li><li>丢失了方向信息<br><img src="https://i.loli.net/2019/07/31/5d415779b8fed91298.jpg" alt></li></ul><h2 id="旋转不变的的等价模式"><a href="#旋转不变的的等价模式" class="headerlink" title="旋转不变的的等价模式"></a>旋转不变的的等价模式</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><p>将等价模式类进行旋转得到旋转不变的等价模式</p><p>$$LBP_{P,R}^{riu2} = \begin{cases}<br>\sum_{P=0}^{P-1}s(g_p-g_c), &amp; U(G_p) \leq 2 \\\<br>P + 1, &amp; U(G_p) &gt;2<br>\end{cases}<br>$$</p><p>其中$U(G_p)$表示0到1或1到0跳变的次数，$LBP^{riu2}$被称为旋转不变的等价模式</p><h2 id="几种LBP算子的维数比较"><a href="#几种LBP算子的维数比较" class="headerlink" title="几种LBP算子的维数比较"></a>几种LBP算子的维数比较</h2><table><thead><tr><th align="center">LBP</th><th align="center">原始模式数</th><th align="center">等价模式</th><th align="center">旋转不变等价模式</th></tr></thead><tbody><tr><td align="center">$LBP_P^R$</td><td align="center">$2^P$</td><td align="center">$P(P-1) + 2$</td><td align="center">$P+1$</td></tr><tr><td align="center">$LBP_8^1$</td><td align="center">256</td><td align="center">58(+1)</td><td align="center">9</td></tr><tr><td align="center">$LBP_{16}^2$</td><td align="center">65536</td><td align="center">242(+1)</td><td align="center">17</td></tr><tr><td align="center">$LBP_{24}^3$</td><td align="center">16777216</td><td align="center">554(+1)</td><td align="center">25</td></tr></tbody></table><h1 id="LBP特征实现"><a href="#LBP特征实现" class="headerlink" title="LBP特征实现"></a>LBP特征实现</h1><h2 id="原始LBP特征"><a href="#原始LBP特征" class="headerlink" title="原始LBP特征"></a>原始LBP特征</h2><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//Original_LBP</span>Mat <span class="token function">get_original_LBP_feature</span><span class="token punctuation">(</span>Mat img<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat result<span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>rows <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> img<span class="token punctuation">.</span>rows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      uchar center <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>      uchar lbpcode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>      result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> lbpcode<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://i.loli.net/2019/07/31/5d4161dac5f0b23887.png" alt></p><h2 id="圆形LBP特征"><a href="#圆形LBP特征" class="headerlink" title="圆形LBP特征"></a>圆形LBP特征</h2><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//Circular_LBP_feature</span>Mat <span class="token function">get_circular_LBP_feature</span><span class="token punctuation">(</span>Mat img<span class="token punctuation">,</span> <span class="token keyword">int</span> radius<span class="token punctuation">,</span> <span class="token keyword">int</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat result<span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>rows <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//循环处理每个像素</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>radius<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>rows<span class="token operator">-</span>radius<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>radius<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>cols<span class="token operator">-</span>radius<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//获得中心像素点的灰度值</span>          uchar center <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>          uchar lbpCode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>neighbors<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//根据公式计算第k个采样点的坐标，这个地方可以优化，不必每次都进行计算radius*cos，radius*sin</span>              <span class="token keyword">float</span> x <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> \                  <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">float</span> y <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> \                  <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据取整结果进行双线性插值，得到第k个采样点的灰度值</span>                <span class="token comment" spellcheck="true">//1.分别对x，y进行上下取整</span>                <span class="token keyword">int</span> x1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> x2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> y1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> y2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//将坐标映射到0-1之间</span>                <span class="token keyword">float</span> tx <span class="token operator">=</span> x <span class="token operator">-</span> x1<span class="token punctuation">;</span>                <span class="token keyword">float</span> ty <span class="token operator">=</span> y <span class="token operator">-</span> y1<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据0-1之间的x，y的权重计算公式计算权重</span>                <span class="token keyword">float</span> w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">float</span> w2 <span class="token operator">=</span>    tx  <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">float</span> w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span>    ty<span class="token punctuation">;</span>                <span class="token keyword">float</span> w4 <span class="token operator">=</span>    tx  <span class="token operator">*</span>    ty<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//3.根据双线性插值公式计算第k个采样点的灰度值</span>                <span class="token keyword">float</span> neighbor <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w1 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w2 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w3 <span class="token operator">+</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w4<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//通过比较获得LBP值，并按顺序排列起来</span>                lbpCode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>neighbor<span class="token operator">></span>center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>neighbors<span class="token operator">-</span>k<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">-</span>radius<span class="token punctuation">,</span>j<span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">=</span> lbpCode<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>结果:<br><img src="https://i.loli.net/2019/08/01/5d42b5d2e345026549.png" alt></p><p>第一幅图设置半径为4,第二幅图设置半径为1,可以看到半径越小处理的越精细。</p><h2 id="旋转不变LBP特征"><a href="#旋转不变LBP特征" class="headerlink" title="旋转不变LBP特征"></a>旋转不变LBP特征</h2><pre class=" language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//Rotation_Invariant_LBP_feature</span>Mat <span class="token function">get_rotation_invariant_LBP_feature</span><span class="token punctuation">(</span>Mat img<span class="token punctuation">,</span> <span class="token keyword">int</span> radius<span class="token punctuation">,</span> <span class="token keyword">int</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat result<span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>rows <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>neighbors<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//计算采样点对于中心点坐标的偏移量rx，ry</span>        <span class="token keyword">float</span> rx <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> ry <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为双线性插值做准备</span>        <span class="token comment" spellcheck="true">//对采样点偏移量分别进行上下取整</span>        <span class="token keyword">int</span> x1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将坐标偏移量映射到0-1之间</span>        <span class="token keyword">float</span> tx <span class="token operator">=</span> rx <span class="token operator">-</span> x1<span class="token punctuation">;</span>        <span class="token keyword">float</span> ty <span class="token operator">=</span> ry <span class="token operator">-</span> y1<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据0-1之间的x，y的权重计算公式计算权重，权重与坐标具体位置无关，与坐标间的差值有关</span>        <span class="token keyword">float</span> w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> w2 <span class="token operator">=</span>    tx  <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span>    ty<span class="token punctuation">;</span>        <span class="token keyword">float</span> w4 <span class="token operator">=</span>    tx  <span class="token operator">*</span>    ty<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//循环处理每个像素</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>radius<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>rows<span class="token operator">-</span>radius<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>radius<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>cols<span class="token operator">-</span>radius<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获得中心像素点的灰度值</span>                uchar center <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据双线性插值公式计算第k个采样点的灰度值</span>                <span class="token keyword">float</span> neighbor <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x1<span class="token punctuation">,</span>j<span class="token operator">+</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w1 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x1<span class="token punctuation">,</span>j<span class="token operator">+</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w2 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x2<span class="token punctuation">,</span>j<span class="token operator">+</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w3 <span class="token operator">+</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x2<span class="token punctuation">,</span>j<span class="token operator">+</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w4<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//LBP特征图像的每个邻居的LBP值累加，累加通过与操作完成，对应的LBP值通过移位取得</span>                result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">-</span>radius<span class="token punctuation">,</span>j<span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>neighbor<span class="token operator">></span>center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>neighbors<span class="token operator">-</span>k<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//进行旋转不变处理</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>result<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>result<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            uchar currentValue <span class="token operator">=</span> result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>            uchar minValue <span class="token operator">=</span> currentValue<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>neighbors<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//循环左移</span>            <span class="token punctuation">{</span>                uchar temp <span class="token operator">=</span> <span class="token punctuation">(</span>currentValue<span class="token operator">>></span><span class="token punctuation">(</span>neighbors<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>currentValue<span class="token operator">&lt;&lt;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    minValue <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span> <span class="token operator">=</span> minValue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>结果:<br><img src="https://i.loli.net/2019/08/01/5d42b5d30749958722.png" alt></p><p>第一幅图neighbors值设置为8,第二幅设置为6,可以看出neighbors值越大，得到的LBP特征亮度越高。</p><h2 id="完整代码如下"><a href="#完整代码如下" class="headerlink" title="完整代码如下"></a>完整代码如下</h2><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Original_LBP</span>Mat <span class="token function">get_original_LBP_feature</span><span class="token punctuation">(</span>Mat img<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat result<span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>rows <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> img<span class="token punctuation">.</span>rows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      uchar center <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>      uchar lbpcode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>      lbpcode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">>=</span> center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>      result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> lbpcode<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Circular_LBP_feature</span>Mat <span class="token function">get_circular_LBP_feature</span><span class="token punctuation">(</span>Mat img<span class="token punctuation">,</span> <span class="token keyword">int</span> radius<span class="token punctuation">,</span> <span class="token keyword">int</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat result<span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>rows <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//循环处理每个像素</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>radius<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>rows<span class="token operator">-</span>radius<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>radius<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>cols<span class="token operator">-</span>radius<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//获得中心像素点的灰度值</span>          uchar center <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>          uchar lbpCode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>neighbors<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//根据公式计算第k个采样点的坐标，这个地方可以优化，不必每次都进行计算radius*cos，radius*sin</span>              <span class="token keyword">float</span> x <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> \                  <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">float</span> y <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> \                  <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据取整结果进行双线性插值，得到第k个采样点的灰度值</span>                <span class="token comment" spellcheck="true">//1.分别对x，y进行上下取整</span>                <span class="token keyword">int</span> x1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> x2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> y1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> y2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//将坐标映射到0-1之间</span>                <span class="token keyword">float</span> tx <span class="token operator">=</span> x <span class="token operator">-</span> x1<span class="token punctuation">;</span>                <span class="token keyword">float</span> ty <span class="token operator">=</span> y <span class="token operator">-</span> y1<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据0-1之间的x，y的权重计算公式计算权重</span>                <span class="token keyword">float</span> w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">float</span> w2 <span class="token operator">=</span>    tx  <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">float</span> w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span>    ty<span class="token punctuation">;</span>                <span class="token keyword">float</span> w4 <span class="token operator">=</span>    tx  <span class="token operator">*</span>    ty<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//3.根据双线性插值公式计算第k个采样点的灰度值</span>                <span class="token keyword">float</span> neighbor <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w1 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w2 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w3 <span class="token operator">+</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w4<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//通过比较获得LBP值，并按顺序排列起来</span>                lbpCode <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>neighbor<span class="token operator">></span>center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>neighbors<span class="token operator">-</span>k<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">-</span>radius<span class="token punctuation">,</span>j<span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">=</span> lbpCode<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//Rotation_Invariant_LBP_feature</span>Mat <span class="token function">get_rotation_invariant_LBP_feature</span><span class="token punctuation">(</span>Mat img<span class="token punctuation">,</span> <span class="token keyword">int</span> radius<span class="token punctuation">,</span> <span class="token keyword">int</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat result<span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>rows <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>cols <span class="token operator">-</span> radius <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  result<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>neighbors<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//计算采样点对于中心点坐标的偏移量rx，ry</span>        <span class="token keyword">float</span> rx <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> ry <span class="token operator">=</span> <span class="token operator">-</span><span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">></span><span class="token punctuation">(</span>radius <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2.0</span> <span class="token operator">*</span> CV_PI <span class="token operator">*</span> k <span class="token operator">/</span> neighbors<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//为双线性插值做准备</span>        <span class="token comment" spellcheck="true">//对采样点偏移量分别进行上下取整</span>        <span class="token keyword">int</span> x1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>rx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y1 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> y2 <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token function">ceil</span><span class="token punctuation">(</span>ry<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将坐标偏移量映射到0-1之间</span>        <span class="token keyword">float</span> tx <span class="token operator">=</span> rx <span class="token operator">-</span> x1<span class="token punctuation">;</span>        <span class="token keyword">float</span> ty <span class="token operator">=</span> ry <span class="token operator">-</span> y1<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//根据0-1之间的x，y的权重计算公式计算权重，权重与坐标具体位置无关，与坐标间的差值有关</span>        <span class="token keyword">float</span> w1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> w2 <span class="token operator">=</span>    tx  <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>ty<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>tx<span class="token punctuation">)</span> <span class="token operator">*</span>    ty<span class="token punctuation">;</span>        <span class="token keyword">float</span> w4 <span class="token operator">=</span>    tx  <span class="token operator">*</span>    ty<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//循环处理每个像素</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>radius<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>rows<span class="token operator">-</span>radius<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>radius<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>img<span class="token punctuation">.</span>cols<span class="token operator">-</span>radius<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获得中心像素点的灰度值</span>                uchar center <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//根据双线性插值公式计算第k个采样点的灰度值</span>                <span class="token keyword">float</span> neighbor <span class="token operator">=</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x1<span class="token punctuation">,</span>j<span class="token operator">+</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w1 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x1<span class="token punctuation">,</span>j<span class="token operator">+</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w2 <span class="token operator">+</span> img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x2<span class="token punctuation">,</span>j<span class="token operator">+</span>y1<span class="token punctuation">)</span> <span class="token operator">*</span> w3 <span class="token operator">+</span>img<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">+</span>x2<span class="token punctuation">,</span>j<span class="token operator">+</span>y2<span class="token punctuation">)</span> <span class="token operator">*</span>w4<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//LBP特征图像的每个邻居的LBP值累加，累加通过与操作完成，对应的LBP值通过移位取得</span>                result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token operator">-</span>radius<span class="token punctuation">,</span>j<span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>neighbor<span class="token operator">></span>center<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>neighbors<span class="token operator">-</span>k<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//进行旋转不变处理</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>result<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>result<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            uchar currentValue <span class="token operator">=</span> result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>            uchar minValue <span class="token operator">=</span> currentValue<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>neighbors<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//循环左移</span>            <span class="token punctuation">{</span>                uchar temp <span class="token operator">=</span> <span class="token punctuation">(</span>currentValue<span class="token operator">>></span><span class="token punctuation">(</span>neighbors<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>currentValue<span class="token operator">&lt;&lt;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    minValue <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            result<span class="token punctuation">.</span>at<span class="token operator">&lt;</span>uchar<span class="token operator">></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span> <span class="token operator">=</span> minValue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Mat src <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Mat dst <span class="token operator">=</span> <span class="token function">get_original_LBP_feature</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>  Mat odst1 <span class="token operator">=</span> <span class="token function">get_circular_LBP_feature</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//Mat odst4 = get_circular_LBP_feature(src, 4, 8);</span>  Mat rif8 <span class="token operator">=</span> <span class="token function">get_rotation_invariant_LBP_feature</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Mat rif6 <span class="token operator">=</span> <span class="token function">get_rotation_invariant_LBP_feature</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"原始图片"</span><span class="token punctuation">,</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"原始LBP"</span><span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"圆形LBP"</span><span class="token punctuation">,</span> odst1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//imshow("圆形LBP4", odst4);</span>  <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"旋转不变LBP"</span><span class="token punctuation">,</span> rif8<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//imshow("旋转不变LBP6", rif6);</span>  <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> c++ </tag>
            
            <tag> LBP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图形绘制</title>
      <link href="/2019/07/30/tu-xing-hui-zhi/"/>
      <url>/2019/07/30/tu-xing-hui-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenCV基本图形绘制"><a href="#OpenCV基本图形绘制" class="headerlink" title="OpenCV基本图形绘制"></a>OpenCV基本图形绘制</h1>]]></content>
      
      
      <categories>
          
          <category> OpenCV学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>High-quality-ellipse-detection</title>
      <link href="/2019/07/29/high-quality-ellipse-detection/"/>
      <url>/2019/07/29/high-quality-ellipse-detection/</url>
      
        <content type="html"><![CDATA[<h1 id="High-quality-ellipse-detection"><a href="#High-quality-ellipse-detection" class="headerlink" title="High-quality-ellipse-detection"></a>High-quality-ellipse-detection</h1><p>个人环境:Matlab 2019a、VS2017、Opencv3.4.4，64位Windows操作系统</p><h2 id="OpenCV环境配置请看这篇"><a href="#OpenCV环境配置请看这篇" class="headerlink" title="OpenCV环境配置请看这篇"></a>OpenCV环境配置请看这篇</h2><p><a href="https://godliuyang.wang/2019/07/25/opencv-ru-keng-zhi-nan-huan-jing-da-jian-pian/" target="_blank" rel="noopener">OpenCV入坑指南:环境搭建篇</a></p><h2 id="MatLab和C-混合编程环境配置"><a href="#MatLab和C-混合编程环境配置" class="headerlink" title="MatLab和C++混合编程环境配置"></a>MatLab和C++混合编程环境配置</h2><p>Matlab的安装这里不再说    </p><ol><li>在命令行里输入 <code>mex -setup</code>，选择vs就行了</li><li>执行 <code>mex -setup C++</code>完成配置<br><img src="https://i.loli.net/2019/07/29/5d3ea6561215b10575.png" alt><br><img src="https://i.loli.net/2019/07/29/5d3eaa19b300f42041.png" alt></li></ol><h2 id="下载Github文件"><a href="#下载Github文件" class="headerlink" title="下载Github文件"></a>下载Github文件</h2><p>download Zip即可</p><h2 id="导入依赖文件"><a href="#导入依赖文件" class="headerlink" title="导入依赖文件"></a>导入依赖文件</h2><p>将 <strong>D:\OpenCV\opencv\build\x64\vc15\lib</strong>下的 <strong>opencv_world344.lib</strong>文件复制到你的Matlab安装路径下的 <strong>microsoft</strong>文件夹下,我的是 <strong>D:\MATLAB\R2019a\extern\lib\win64\microsoft</strong></p><p><img src="https://i.loli.net/2019/07/29/5d3ea6564f0b271051.png" alt><br><img src="https://i.loli.net/2019/07/29/5d3ea6564ed8016435.png" alt></p><h2 id="在Matlab中导入文件"><a href="#在Matlab中导入文件" class="headerlink" title="在Matlab中导入文件"></a>在Matlab中导入文件</h2><h2 id="在命令行执行以下命令"><a href="#在命令行执行以下命令" class="headerlink" title="在命令行执行以下命令"></a>在命令行执行以下命令</h2><p>注意作者的命令为:</p><pre class=" language-matlab"><code class="language-matlab">mex generateEllipseCandidates<span class="token punctuation">.</span>cpp <span class="token operator">-</span>IF<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv2<span class="token number">.4</span><span class="token punctuation">.</span><span class="token number">9</span><span class="token operator">\</span>build<span class="token operator">\</span>include <span class="token operator">-</span>IF<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv2<span class="token number">.4</span><span class="token punctuation">.</span><span class="token number">9</span><span class="token operator">\</span>build<span class="token operator">\</span>include<span class="token operator">\</span>opencv <span class="token operator">-</span>IF<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv2<span class="token number">.4</span><span class="token punctuation">.</span><span class="token number">9</span><span class="token operator">\</span>build<span class="token operator">\</span>include<span class="token operator">\</span>opencv2 <span class="token operator">-</span>LF<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv2<span class="token number">.4</span><span class="token punctuation">.</span><span class="token number">9</span><span class="token operator">\</span>build<span class="token operator">\</span>x64<span class="token operator">\</span>vc11<span class="token operator">\</span>lib <span class="token operator">-</span>IF<span class="token operator">:</span><span class="token operator">\</span>Matlab<span class="token operator">\</span>settlein<span class="token operator">\</span>extern<span class="token operator">\</span>include <span class="token operator">-</span>LF<span class="token operator">:</span><span class="token operator">\</span>Matlab<span class="token operator">\</span>settlein<span class="token operator">\</span>extern<span class="token operator">\</span>lib<span class="token operator">\</span>win64<span class="token operator">\</span>microsoft <span class="token operator">-</span>lopencv_core249 <span class="token operator">-</span>lopencv_highgui249 <span class="token operator">-</span>lopencv_imgproc249 <span class="token operator">-</span>llibmwlapack<span class="token punctuation">.</span>lib</code></pre><p>把OpenCV和Matlab的相关文件的路径改成你的安装路径<br>我这里版本号为OpenCV3.4.4,安装路径如下,<br><img src="https://i.loli.net/2019/07/29/5d3ea6561fbd474647.png" alt><br>故修改为<code>D:\OpenCV\opencv\build...</code>,<br>由于OpenCV3.4.4只有 <strong>opencv_world344.lib</strong> 这一个lib文件，故将 <code>LF:\Matlab\settlein\extern\lib\win64\microsoft -lopencv_core249 -lopencv_highgui249 -lopencv_imgproc249 -llibmwlapack.lib</code>　修改为 <code>LD:\Matlab\R2019a\extern\lib\win64\microsoft -lopencv_world344 -llibmwlapack.lib</code></p><p>完整的命令为:</p><pre class=" language-matlab"><code class="language-matlab">mex generateEllipseCandidates<span class="token punctuation">.</span>cpp <span class="token operator">-</span>ID<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv<span class="token operator">\</span>build<span class="token operator">\</span>include <span class="token operator">-</span>ID<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv<span class="token operator">\</span>build<span class="token operator">\</span>include<span class="token operator">\</span>opencv <span class="token operator">-</span>ID<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv<span class="token operator">\</span>build<span class="token operator">\</span>include<span class="token operator">\</span>opencv2 <span class="token operator">-</span>LD<span class="token operator">:</span><span class="token operator">\</span>OpenCV<span class="token operator">\</span>opencv<span class="token operator">\</span>build<span class="token operator">\</span>x64<span class="token operator">\</span>vc15<span class="token operator">\</span>lib <span class="token operator">-</span>ID<span class="token operator">:</span><span class="token operator">\</span>Matlab<span class="token operator">\</span>R2019a<span class="token operator">\</span>include <span class="token operator">-</span>LD<span class="token operator">:</span><span class="token operator">\</span>Matlab<span class="token operator">\</span>R2019a<span class="token operator">\</span>extern<span class="token operator">\</span>lib<span class="token operator">\</span>win64<span class="token operator">\</span>microsoft <span class="token operator">-</span>lopencv_world344 <span class="token operator">-</span>llibmwlapack<span class="token punctuation">.</span>lib</code></pre><p><img src="https://i.loli.net/2019/07/29/5d3ea65639bdf67747.png" alt><br>编译成功之后生成<code>generateEllipseCandidates.mexw64</code>文件<br><img src="https://i.loli.net/2019/07/29/5d3ea6564e0c183020.png" alt><br>之后再运行<code>LCS_ellipse.m</code><br><img src="https://i.loli.net/2019/07/29/5d3ea657cb9e659639.png" alt="7.png"></p><p>##　报错解决办法</p><ol><li>如图<br><img src="https://i.loli.net/2019/07/29/5d3eabf1c942443319.png" alt><br>在.cpp文件中添加</li></ol><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std</code></pre><ol start="2"><li>如图</li></ol><p><img src="https://i.loli.net/2019/07/29/5d3eabf1d457769964.png" alt><br>缺少lib文件，检查一下是不是配置出错了</p><p>参考文献:</p><ol><li><a href="https://github.com/AlanLuSun/High-quality-ellipse-detection" target="_blank" rel="noopener">Arc-support Line Segments Revisited: An Efficient and High-quality Ellipse Detection</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Open Source </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
            <tag> OpenCV </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day14</title>
      <link href="/2019/07/28/day14/"/>
      <url>/2019/07/28/day14/</url>
      
        <content type="html"><![CDATA[<h1 id="High-quality-ellipse-detection"><a href="#High-quality-ellipse-detection" class="headerlink" title="High-quality-ellipse-detection"></a>High-quality-ellipse-detection</h1><p>高精度椭圆检测<br>参考<a href="https://github.com/AlanLuSun/High-quality-ellipse-detection" target="_blank" rel="noopener">High-quality-ellipse-detection</a></p><p>关于椭圆检测的部分，实在是看不懂，我只做了得到椭圆参数绘制椭圆的部分</p><h2 id="OpenCV椭圆绘制"><a href="#OpenCV椭圆绘制" class="headerlink" title="OpenCV椭圆绘制"></a>OpenCV椭圆绘制</h2><h3 id="ellipse函数"><a href="#ellipse函数" class="headerlink" title="ellipse函数"></a>ellipse函数</h3><p>语法</p><pre><code>void cvEllipse( CvArr* img, CvPoint center, CvSize axes, double angle,                double start_angle, double end_angle, CvScalar color,                int thickness=1, int line_type=8, int shift=0 );</code></pre><p>参数:<br>img:图像。<br>center:椭圆圆心坐标。<br>axes:轴的长度。<br>angle:偏转的角度。<br>start_angle:圆弧起始角的角度。<br>end_angle:圆弧终结角的角度。<br>color:线条的颜色。<br>thickness:线条的粗细程度。<br>line_type:线条的类型,见CVLINE的描述。<br>shift:圆心坐标点和数轴的精度。    </p><p>C++代码实现</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp></span>#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/core/core.hpp></span> </span><span class="token comment" spellcheck="true">// 核心组件</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp></span>  </span><span class="token comment" spellcheck="true">// GUI</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp></span>  </span><span class="token comment" spellcheck="true">// 图像处理</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 定义存储椭圆参数的数据结构</span><span class="token keyword">struct</span> Ellipse <span class="token punctuation">{</span>    <span class="token keyword">int</span> x0<span class="token punctuation">,</span> y0<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>    <span class="token keyword">double</span> alpha<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">drawEllipse</span><span class="token punctuation">(</span>Ellipse ellipses_para<span class="token punctuation">,</span> Mat im<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">drawEllipse</span><span class="token punctuation">(</span>Ellipse ellipses_para<span class="token punctuation">,</span> Mat im<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// Draw Ellipse after detection</span><span class="token comment" spellcheck="true">//x0 - x coordinate of the center of the ellipse</span><span class="token comment" spellcheck="true">//y0 - y coordinate of the center of the ellipse</span><span class="token comment" spellcheck="true">//a - length of semimajor axis</span><span class="token comment" spellcheck="true">//b - length of semiminor axis</span><span class="token comment" spellcheck="true">//alpha - angle of orientation of semimajor axis</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>im<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"imread error!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> x0<span class="token punctuation">,</span> y0<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>    <span class="token keyword">double</span> alpha<span class="token punctuation">;</span>    <span class="token keyword">int</span> thickness <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> lineType <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>    x0 <span class="token operator">=</span> ellipses_para<span class="token punctuation">.</span>x0<span class="token punctuation">;</span>    y0 <span class="token operator">=</span> ellipses_para<span class="token punctuation">.</span>y0<span class="token punctuation">;</span>    a <span class="token operator">=</span> ellipses_para<span class="token punctuation">.</span>a<span class="token punctuation">;</span>    b <span class="token operator">=</span> ellipses_para<span class="token punctuation">.</span>b<span class="token punctuation">;</span>    alpha <span class="token operator">=</span> ellipses_para<span class="token punctuation">.</span>alpha<span class="token punctuation">;</span>    <span class="token function">ellipse</span><span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token function">Point</span><span class="token punctuation">(</span>x0<span class="token punctuation">,</span> y0<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Size</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token punctuation">,</span> lineType<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">,</span> im<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Ellipse ellipses_para<span class="token punctuation">;</span>    Mat im <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"11.bmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*test        ellipses_para.x0 = 100;    ellipses_para.y0 = 100;    ellipses_para.a = 90;    ellipses_para.b = 60;    ellipses_para.alpha = 80.0;*/</span>    <span class="token function">drawEllipse</span><span class="token punctuation">(</span>ellipses_para<span class="token punctuation">,</span> im<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圆形检测</title>
      <link href="/2019/07/26/yuan-xing-jian-ce/"/>
      <url>/2019/07/26/yuan-xing-jian-ce/</url>
      
        <content type="html"><![CDATA[<h1 id="基于霍夫变换的圆形检测"><a href="#基于霍夫变换的圆形检测" class="headerlink" title="基于霍夫变换的圆形检测"></a>基于霍夫变换的圆形检测</h1><h2 id="霍夫变换的原理"><a href="#霍夫变换的原理" class="headerlink" title="霍夫变换的原理"></a>霍夫变换的原理</h2><p>Hough 变换就是利用图像全局特征将边缘像素连接起来组成区域封闭边界，它将图像空间转换到参数空间，在参数空间对点进行描述，达到检测图像边缘的目的。该方法把所有可能落在边缘上的点进行统计计算，根据对数据的统计结果确定属于边缘的程度。Hough 变换的实质就是对图像进行坐标变换，把平面坐标变换为参数坐标，使变换的结果更易识别和检测。<br>具体原理: <a href="https://godliuyang.wang/2019/07/26/huo-fu-bian-huan/" target="_blank" rel="noopener">霍夫变换</a></p><hr><h3 id="对霍夫变换圆形检测的原理的理解"><a href="#对霍夫变换圆形检测的原理的理解" class="headerlink" title="对霍夫变换圆形检测的原理的理解:"></a>对霍夫变换圆形检测的原理的理解:</h3><p>已知圆的一般方程为:<br>$$(x-a)^2 + (y-b)^2 = r^2 $$<br>其中(a,b)代表圆心，r是圆的半径<br>依旧是把图像空间转换成参数空间，这里是将X-Y平面转化成a-b-r参数空间，则在图像空间中的一个过(x,y)点的圆，对应参数空间中高度变化的三维锥面。<br><img src="https://i.loli.net/2019/07/26/5d3ab8c50fc2a28962.jpg" alt><br>同理，过图像空间的任意一点的圆都对应于参数空间的一个三维锥面，因此，过图像空间上同一圆的点，对应的参数空间中的三维锥面，在r平面必然相交于一点(a,b,r)，这样通过这一点就可以得到一个圆的参数。<br><img src="https://i.loli.net/2019/07/26/5d3ab8c4d635d79647.jpg" alt><br>这里霍夫变换的圆检测就是在这三个参数组成的三维空间内进行的<br>换一种理解思路:在笛卡尔坐标下的圆的方程已给出，在极坐标系下，假设圆心为$(x_0,y_0)$,圆上的点可以表示为:<br>$$x = x_0 + rcos\theta, y = y_0 + rsin\theta$$<br>对于一个圆，假如中心像素点$(x_0,y_0)$，半径r已知，那么旋转360°，圆上的所有点就可以求得。同样，假如圆上的所有点，半径r已知，旋转360°，则会得到一个累加的极值点，那么这个点就是圆心了。</p><hr><p>理论上霍夫变换可以检测任何形状，但复杂的形状需要的参数就多，霍夫空间的维数就多，因此在程序实现上所需的内存空间以及运行效率上都不利于把标准霍夫变换应用于实际复杂图形的检测中。所以一些改进的霍夫变换就相继提出，它们的基本原理就是尽可能减小霍夫空间的维数。</p><p>在OpenCV中，HoughCircles函数实现了圆形检测，它使用的算法也是改进的霍夫变换——2-1霍夫变换（21HT）。也就是把霍夫变换分为两个阶段，从而减小了霍夫空间的维数。第一阶段用于检测圆心，第二阶段从圆心推导出圆半径。<br>检测圆心的原理是圆心是它所在圆周所有法线的交汇处，因此只要找到这个交点，即可确定圆心，该方法所用的霍夫空间与图像空间的性质相同，因此它仅仅是二维空间。检测圆半径的方法是从圆心到圆周上的任意一点的距离（即半径）是相同，只要确定一个阈值，只要相同距离的数量大于该阈值，我们就认为该距离就是该圆心所对应的圆半径，该方法只需要计算半径直方图，不使用霍夫空间。圆和半径知道了，圆自然就能求得。</p><p>21HT的具体步骤:<br>第一阶段：检测圆心</p><p>1.1、对输入图像边缘检测；</p><p>1.2、计算图形的梯度，并确定圆周线，其中圆周的梯度就是它的法线；</p><p>1.3、在二维霍夫空间内，绘出所有图形的梯度直线，某坐标点上累加和的值越大，说明在该点上直线相交的次数越多，也就是越有可能是圆心；</p><p>1.4、在霍夫空间的4邻域内进行非最大值抑制；</p><p>1.5、设定一个阈值，霍夫空间内累加和大于该阈值的点就对应于圆心。</p><p>第二阶段：检测圆半径</p><p>2.1、计算某一个圆心到所有圆周线的距离，这些距离中就有该圆心所对应的圆的半径的值，这些半径值当然是相等的，并且这些圆半径的数量要远远大于其他距离值相等的数量；</p><p>2.2、设定两个阈值，定义为最大半径和最小半径，保留距离在这两个半径之间的值，这意味着我们检测的圆不能太大，也不能太小；</p><p>2.3、对保留下来的距离进行排序；</p><p>2.4、找到距离相同的那些值，并计算相同值的数量；</p><p>2.5、设定一个阈值，只有相同值的数量大于该阈值，才认为该值是该圆心对应的圆半径；</p><p>2.6、对每一个圆心，完成上面的2.1～2.5步骤，得到所有的圆半径。</p><p>HoughCircles函数的原型为：<br><code>void HoughCircles (InputArray image,OutputArray circles, int method, double dp, double minDist,double param1=100, double param2=100, int minRadius=0,int maxRadius=0 )</code><br>image为输入图像，要求是灰度图像<br>circles为输出圆向量，每个向量包括三个浮点型的元素——圆心横坐标，圆心纵坐标和圆半径<br>method为使用霍夫变换圆检测的算法，Opencv2.4.9只实现了2-1霍夫变换，它的参数是CV_HOUGH_GRADIENT<br>dp为第一阶段所使用的霍夫空间的分辨率，dp=1时表示霍夫空间与输入图像空间的大小一致，dp=2时霍夫空间是输入图像空间的一半，以此类推<br>minDist为圆心之间的最小距离，如果检测到的两个圆心之间距离小于该值，则认为它们是同一个圆心<br>param1为边缘检测时使用Canny算子的高阈值<br>param2为步骤1.5和步骤2.5中所共有的阈值<br>minRadius和maxRadius为所检测到的圆半径的最小值和最大值</p><h3 id="霍夫变换椭圆检测的实现"><a href="#霍夫变换椭圆检测的实现" class="headerlink" title="霍夫变换椭圆检测的实现"></a>霍夫变换椭圆检测的实现</h3><p>运行环境: vs2017 + Opencv3.4<br>由于HoughCircles函数是调用Canny函数进行边缘检测，OpenCV的Canny函数不包括平滑滤波，所以先对原图进行滤波处理，在这里使用的是高斯模糊</p><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/core/core.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/highgui/highgui.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"opencv2/imgproc/imgproc.hpp"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv <span class="token punctuation">)</span><span class="token punctuation">{</span>     Mat src<span class="token punctuation">,</span> gray<span class="token punctuation">;</span>    src<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"coins.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span>src<span class="token punctuation">.</span>data <span class="token punctuation">)</span>          <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token function">cvtColor</span><span class="token punctuation">(</span> src<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> CV_BGR2GRAY <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//高斯模糊平滑</span>    <span class="token function">GaussianBlur</span><span class="token punctuation">(</span> gray<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    vector<span class="token operator">&lt;</span>Vec3f<span class="token operator">></span> circles<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//霍夫变换</span>    <span class="token function">HoughCircles</span><span class="token punctuation">(</span> gray<span class="token punctuation">,</span> circles<span class="token punctuation">,</span> CV_HOUGH_GRADIENT<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> gray<span class="token punctuation">.</span>rows<span class="token operator">/</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//在原图中画出圆心和圆</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> circles<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//提取出圆心坐标</span>        Point <span class="token function">center</span><span class="token punctuation">(</span><span class="token function">cvRound</span><span class="token punctuation">(</span>circles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cvRound</span><span class="token punctuation">(</span>circles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//提取出圆半径</span>        <span class="token keyword">int</span> radius <span class="token operator">=</span> <span class="token function">cvRound</span><span class="token punctuation">(</span>circles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//圆心</span>        <span class="token function">circle</span><span class="token punctuation">(</span> src<span class="token punctuation">,</span> center<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//圆</span>        <span class="token function">circle</span><span class="token punctuation">(</span> src<span class="token punctuation">,</span> center<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>    <span class="token function">imshow</span><span class="token punctuation">(</span> <span class="token string">"霍夫变换检测圆图"</span><span class="token punctuation">,</span> src <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>结果:<br><img src="https://i.loli.net/2019/07/26/5d3abf54a4c3b88169.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> OpenCV </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>霍夫变换</title>
      <link href="/2019/07/26/huo-fu-bian-huan/"/>
      <url>/2019/07/26/huo-fu-bian-huan/</url>
      
        <content type="html"><![CDATA[<h1 id="霍夫变换"><a href="#霍夫变换" class="headerlink" title="霍夫变换"></a>霍夫变换</h1><h2 id="介绍与应用场景"><a href="#介绍与应用场景" class="headerlink" title="介绍与应用场景"></a>介绍与应用场景</h2><p><a href="https://zh.wikipedia.org/wiki/%E9%9C%8D%E5%A4%AB%E5%8F%98%E6%8D%A2" target="_blank" rel="noopener">霍夫变换</a>(Hough Transform)是图像处理中的一种特征提取技术，该过程在一个参数空间中通过计算累计结果的局部最大值得到一个符合该特定形状的集合作为霍夫变换结果。经典霍夫变换用来检测图像中的直线，后来霍夫变换扩展到任意形状物体的识别，多为圆和椭圆。霍夫变换运用两个坐标空间之间的变换将在一个空间中具有相同形状的曲线或直线映射到另一个坐标空间的一个点上形成峰值，从而把检测任意形状的问题转化为统计峰值问题。</p><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>考虑点$(x_i,y_i)$及通过这个点的线,有无穷多的线通过点$(x_i,y_i)$，针对a和b的一些值，满足斜截式$y_i = ax_i + b$的所有线都通过该点。该公式也可以写为$b = -ax_i + y_i$，考虑ab平面(即<strong>参数空间</strong>)对固定点$(x_i,y_i)$得到一条线的方程。另外，第二个点$(x_j,y_j)$也有一条在参数空间中与之相关的线，这条线和与$(x_i,y_i)$<strong>相关</strong>的线交于点$(a’,b’)$，其中$a’$是斜率，$b’$是在<strong>xy平面</strong>上包含点$(x_i,y_i)$和$(x_j,y_j)$的线的截距。在<strong>参数空间</strong>中，这条线包含的所有点都有相交于$(a’,b’)$点的直线。<br>简单理解，直线由两个点$A(x_1,y_1)$和$B(x_2,y_2)$定义，在参数空间中，两条直线的唯一公共点是在原图像空间中表示连接点A和B的唯一存在的直线<br><img src="https://i.loli.net/2019/07/24/5d38129f0e9f156720.jpg" alt><br>因此，给定很多点，判断这些点是否共线的问题，经由霍夫变换之后，变成判断一堆曲线(每一个点在$(r, \theta)$平面上代表一条曲线)是否 在 $(r,\theta)$平面上相交于同一点的问题<br>另外用法线表示法:<br>$$xcos\theta + ysin\theta = \rho$$<br>水平线的$\theta$=0,$\rho$等于正的x的截距，垂直线的$\theta=90$度，$\rho$等于正的y的截距<br><img src="https://i.loli.net/2019/07/24/5d382004e2bab23873.jpg" alt></p><p>在坐标(i, j)的单元位置，累加器的值是 A(i, j)，对应于参数空间坐标$(\rho_i,\theta_j)$的正方形。最初， 这些单元位置为零。然后，对于每个图像平面上的非背景点$(x_k,y_k)$(就是 xy 平面)，我们令 θ 等 于在 θ 轴上允许的细分值，并通过公式$\rho = x_kcos\theta+y_ksin\theta$解出相应的 ρ 值。然后，得到的 ρ 值四 舍五入为最接近的 ρ 轴上允许的单元值。相应的累加器单元增加一个增量。在这个过程的最后， 累加单元 A(i, j)中的值 Q 就意味着 xy 平面上位于线$xcos\theta_j+ysin\theta_j = \rho_i$上的点有 Q 个。在$\rho\theta$平面上，细分的数目决定了这些点的共线的精确度。累加器数组在工具箱中叫做霍夫变换矩阵，简称霍夫变换。</p><h2 id="MATLAB工具箱函数"><a href="#MATLAB工具箱函数" class="headerlink" title="MATLAB工具箱函数"></a>MATLAB工具箱函数</h2><h3 id="hough函数"><a href="#hough函数" class="headerlink" title="hough函数"></a>hough函数</h3><p>默认语法</p><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>H<span class="token punctuation">,</span> theta<span class="token punctuation">,</span> rho<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">hough</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span></code></pre><p>H是霍夫变换矩阵，theta和rho是$\theta$和$\rho$的值<br>下面这个例子可以加深对霍夫变换的理解</p><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% H = hough(f);</span><span class="token punctuation">[</span>H<span class="token punctuation">,</span> theta<span class="token punctuation">,</span> rho<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">hough</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>H<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'XData'</span><span class="token punctuation">,</span> theta<span class="token punctuation">,</span><span class="token string">'YData'</span><span class="token punctuation">,</span> rho<span class="token punctuation">,</span> <span class="token string">'InitialMagnification'</span><span class="token punctuation">,</span> <span class="token string">'fit'</span><span class="token punctuation">)</span>axis on<span class="token punctuation">,</span> axis normal<span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'\theta'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'\rho'</span><span class="token punctuation">)</span></code></pre><p>结果:<br><img src="https://i.loli.net/2019/07/24/5d381e6cd3ce994397.jpg" alt><br>观察图可以看打到三条曲线在+45度和-45度处的交点指出:f中有两组三个共线的点。两条曲线在$(\rho,\theta)$ = (0,-90)、(-100,-90)、(0,0)、(100,0)处的交点指出:有4组位于<strong>垂直线</strong>和<strong>水平线</strong>上的公共点</p><h3 id="houghpeaks函数"><a href="#houghpeaks函数" class="headerlink" title="houghpeaks函数"></a>houghpeaks函数</h3><p>寻找指定的峰值数<br>默认语法</p><pre class=" language-matlab"><code class="language-matlab">peaks <span class="token operator">=</span> <span class="token function">houghpeaks</span><span class="token punctuation">(</span>H<span class="token punctuation">,</span> NumPeaks<span class="token punctuation">)</span></code></pre><p>H是霍夫变换矩阵</p><h3 id="houghlines函数"><a href="#houghlines函数" class="headerlink" title="houghlines函数"></a>houghlines函数</h3><p>决定线的起点和终点<br>默认语法</p><pre class=" language-matlab"><code class="language-matlab">lines <span class="token operator">=</span> <span class="token function">houghlines</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> theta<span class="token punctuation">,</span> rho<span class="token punctuation">,</span> peaks<span class="token punctuation">)</span></code></pre><p>输出lines是结构数组，长度等于找到的线段。结构中的每个元素可以看成一条线，并含有下列字段:    </p><ol><li>point1:两元素向量[r1,c1]，指定了线段终点的行列坐标。</li><li>point2:两元素向量[r2,c2]，指定了线段其他终点的行列坐标。</li><li>theta:与线相关的霍夫变换的以度计量的角度。</li><li>rho:与线相关的霍夫变换的$\rho$轴位置。</li></ol><h3 id="MATLAB使用霍夫变换检测和连接线"><a href="#MATLAB使用霍夫变换检测和连接线" class="headerlink" title="MATLAB使用霍夫变换检测和连接线"></a>MATLAB使用霍夫变换检测和连接线</h3><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'timg1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>BW <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token string">'canny'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>H <span class="token punctuation">,</span>theta<span class="token punctuation">,</span> rho<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">hough</span><span class="token punctuation">(</span>BW<span class="token punctuation">,</span> <span class="token string">'ThetaResolution'</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>H<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'XData'</span><span class="token punctuation">,</span> theta<span class="token punctuation">,</span><span class="token string">'YData'</span><span class="token punctuation">,</span> rho<span class="token punctuation">,</span> <span class="token string">'InitialMagnification'</span><span class="token punctuation">,</span> <span class="token string">'fit'</span><span class="token punctuation">)</span>axis on<span class="token punctuation">,</span> axis normal<span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'\theta'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'\rho'</span><span class="token punctuation">)</span>peaks <span class="token operator">=</span> <span class="token function">houghpeaks</span><span class="token punctuation">(</span>H<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">theta</span><span class="token punctuation">(</span><span class="token function">peaks</span><span class="token punctuation">(</span> <span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">rho</span><span class="token punctuation">(</span><span class="token function">peaks</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">...</span>    <span class="token string">'linestyle'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">,</span> <span class="token string">'marker'</span><span class="token punctuation">,</span> <span class="token string">'s'</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>lines <span class="token operator">=</span> <span class="token function">houghlines</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> theta<span class="token punctuation">,</span> rho<span class="token punctuation">,</span> peaks<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span> hold on<span class="token keyword">for</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span>    xy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">lines</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">.</span>point1 <span class="token punctuation">;</span> <span class="token function">lines</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">.</span>point2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">xy</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span></code></pre><p>结果:<br><img src="https://i.loli.net/2019/07/24/5d381d8d80bff63571.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d381de2778c421022.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV入坑指南:环境搭建篇</title>
      <link href="/2019/07/25/opencv-ru-keng-zhi-nan-huan-jing-da-jian-pian/"/>
      <url>/2019/07/25/opencv-ru-keng-zhi-nan-huan-jing-da-jian-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenCV"><a href="#OpenCV" class="headerlink" title="OpenCV"></a>OpenCV</h1><h2 id="什么是OpenCV"><a href="#什么是OpenCV" class="headerlink" title="什么是OpenCV"></a>什么是OpenCV</h2><p><a href="https://opencv.org/about/" target="_blank" rel="noopener">OpenCv</a>是一个基于BSD许可（开源）发行的跨平台计算机视觉库，可以运行在Linux、Windows、Android和Mac OS操作系统上。它轻量级而且高效——由一系列 C 函数和少量 C++ 类构成，同时提供了Python、Ruby、MATLAB等语言的接口，实现了图像处理和计算机视觉方面的很多通用算法。<br>OpenCV用C++语言编写，它的主要接口也是C++语言，但是依然保留了大量的C语言接口。该库也有大量的Python、Java and MATLAB/OCTAVE（版本2.5）的接口。这些语言的API接口函数可以通过在线文档获得。如今也提供对于C#、Ch、Ruby,GO的支持。</p><h2 id="OpenCV可以来做什么"><a href="#OpenCV可以来做什么" class="headerlink" title="OpenCV可以来做什么"></a>OpenCV可以来做什么</h2><p>使用OpenCV，你几乎可以做任何你能够想到的计算机视觉任务。    </p><ol><li><p>内置数据结构和输入/输出(In-build data structures and input/output)</p></li><li><p>图像处理操作(Image processing operations)</p></li><li><p>构建图形用户界面(Build GUI)</p></li><li><p>视频分析(Video analysis)</p></li><li><p>3D重建(3D reconstruction)</p></li><li><p>特征提取(Feature extraction)</p></li><li><p>目标检测(Object detection)</p></li><li><p>机器学习(Machine learning)</p></li><li><p>计算摄影(Computational photography)</p></li><li><p>形状分析(Shape analysis)</p></li><li><p>光流算法(Optical flow algorithms)</p></li><li><p>人脸和目标识别(Face and object recognition)</p></li><li><p>表面匹配(Surface matching)</p></li><li><p>文本检测和识别(Text detection and recognition)</p></li></ol><hr><h1 id="Microsoft-Visual-Studio"><a href="#Microsoft-Visual-Studio" class="headerlink" title="Microsoft Visual Studio"></a>Microsoft Visual Studio</h1><p>宇宙最强IDE(逃),不多说了</p><hr><h1 id="OpenCV-VS学习-装×-环境搭建"><a href="#OpenCV-VS学习-装×-环境搭建" class="headerlink" title="OpenCV + VS学习(装×)环境搭建"></a>OpenCV + VS学习(装×)环境搭建</h1><p>工欲善其事，必先利其器。当你准备好入坑OpenCV时，你首先要把学习环境搭建起来，光是这一关不知道劝退了多少人，我在搭建的过程中也是踩了很多坑，也遇到了各种各样刁钻的问题，现在总结一下，给自己踩过的雷做一下记录，也希望能够帮到即将入坑的你们。</p><h2 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h2><p>为什么把这个放到第一个呢？因为这是我遇到并纠结了一天的问题！我在网上查找教程的时候很多人都没有标注这个问题，当然也是自己蠢，在所有的配置都配置完成之后，还是不能正常跑程序，又重新安装重新配置，反复好几次，都快怀疑人生了，最后才发现是版本号不对。废话不多说，下面是OpenCV版本和VS版本的对应表，选择的时候一定要擦亮眼睛。我选择的环境是VS2017+OpenCV3.4.4    </p><table><thead><tr><th align="center">Visual Studio 版本</th><th align="center">VC 版本</th></tr></thead><tbody><tr><td align="center">VS 6</td><td align="center">vc6</td></tr><tr><td align="center">VS 2003</td><td align="center">vc7</td></tr><tr><td align="center">VS 2005</td><td align="center">vc8</td></tr><tr><td align="center">VS 2008</td><td align="center">vc9</td></tr><tr><td align="center">VS 2010</td><td align="center">vc10</td></tr><tr><td align="center">VS 2013</td><td align="center">vc12</td></tr><tr><td align="center">VS 2015</td><td align="center">vc14</td></tr><tr><td align="center">VS 2017</td><td align="center">vc15</td></tr></tbody></table><p>OpenCV对VC版本的支持情况(不全)</p><table><thead><tr><th align="center">OpenCV 2.4.10</th><th align="center">vc10、vc11、vc12</th></tr></thead><tbody><tr><td align="center">OpenCV 2.4.13</td><td align="center">vc11、vc12</td></tr><tr><td align="center">OpenCV 3.4.0</td><td align="center">vc14、vc15</td></tr><tr><td align="center">OpenCv 3.4.1</td><td align="center">vc14、vc15</td></tr></tbody></table><h2 id="VS2017安装"><a href="#VS2017安装" class="headerlink" title="VS2017安装"></a>VS2017安装</h2><p>我的VS安装的时间太久了，网上教程一大堆，给你们挑一篇吧，这里就不再多说了</p><h2 id="OpenCV3-4-4下载与安装"><a href="#OpenCV3-4-4下载与安装" class="headerlink" title="OpenCV3.4.4下载与安装"></a>OpenCV3.4.4下载与安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ol><li>官网下载<br>OpenCV官网给我们提供了下载，不过下载速度嘛～自求多福<br><a href="https://opencv.org/releases/" target="_blank" rel="noopener">OpenCV下载</a>,里面有各个版本可以选择</li><li>OpenCV下载驿站<br><a href="https://blog.csdn.net/oMoDao1/article/details/80276834" target="_blank" rel="noopener">OpenCV各版本汇总下载</a><br>感谢这位大哥的总结</li></ol><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>找一个你能记住名字的路径安装进去就OK了，一定要记住这个路径，非常重要<br><img src="https://i.loli.net/2019/07/27/5d3c0e0f7a6db16095.png" alt></p><h2 id="系统环境变量配置"><a href="#系统环境变量配置" class="headerlink" title="系统环境变量配置"></a>系统环境变量配置</h2><ol><li>找到此电脑</li><li>依次找到 属性-&gt;高级-&gt;环境变量,找到系统变量里的Path，双击进去编辑，如图所示，添加的路径 <strong>“D:\OpenCV\opencv\bulid\x64\vc15\bin”</strong>,把”D:\OpenCV\”替换成你的安装路径即可</li></ol><p><img src="https://i.loli.net/2019/07/27/5d3c0e0f9cd5286868.png" alt><br><img src="https://i.loli.net/2019/07/27/5d3c0e0fa09f948672.png" alt><br><img src="https://i.loli.net/2019/07/27/5d3c0e0fa634780591.png" alt><br><img src="https://i.loli.net/2019/07/27/5d3c0e0fa37ce25025.png" alt></p><p>到这就完成了系统环境的配置了</p><h2 id="一些文件的配置"><a href="#一些文件的配置" class="headerlink" title="一些文件的配置"></a>一些文件的配置</h2><p>这一步的目的是为了解决以后可能会出现的关于缺少.dll的问题</p><p>将 <strong>“D:\OpenCV\opencv\bulid\x64\vc15\bin”</strong> 里面的三个 <strong>.dll</strong> 文件复制到 <strong>C:\Windows“</strong> 目录下的 <strong>System32</strong>和 <strong>SysWOW64</strong>目录下</p><p><img src="https://i.loli.net/2019/07/28/5d3d5857adbe920715.png" alt><br><img src="https://i.loli.net/2019/07/28/5d3d5857bd82f79652.png" alt></p><h2 id="VS2017配置"><a href="#VS2017配置" class="headerlink" title="VS2017配置"></a>VS2017配置</h2><ol><li>新建一个空项目</li><li>进入属性管理器  视图-&gt;其他窗口-&gt;属性管理器<br><img src="https://i.loli.net/2019/07/27/5d3c156f6359d16629.png" alt></li><li>选择Debug | x64 的 Microsoft.Cpp.x64.user<br><img src="https://i.loli.net/2019/07/27/5d3c156ecb8ad31557.png" alt="8.png"></li><li>选择VC++目录，对包含目录和库目录进行配置<br><img src="https://i.loli.net/2019/07/27/5d3c156f2e22b74192.png" alt><ul><li>在包含目录里添加 <strong>D:\OpenCV\opencv\bulid\include</strong>,<strong>D:\OpenCV\opencv\bulid\include\opencv</strong>,<strong>D:\OpenCV\opencv\bulid\include\opencv2</strong><br><img src="https://i.loli.net/2019/07/27/5d3c156f2132f35424.png" alt></li><li>在库目录里添加 <strong>D:\OpenCV\opencv\bulid\x64\vc15\lib</strong><br><img src="https://i.loli.net/2019/07/27/5d3c156f492f430904.png" alt></li></ul></li><li>选择 链接器-&gt;输入-&gt;附加依赖项,<br><img src="https://i.loli.net/2019/07/27/5d3c156f13aac74119.png" alt="12.png"><br>在里面添加 <strong>opencv_world344d.lib</strong>，这个lib文件根据你的OpenCV版本号灵活变动<br><img src="https://i.loli.net/2019/07/27/5d3c156f0828190561.png" alt></li><li>点击应用，确定即可<br>到这里，OpenCV的所有配置工作已经完成了，要注意的是解决方案那一栏要换成x64(因为我们一直在配置的就是x64)<br><img src="https://i.loli.net/2019/07/27/5d3c156ee8b6668598.png" alt><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2>这是一段读取并显示本地图片的代码，测试一下你的OpenCV环境是否配置好</li></ol><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Mat img <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"1.bmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"图片"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"图片"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>运行结果如下：<br><img src="https://i.loli.net/2019/07/27/5d3c15857414f57549.png" alt></p><h2 id="需要注意的问题"><a href="#需要注意的问题" class="headerlink" title="需要注意的问题"></a>需要注意的问题</h2><ol><li>导入包的时候不报错，但运行程序时出现一下错误<br><img src="https://i.loli.net/2019/07/27/5d3c156f55e6b74341.png" alt="15.png"><br><img src="https://i.loli.net/2019/07/27/5d3c156f39a4e29681.png" alt="16.png"><br>出现这个问题，目前已知的有两个原因    <ul><li>imread函数读不到图片，即你的图片路径写的有问题<br>这里给出两种基本的路径书写形式    <ol><li>绝对路径<br>Mat img = imread(“D:\\Pictures\\1.bmp”);<br>一定要注意这里是双斜杠</li><li>图片路径<br>Mat img = imread(“1.bmp”);<br>使用这个的前提是图片的位置在你的工程目录下</li></ol></li><li>链接器的附加依赖项配置的有问题<br>在Debug模式下，附加依赖项添加的是 <strong>opencv_world344d.lib</strong><br>在Release模式下，附加依赖项添加的是 <strong>opencv_world344.lib</strong><br>有些教程是两个都添加，这是不对的，一定要注意。</li></ul></li></ol><hr><h1 id="MacOS-安装opencv-python"><a href="#MacOS-安装opencv-python" class="headerlink" title="MacOS 安装opencv-python"></a>MacOS 安装opencv-python</h1><h3 id="1-首先安装xcode"><a href="#1-首先安装xcode" class="headerlink" title="1. 首先安装xcode"></a>1. 首先安装xcode</h3><pre class=" language-bash"><code class="language-bash">xcode-select --install </code></pre><h3 id="2-安装opencv-python"><a href="#2-安装opencv-python" class="headerlink" title="2. 安装opencv-python"></a>2. 安装opencv-python</h3><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> opencv-python</code></pre><p>这默认将安装<code>opencv-python 4.2</code>, 但在 <strong>catalina</strong> 貌似不可用</p><p>所以我选择了安装低版本的opencv-python</p><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> opencv-python<span class="token operator">==</span>4.1.2.30</code></pre><p>或者选择安装</p><pre class=" language-bash"><code class="language-bash">pip <span class="token function">install</span> opencv-python-headless</code></pre><p>这个原因未知</p><p>好了，教程到此结束，<br>接下来你就可以放心地去玩耍了，Enjoy Your OpenCV!</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像分割</title>
      <link href="/2019/07/24/tu-xiang-fen-ge/"/>
      <url>/2019/07/24/tu-xiang-fen-ge/</url>
      
        <content type="html"><![CDATA[<h1 id="图像分割"><a href="#图像分割" class="headerlink" title="图像分割"></a>图像分割</h1><hr><blockquote><p>整体等于部分之和<br>                —–欧几里德</p></blockquote><hr><p>图像分割把图像细分为它的组成要素或物体，细分的水平取决于要解决的问题。<br>单色分割的分割算法通常是基于图像亮度值的两个基本特征:不连续性和相似性。第一类，方法是基于亮度的突变来分割一幅图像，比如边缘;第二类，主要方法是根据事先定义好的准则把图像分割成相似的区域</p><h2 id="点、线和基本边缘检测"><a href="#点、线和基本边缘检测" class="headerlink" title="点、线和基本边缘检测"></a>点、线和基本边缘检测</h2><h3 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h3><ol><li>边缘像素是图像中灰度突变的像素，边缘是连接的边缘像素的集合</li><li>一条线可以视为一条边缘线段，该线段两侧的背景灰度要么远亮于该线像素的灰度，要么远暗于该线像素的灰度。孤立点可视为一条线，只是长度和宽度都是一个像素</li><li>局部变化检测可以用微分(一阶微分和二阶微分)    <ul><li>对于一阶导数的任何近似，约定:<ul><li>在恒定灰度区域必须为0</li><li>在灰度台阶和或斜坡开始处必须不为0</li><li>在沿灰度斜坡点处也必须不为0</li></ul></li><li>类似的对于二阶导数的近似<ul><li>在恒定灰度区域必须为0</li><li>在灰度台阶或斜坡开始除和结束处必须不为0</li><li>沿灰度斜坡必须为0</li></ul></li><li>一维函数展开为关于x的泰勒级数,结果差分<br>$$ \frac{\partial f}{\partial x}=f’(x)=f(x+1)-f(x)$$<br>二阶导数<br>$$ \frac{\partial ^2 f}{\partial ^2 x}=f’’(x)=f(x+1)+f(x-1)-2f(x)$$<ul><li>可以得出结论:<ul><li>一阶导数通常在图像中产生较粗的边缘</li><li>二阶导数对精细细节，如细线、孤立点和噪声有较强的响应</li><li>二阶导数在灰度斜坡和灰度台阶过渡处会产生双边缘响应</li><li>二阶导数的符号可用于确定边缘的过程是从亮到暗还是从暗到亮</li></ul></li><li>计算图像中每个像素位置的一阶导数和二阶导数的可选择方法是空间滤波器。模板在该区域中心点处的响应为<br>$$R = w_1z_1 + w_2z_2 + … + w_9z_9 = \sum_{k=1}^{9}w_kz_k$$</li></ul></li></ul></li></ol><table><thead><tr><th align="center">$w_1$</th><th align="center">$w_2$</th><th align="center">$w_3$</th></tr></thead><tbody><tr><td align="center">$w_4$</td><td align="center">$w_5$</td><td align="center">$w_6$</td></tr><tr><td align="center">$w_7$</td><td align="center">$w_8$</td><td align="center">$w_9$</td></tr></tbody></table><p>这是一个普通的3×3空间滤波器掩模</p><h3 id="孤立点检测"><a href="#孤立点检测" class="headerlink" title="孤立点检测"></a>孤立点检测</h3><ul><li>点的检测应以二阶导数为基础，这意味着使用laplace<br>$$\triangledown ^2f(x,y) = \frac{\partial ^2 f}{\partial x^2} + \frac{\partial ^2 f}{\partial y^2}$$<br>偏微分之后可求得laplace为<br>$$\triangledown ^2f(x,y) = f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)$$<br>点检测laplace模板</li></ul><table><thead><tr><th align="center">1</th><th align="center">1</th><th align="center">1</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">-8</td><td align="center">1</td></tr><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr></tbody></table><p>如果在某点处的该模板的响应的绝对值超过了一个指定的阈值，那么就说在模板中心位置(x,y)处的该点已经被检测到。在输出图像中，这样的点被标注为1,所有其他点被标注为0<br>$$g(x,y)=\begin{cases}<br>1,\quad |R(x,y)| \geqq T\<br>0, \quad 其他<br>\end{cases}<br>$$</p><ul><li>MATLAB实现</li></ul><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'moon.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>w <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token number">8</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>T <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> g <span class="token operator">>=</span> T<span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span></code></pre><p>结果：<br><img src="https://i.loli.net/2019/07/24/5d37b3a82234833730.jpg" alt></p><h3 id="线检测"><a href="#线检测" class="headerlink" title="线检测"></a>线检测</h3><p>可以预期，二阶导数将导致更强的响应，并产生比一阶导数更细的线</p><p>线检测模板</p><ul><li>水平</li></ul><table><thead><tr><th align="center">-1</th><th align="center">-1</th><th align="center">-1</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">2</td><td align="center">2</td></tr><tr><td align="center">-1</td><td align="center">-1</td><td align="center">-1</td></tr></tbody></table><ul><li>+45度</li></ul><table><thead><tr><th align="center">2 -</th><th align="center">-1</th><th align="center">-1</th></tr></thead><tbody><tr><td align="center">-1</td><td align="center">2</td><td align="center">-1</td></tr><tr><td align="center">-1</td><td align="center">-1</td><td align="center">2</td></tr></tbody></table><ul><li>垂直</li></ul><table><thead><tr><th align="center">-1</th><th align="center">2</th><th align="center">-1</th></tr></thead><tbody><tr><td align="center">-1</td><td align="center">2</td><td align="center">-1</td></tr><tr><td align="center">-1</td><td align="center">2</td><td align="center">-1</td></tr></tbody></table><ul><li>-45度</li></ul><table><thead><tr><th align="center">-1</th><th align="center">-1</th><th align="center">2</th></tr></thead><tbody><tr><td align="center">-1</td><td align="center">2</td><td align="center">-1</td></tr><tr><td align="center">2</td><td align="center">-1</td><td align="center">-1</td></tr></tbody></table><p>对于恒定的背景，当线通过模板的中间一行时可能产生更大的响应。<br>每个模板的系数之和为0,这表示在恒定亮度区域内，模板的响应为0.</p><ul><li>MATLAB实现检测指定方向上的线</li></ul><pre class=" language-matlab"><code class="language-matlab">clcclearf <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'11111.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>w <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token number">2</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token number">2</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% g = imfilter(tofloat(f),w);</span>g <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gtop <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% gtop = pixeldup(gtop, 4);</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>gtop<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gbot <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token keyword">end</span> <span class="token operator">-</span> <span class="token number">119</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span> <span class="token keyword">end</span> <span class="token operator">-</span> <span class="token number">119</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% gbot = pixeldup(gbot, 4);</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>gbot<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>T <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> g <span class="token operator">>=</span> T<span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span></code></pre><p>结果:<br><img src="https://i.loli.net/2019/07/24/5d37b3a815b7125153.jpg" alt><br>可能会用到的M函数pixeldup</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> B<span class="token operator">=</span><span class="token function">pixeldup</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%pixeldup用来重复像素的，在水平方向复制m倍，在垂直方向复制n倍，m，n必须为整数，n没有赋值默认为m%检查输入参数个数</span><span class="token keyword">if</span> nargin<span class="token operator">&lt;</span><span class="token number">2</span>    <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'At least two inputs are required.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">if</span> nargin<span class="token operator">==</span><span class="token number">2</span>    n<span class="token operator">=</span>m<span class="token punctuation">;</span>    <span class="token keyword">end</span>u<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%产生一个向量，其向量中元素的个数为A的行数%复制向量中每个元素m次m=round(m);%防止m为非整数u=u(ones(1,m),:);</span>u<span class="token operator">=</span><span class="token function">u</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%在垂直方向重复操作</span>v<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token function">round</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token operator">=</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token operator">=</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>B<span class="token operator">=</span><span class="token function">A</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>慎用tofloat函数</strong></p><h3 id="基本边缘检测"><a href="#基本边缘检测" class="headerlink" title="基本边缘检测"></a>基本边缘检测</h3><h4 id="边缘模型"><a href="#边缘模型" class="headerlink" title="边缘模型"></a>边缘模型</h4><ul><li>台阶模型<br>在一个像素的距离上发生两次灰度级间理想的过渡</li><li>斜坡模型<br>数字图像存在被模糊或有噪声的边缘，这时的边缘被建模成一个更接近灰度斜坡的剖面，斜坡的斜度与边缘的模糊程度成反比</li><li>屋顶模型<br>通过一个区域的线的模型，屋顶边缘的基底(宽度)由该线的宽度和尖锐度决定<br><img src="https://i.loli.net/2019/07/24/5d382004cd3e437707.jpg" alt></li></ul><p>结合前面提到的一阶导数和二阶导数的性质，可以得出结论:</p><ol><li>一阶导数的幅值可用于检测图像中的某个点处是否存在一个边缘</li><li>二阶导数的符号可用于确定一个边缘像素位于该边缘的暗的一侧还是亮的一侧</li><li>对图像的每个边缘，二阶导数生成两个值</li><li>二阶导数的零交叉点可用于定位粗边缘的中心</li></ol><ul><li>执行边缘检测的三个步骤:    <ol><li>为降噪对图像进行平滑处理</li><li>边缘点的检测</li><li>边缘定位</li></ol></li></ul><h4 id="梯度"><a href="#梯度" class="headerlink" title="梯度"></a>梯度</h4><h5 id="梯度概念"><a href="#梯度概念" class="headerlink" title="梯度概念"></a>梯度概念</h5><p>梯度是一个可以确定图像f的(x,y)位置处的边缘方向和强度的工具，用 $\triangledown f$来表示，用 <strong>向量</strong>来定义</p><p>$$\triangledown f = \begin{bmatrix} g_x \\ g_y \\ \end{bmatrix} = \begin{bmatrix} \frac{\partial f}{\partial x} \\ \frac{\partial f}{\partial x} \end{bmatrix}$$</p><h5 id="梯度性质"><a href="#梯度性质" class="headerlink" title="梯度性质"></a>梯度性质</h5><ol><li><p>梯度向量大小。<br>$\triangledown f$的大小为M(x,y)<br>$$\triangledown f = mag(\triangledown f)=[g_x^2+g_y^2]^{<br>1/2}= [(\partial f/\partial x)^2+(\partial f/\partial y)^2]^{1/2}$$<br>这是梯度向量方向变化率的值。其中$g_x$,$g_y$和M(x,y)都是和原图像大小相同的图像。称M(x,y)为梯度图像。</p></li><li><p>梯度向量的方向<br>$$\alpha (x,y) = tan^{-1}(\frac{g_x}{g_y})$$<br>同理，　$\alpha(x,y)$也是由$g_x$和$g_y$阵列创建的尺寸相同的图像。<br>任意点(x,y)处的一个边缘的方向与该点处梯度向量的方向$\alpha(x,y)$正交。<br>梯度向量有时也称为边缘法线</p></li><li><p>梯度指出f在(x,y)处的最大变化率的方向</p></li></ol><h5 id="梯度算子"><a href="#梯度算子" class="headerlink" title="梯度算子"></a>梯度算子</h5><h6 id="一维模板"><a href="#一维模板" class="headerlink" title="一维模板"></a>一维模板</h6><p>$$g_x = \frac{\partial f(x,y)}{\partial x} = f(x+1,y) - f(x,y)$$<br>和<br>$$g_y = \frac{\partial f(x,y)}{\partial y} = f(x,y+1)-f(x,y)$$</p><h6 id="二维模板"><a href="#二维模板" class="headerlink" title="二维模板"></a>二维模板</h6><p>罗伯特交叉梯度算子(Roberts),ROberts算子以求对角像素之差为基础:<br>$$g_x = \frac{\partial f}{\partial x} = (z_9 - z_5)$$<br>和<br>$$g_y = \frac{\partial f}{\partial y} = (z_8 - z_6)$$</p><h6 id="3×3模板"><a href="#3×3模板" class="headerlink" title="3×3模板"></a>3×3模板</h6><ol><li><p>Prewitt算子<br>$$g_x = (z_7 + z_8 + z_9)-(z_1 + z_2 + z_3)$$<br>和<br>$$g_y = (z_3 + z_6 + z_9) - (z_1 + z_4 + z_7)$$</p></li><li><p>Sobel算子</p></li></ol><p>$$g_x = (z_7 + 2z_8 + z_9)-(z_1 +2 z_2 + z_3)$$<br>和<br>$$g_y = (z_3 + 2z_6 + z_9) - (z_1 +2 z_4 + z_7)$$</p><p>在中心位置处使用2可以平滑图像</p><p>注意:所有模板中的系数之和为0，这意味着恒定灰度的响应为0.</p><h4 id="使用函数edge的边缘检测"><a href="#使用函数edge的边缘检测" class="headerlink" title="使用函数edge的边缘检测"></a>使用函数edge的边缘检测</h4><ul><li>语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'method'</span><span class="token punctuation">,</span> parameters<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>f是输入图像，method是边缘检测方法，parameters是附加参数</p><h4 id="边缘检测算子"><a href="#边缘检测算子" class="headerlink" title="边缘检测算子"></a>边缘检测算子</h4><p>图像邻域如下图所示:</p><table><thead><tr><th align="center">$z_1$</th><th align="center">$z_2$</th><th align="center">$z_3$</th></tr></thead><tbody><tr><td align="center">$z_4$</td><td align="center">$z_5$</td><td align="center">$z_6$</td></tr><tr><td align="center">$z_7$</td><td align="center">$z_8$</td><td align="center">$z_9$</td></tr></tbody></table><h5 id="Sobel边缘检测算子"><a href="#Sobel边缘检测算子" class="headerlink" title="Sobel边缘检测算子"></a>Sobel边缘检测算子</h5><ul><li>Sobel边缘检测算子模板</li></ul><table><thead><tr><th align="center">-1</th><th align="center">-2</th><th align="center">-1</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">2</td><td align="center">1</td></tr></tbody></table><p>$$g_x=(z_7+2z_8+z_9)-(z_1+2z_2+z_3)$$</p><table><thead><tr><th align="center">-1</th><th align="center">0</th><th align="center">1</th></tr></thead><tbody><tr><td align="center">-2</td><td align="center">0</td><td align="center">2</td></tr><tr><td align="center">-1</td><td align="center">0</td><td align="center">1</td></tr></tbody></table><p>$$g_y = (z_3+2z_6+z_9)-(z_1+2z_4+z_7)$$<br>每一行和每一列的中心像素用2来加权以提供平滑</p><ul><li>MATLAB语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span> t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'sobel'</span><span class="token punctuation">,</span> T<span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>f是输入的图像，T是指定的阀值，dir是指定的检测边缘的首选方向:’horizontal’,’vertical’,’both’(默认值)<br>t是可选的，T未指定，则t自动设置</p><h5 id="Prewitt边缘检测算子"><a href="#Prewitt边缘检测算子" class="headerlink" title="Prewitt边缘检测算子"></a>Prewitt边缘检测算子</h5><ul><li>Prewitt边缘检测算子模板</li></ul><table><thead><tr><th align="center">-1</th><th align="center">-1</th><th align="center">-1</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">1</td><td align="center">1</td></tr></tbody></table><p>$$g_x = (z_7 + z_8 + z_9)-(z_1 + z_2 + z_3)$$</p><table><thead><tr><th align="center">-1</th><th align="center">0</th><th align="center">1</th></tr></thead><tbody><tr><td align="center">-1</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">-1</td><td align="center">0</td><td align="center">1</td></tr></tbody></table><p>$$g_y = (z_3 + z_6 + z_9) - (z_1 + z_4 + z_7)$$</p><ul><li>MATLAB语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span> t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'prewitt'</span><span class="token punctuation">,</span> T <span class="token punctuation">,</span>dir<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>计算简单，但容易产生噪声</p><h5 id="Roberts边缘检测算子"><a href="#Roberts边缘检测算子" class="headerlink" title="Roberts边缘检测算子"></a>Roberts边缘检测算子</h5><ul><li>Roberts边缘检测算子模板</li></ul><table><thead><tr><th align="center">-1</th><th align="center">0</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">1</td></tr></tbody></table><p>$$g_x = z_9 - z_5$$</p><table><thead><tr><th align="center">0</th><th align="center">1</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0</td></tr></tbody></table><p>$$g_y = z_8 - z_6$$</p><ul><li>MATLAB语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span> t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'roberts'</span><span class="token punctuation">,</span> T <span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="LoG检测算子"><a href="#LoG检测算子" class="headerlink" title="LoG检测算子"></a>LoG检测算子</h5><ul><li>LoG</li></ul><p>考虑高斯函数<br>$$G(x,y) = e^{-\frac{x^2 + y^2}{2\sigma ^2}}$$<br>$\sigma$是标准差。这是平滑函数，如果和图像卷积，会使图像变模糊，模糊程度由$\sigma$决定<br>这个函数的Laplace算法是:<br>$$\triangledown^2G(x,y) = \frac{\partial ^2 G(x,y)}{\partial x^2}+\frac{\partial ^2 G(x,y)}{\partial y^2} = [\frac{x^2 + y^2-2\sigma ^2}{\sigma ^4}]^{e^{-\frac{x^2 + y^2}{2\sigma ^2}}}$$</p><p>用$\triangledown ^2G(x,y)$卷积(滤波)这幅图像与先用平滑函数对图像卷积，再对结果进行Laplace变换的结果是一样的<br>用$\triangledown ^2G(x,y)$卷积图像，可以得到两个效果:平滑图像(因而减少了噪声);计算Laplace，从而产生双边缘图像，然后在双边缘之间定位由发现的零交叉组成的边缘</p><ul><li>MATLAB语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span> t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">,</span> T <span class="token punctuation">,</span> sigma<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>sigma默认值是2</p><h5 id="零交叉检测算子"><a href="#零交叉检测算子" class="headerlink" title="零交叉检测算子"></a>零交叉检测算子</h5><ul><li>基于LoG，卷积使用特殊的滤波函数H来完成</li><li>MATLAB语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span> t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'zerocross'</span><span class="token punctuation">,</span> T <span class="token punctuation">,</span> H<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="Canny检测算子"><a href="#Canny检测算子" class="headerlink" title="Canny检测算子"></a>Canny检测算子</h5><ul><li>edge函数中最强的边缘检测算子</li><li>MATLAB语法</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token punctuation">[</span>g<span class="token punctuation">,</span> t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'canny'</span><span class="token punctuation">,</span> T <span class="token punctuation">,</span> sigma<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="MATLAB实现"><a href="#MATLAB实现" class="headerlink" title="MATLAB实现"></a>MATLAB实现</h4><ul><li>几种边缘检测算法的比较(Sobel,LoG,Canny)</li></ul><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'timg1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'currect image'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%Default Output</span><span class="token punctuation">[</span>gSobel_default<span class="token punctuation">,</span>ts<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'sobel'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>gLoG_default<span class="token punctuation">,</span> tlog<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'log'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>gCanny_default<span class="token punctuation">,</span> tc<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token string">'canny'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%Best Output</span>gSobel_best <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token string">'sobel'</span><span class="token punctuation">,</span><span class="token number">0.165</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gLoG_best <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token string">'log'</span><span class="token punctuation">,</span><span class="token number">0.008</span><span class="token punctuation">,</span> <span class="token number">2.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gCanny_best <span class="token operator">=</span> <span class="token function">edge</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token string">'canny'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'Gary images'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gSobel_default<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'gSobel default'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gSobel_best<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'gSobel best'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gLoG_default<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'gLoG default'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gLoG_best<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'gLoG best'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gCanny_default<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'gCanny default'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gCanny_best<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'gCanny best'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>其中最佳输出的阀值是根据得到的ts,tlog,tc的值来确定的<br>结果:<br><img src="https://i.loli.net/2019/07/24/5d37d6b4bec1777947.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b5886d994031.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b3ad9b270352.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b573bae72055.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b61724d14715.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b51df2874618.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b65663011930.jpg" alt><br><img src="https://i.loli.net/2019/07/24/5d37d6b3e566366232.jpg" alt><br>综合结果来看，Canny边缘检测算子可以得到最好的结果</p>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo大坑</title>
      <link href="/2019/07/22/hexo-da-keng/"/>
      <url>/2019/07/22/hexo-da-keng/</url>
      
        <content type="html"><![CDATA[<h2 id="坑一、Template-render-error-模板渲染错误"><a href="#坑一、Template-render-error-模板渲染错误" class="headerlink" title="坑一、Template render error 模板渲染错误"></a>坑一、Template render error 模板渲染错误</h2><p>写了一下午博文，高高兴兴地hexo g却发现报错了！<br><code>INFO  Start processingFATAL Something&#39;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlNunjucks Error:  [Line 2, Column 6] unexpected token: }} at formatNunjucksError (/home/kevin/blog/node_modules/hexo/lib/extend/tag.js:102:13)    at Promise.fromCallback.catch.err (/home/kevin/blog/node_modules/hexo/lib/extend/tag.js:124:34)    at tryCatcher (/home/kevin/blog/node_modules/bluebird/js/release/util.js:16:23)    at Promise._settlePromiseFromHandler (/home/kevin/blog/node_modules/bluebird/js/release/promise.js:517:31)    at Promise._settlePromise (/home/kevin/blog/node_modules/bluebird/js/release/promise.js:574:18)    at Promise._settlePromise0 (/home/kevin/blog/node_modules/bluebird/js/release/promise.js:619:10)    at Promise._settlePromises (/home/kevin/blog/node_modules/bluebird/js/release/promise.js:695:18)    at _drainQueueStep (/home/kevin/blog/node_modules/bluebird/js/release/async.js:138:12)    at _drainQueue (/home/kevin/blog/node_modules/bluebird/js/release/async.js:131:9)    at Async._drainQueues (/home/kevin/blog/node_modules/bluebird/js/release/async.js:147:5)    at Immediate.Async.drainQueues [as _onImmediate] (/home/kevin/blog/node_modules/bluebird/js/release/async.js:17:14)    at processImmediate (internal/timers.js:443:21)</code></p><p>原因是nunjucks模板标签导致MD文件解析报错的问题，我试验了一下，在md文档中出现<code>双大括号</code>,<code>左大括号+#</code>,<code>左大括号+%</code>等都会报错(原谅我这么打，因为我打出来符号的话这篇博客就发不出来了)，下面是一位大神的<a href="http://xcoding.tech/2018/08/08/hexo/%E5%A6%82%E4%BD%95%E4%BB%8E%E6%A0%B9%E6%9C%AC%E8%A7%A3%E5%86%B3hexo%E4%B8%8D%E5%85%BC%E5%AE%B9%7B%7B%7D%7D%E6%A0%87%E7%AD%BE%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">解决办法</a>，他提供了几种解决办法，讲的很详细，可以参考一下</p><p>我觉得有点麻烦就没采用(说多了就是菜～),下面是我的办法:</p><ol><li>既然出现上面的内容就会报错，那就尽量避免出现呗…(说的都是废话)</li><li>使用<code>\lbrace</code>代替<code>\{</code>,使用<code>\rbrace</code>代替<code>\}</code><br>推荐大神的解决办法，一劳永逸，以后就不用管了</li></ol><h2 id="坑二、Markdown的空行"><a href="#坑二、Markdown的空行" class="headerlink" title="坑二、Markdown的空行"></a>坑二、Markdown的空行</h2><p>在写表格的时候要把表格体前后各空一行，不然你写的表格是这样式儿的，崩溃啊！<br><img src="https://i.loli.net/2019/07/22/5d358cfee55f989745.png" alt></p><p>有可能是hexo解析的问题，我在使用markdown-preview的时候看的是正常的</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>形态学图像处理</title>
      <link href="/2019/07/22/xing-tai-xue-tu-xiang-chu-li/"/>
      <url>/2019/07/22/xing-tai-xue-tu-xiang-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="形态学图像处理"><a href="#形态学图像处理" class="headerlink" title="形态学图像处理"></a>形态学图像处理</h1><p>从这里开始过渡，从输入输出都是图像，过渡到图像分析方法，输出以某种方法来描述图像的内容。</p><h2 id="集合理论基础"><a href="#集合理论基础" class="headerlink" title="集合理论基础"></a>集合理论基础</h2><p>令Z为整数集合，用于产生的数字图像的抽样处理可以看做是把xy平面分割成网格状，其中每个网格的<strong>中心坐标</strong>是来自笛卡尔积$Z^2$中的一对元素。在集合理论中，如果(x,y)是来自$Z^2$的整数,f是分配给每个不同坐标的对(x,y)的亮度值的映射，那么函数f(x,y)被成为数字图像。如果亮度值也为整数，那么这幅图像就变成了二维图像。<br>集合的基本操作:$\in$,$\notin$,$\cup$,$\cap$,+,-.除了这些基本操作，形态学操作还需要两个算子，他们特别针对元素均为像素坐标的集合</p><ol><li>集合的反射$\hat{B}$<br>$$ \hat{B} = \{w|w=-b,b\in B\}$$</li><li>点z=($z_1$,$z_2$)集合的平移${(A)}_z$<br>$$ (A)_z = \{c|c=a+z,a\in A\}$$<h3 id="二值图像、集合及逻辑算子"><a href="#二值图像、集合及逻辑算子" class="headerlink" title="二值图像、集合及逻辑算子"></a>二值图像、集合及逻辑算子</h3>形态学理论把二值图像看成是前景(1值)像素的集合,集合的元素属于$Z^2$如果A和B都是二值图像，那么$C=A\cup B$也是二值图像<br>$$C(x,y)=\begin{cases}<br>1,\quad A(x,y)或B(x,y)为1,或者两者均为1\<br>0 \quad 其他<br>\end{cases}<br>$$<h3 id="在MATLAB中使用逻辑表达式在二值图像上进行逻辑运算"><a href="#在MATLAB中使用逻辑表达式在二值图像上进行逻辑运算" class="headerlink" title="在MATLAB中使用逻辑表达式在二值图像上进行逻辑运算"></a>在MATLAB中使用逻辑表达式在二值图像上进行逻辑运算</h3></li></ol><table><thead><tr><th>集合运算</th><th align="center">二值图像的MATLAb语句</th><th>名称</th></tr></thead><tbody><tr><td>$A\cap B$</td><td align="center">A &amp; B</td><td>与</td></tr><tr><td>$A\cup B$</td><td align="center">A $\rvert$ B</td><td>或</td></tr><tr><td>$A^c$</td><td align="center">~B</td><td>非</td></tr><tr><td>$A-B$</td><td align="center">A &amp;~ B</td><td>差</td></tr></tbody></table><h2 id="腐蚀和膨胀"><a href="#腐蚀和膨胀" class="headerlink" title="腐蚀和膨胀"></a>腐蚀和膨胀</h2><h3 id="膨胀"><a href="#膨胀" class="headerlink" title="膨胀"></a>膨胀</h3><p>膨胀是使图像中的目标”生长”或”变粗”的操作。程度由一种被称为<strong>结构元</strong>的形状来控制<br>A被B膨胀，表示为$A \oplus B$,作为集合操作<br>$$ A\oplus B=\{ z|\hat{B}_z\cap A\not= \emptyset\}$$<br>约定: $A \oplus B$ 的第一个操作数是图像，第二个操作数是结构元，结构元通常比图像小的多。<br><img src="https://i.loli.net/2019/07/22/5d35670a79cd611294.jpg" alt></p><ul><li>工具箱函数imdilate(A, B)来执行膨胀</li></ul><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'1111.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%自定义结构元</span>D <span class="token operator">=</span> <span class="token function">imdilate</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'膨胀后的图'</span><span class="token punctuation">)</span></code></pre><p><img src="https://i.loli.net/2019/07/22/5d3564132fa1741100.jpg" alt></p><h3 id="腐蚀"><a href="#腐蚀" class="headerlink" title="腐蚀"></a>腐蚀</h3><p>腐蚀”收缩”或”细化”二值图像中的物体。像膨胀一样，收缩的方法和程度由结构元控制。<br>A被B腐蚀表示为$A\ominus B$,定义为:<br>$$ A\ominus B = \{z| (B)_z\subseteq A\} = \{z| (B)_z\cap A^c = \emptyset\}$$<br><img src="https://i.loli.net/2019/07/23/5d36cefa2813d95731.jpg" alt></p><p>工具箱函数imerode(A,B)来执腐蚀</p><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'tig.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%自定义结构元</span>R <span class="token operator">=</span> <span class="token function">imerode</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>R<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'腐蚀后的图'</span><span class="token punctuation">)</span></code></pre><p><img src="https://i.loli.net/2019/07/22/5d356b5f7eed962952.jpg" alt></p><h3 id="结构元"><a href="#结构元" class="headerlink" title="结构元"></a>结构元</h3><p>strel函数，用来构造各种大小和形状的结构元</p><pre class=" language-matlab"><code class="language-matlab">se <span class="token operator">=</span> <span class="token function">strel</span><span class="token punctuation">(</span>shape<span class="token punctuation">,</span> parameters<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>shape是希望形状的字符串，parameters是描述形状信息的参数列表<br><img src="https://i.loli.net/2019/07/22/5d35670a85b4f22579.jpg" alt><br><img src="https://i.loli.net/2019/07/22/5d35670a63e2817742.jpg" alt><br>注意生成的se含有两项</p><ol><li>se.Neighborhood:[ ×  logical ]</li><li>se.Demensionality: 2</li></ol>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>频域滤波器及其应用</title>
      <link href="/2019/07/20/pin-yu-lu-bo-qi-ji-qi-ying-yong/"/>
      <url>/2019/07/20/pin-yu-lu-bo-qi-ji-qi-ying-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="频域滤波器"><a href="#频域滤波器" class="headerlink" title="频域滤波器"></a>频域滤波器</h1><h2 id="低通滤波器"><a href="#低通滤波器" class="headerlink" title="低通滤波器"></a>低通滤波器</h2><h3 id="理想低通滤波器"><a href="#理想低通滤波器" class="headerlink" title="理想低通滤波器"></a>理想低通滤波器</h3><p>在以原点为圆心，以$D_0$为半径的圆内无衰减通过所有频率，而在圆外切断所有频率的二维低通滤波器，称为理想低通滤波器(ILPF)，定义为<br>$$y=\begin{cases}<br>1,\quad D(x,y)\leq 0\<br>0, \quad D(x,y) &gt; 0<br>\end{cases}$$<br>$D_0$是一个常数，D(u,v)是频率域中心点(u,v)与频率矩形中心的距离，即<br>$$ D(u,v)=\lbrack{(u-\frac{P}{2})^2+(v-\frac{Q}{2})^2}\rbrack^\frac{1}{2} $$<br>过渡点称为<strong>截止频率</strong><br><img src="https://i.loli.net/2019/07/21/5d341bf1f0cb755202.jpg" alt></p><h3 id="布特沃斯低通滤波器"><a href="#布特沃斯低通滤波器" class="headerlink" title="布特沃斯低通滤波器"></a>布特沃斯低通滤波器</h3><p>截止频率位于距原点$D_0$处的n阶布特沃斯低通滤波器(BLPF)的传递函数的定义为:<br>$$H(u,v)=\frac{1}{1+{[D(u,v)/D_0]}^{2n}}$$<br>截止频率点是当D(u,v) = $D_0$时的点<br><img src="https://i.loli.net/2019/07/21/5d341bf1f101518273.jpg" alt></p><h3 id="高斯低通滤波器"><a href="#高斯低通滤波器" class="headerlink" title="高斯低通滤波器"></a>高斯低通滤波器</h3><p>二维形式:<br>$$H(u,v) = e^{-D^2(u,v)/2{D_0}^2} $$<br>$D_0$ 是截止频率<br><img src="https://i.loli.net/2019/07/21/5d341bf1f163e99741.jpg" alt></p><h3 id="使用低通滤波器平滑图像"><a href="#使用低通滤波器平滑图像" class="headerlink" title="使用低通滤波器平滑图像"></a>使用低通滤波器平滑图像</h3><h4 id="1-高斯低通滤波器"><a href="#1-高斯低通滤波器" class="headerlink" title="1. 高斯低通滤波器"></a>1. 高斯低通滤波器</h4><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span> revertclass<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">tofloat</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>PQ <span class="token operator">=</span> <span class="token function">paddedsize</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>U<span class="token punctuation">,</span> V<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">dftuv</span><span class="token punctuation">(</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>D <span class="token operator">=</span> <span class="token function">hypot</span><span class="token punctuation">(</span>U<span class="token punctuation">,</span> V<span class="token punctuation">)</span><span class="token punctuation">;</span>D0 <span class="token operator">=</span> <span class="token number">0.05</span><span class="token operator">*</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>F <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>H <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>D <span class="token operator">.^</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>D0<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%高斯低通滤波器</span>g <span class="token operator">=</span> <span class="token function">dftfilt</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> H<span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">revertclass</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token function">fftshift</span><span class="token punctuation">(</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">fftshift</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>figure<span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>滤波结果：<br><img src="https://i.loli.net/2019/07/20/5d32d02f5468855048.jpg" alt></p><p>除了之前说的几个M函数外，还需要用到<code>dftfilt()</code>函数</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> g<span class="token operator">=</span><span class="token function">dftfilt</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span>H<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%DFTFILT Performs frequency domain filtering.</span><span class="token comment" spellcheck="true">%   G=DFTFILT(F,H) filters F in the frequency domain using the</span><span class="token comment" spellcheck="true">%   filter transfer function H. The output, G, is the filtered</span><span class="token comment" spellcheck="true">%   image, which has the same size as F. DFTFILT automatically pads</span><span class="token comment" spellcheck="true">%   F to be the same size as H. Function PADDEDSIZE can be used</span><span class="token comment" spellcheck="true">%   to determine an appropriate size for H.</span>%<span class="token comment" spellcheck="true">%   DFTFILT assumes that F is real and that H is a real, uncentered,</span><span class="token comment" spellcheck="true">%   circularly-symmetric filter function.</span><span class="token comment" spellcheck="true">%Obtain the FFT of the padded input.</span>F<span class="token operator">=</span><span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token function">size</span><span class="token punctuation">(</span>H<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">size</span><span class="token punctuation">(</span>H<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%Perform filtering.</span>g<span class="token operator">=</span><span class="token function">real</span><span class="token punctuation">(</span><span class="token function">ifft2</span><span class="token punctuation">(</span>H<span class="token operator">.*</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%Crop to original size.</span>g<span class="token operator">=</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="2-Butterworth滤波"><a href="#2-Butterworth滤波" class="headerlink" title="2. Butterworth滤波"></a>2. Butterworth滤波</h4><p>该函数输入为灰度图像，自由设置截止频率$D_0$和BLPF的阶数n，输出为滤波后的图像(已归一化到[0,255])</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>image_out<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Bfilter</span><span class="token punctuation">(</span>image_in<span class="token punctuation">,</span> D0<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token comment" spellcheck="true">% Butterworth滤波器，在频率域进行滤波</span><span class="token comment" spellcheck="true">% 输入为需要进行滤波的灰度图像，Butterworth滤波器的截止频率D0，阶数N</span><span class="token comment" spellcheck="true">% 输出为滤波之后的灰度图像</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span> n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>image_in<span class="token punctuation">)</span><span class="token punctuation">;</span>P <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> m<span class="token punctuation">;</span>Q <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> n<span class="token punctuation">;</span>fp <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span> Q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%对图像填充0,并且乘以(-1)^(x+y) 以移到变换中心</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> m    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> n        <span class="token function">fp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">double</span><span class="token punctuation">(</span><span class="token function">image_in</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">% 对填充后的图像进行傅里叶变换</span>F1 <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 生成Butterworth滤波函数，中心在(m+1,n+1)</span>Bw <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span> Q<span class="token punctuation">)</span><span class="token punctuation">;</span>a <span class="token operator">=</span> D0<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> N<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> u <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> P    <span class="token keyword">for</span> v <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> Q        temp <span class="token operator">=</span> <span class="token punctuation">(</span>u<span class="token operator">-</span><span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token function">Bw</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span>temp<span class="token operator">^</span>N<span class="token punctuation">)</span> <span class="token operator">/</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">%进行滤波</span>G <span class="token operator">=</span> F1 <span class="token operator">.*</span> Bw<span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 反傅里叶变换</span>gp <span class="token operator">=</span> <span class="token function">ifft2</span><span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 处理得到的图像</span>image_out <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token string">'uint8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gp <span class="token operator">=</span> <span class="token function">real</span><span class="token punctuation">(</span>gp<span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> m    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> n        <span class="token function">g</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">gp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span>mmax <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mmin <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>range <span class="token operator">=</span> mmax<span class="token operator">-</span>mmin<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> m    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">:</span> n        <span class="token function">image_out</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span>mmin<span class="token punctuation">)</span> <span class="token operator">/</span> range<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">end</span></code></pre><p>测试BLPF的阶数为2,截止频率分别为10,40,80,150,450</p><pre class=" language-matlab"><code class="language-matlab">clear all<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>image1 <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'2.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image2 <span class="token operator">=</span> <span class="token function">Bfilter</span><span class="token punctuation">(</span>image1<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image3 <span class="token operator">=</span> <span class="token function">Bfilter</span><span class="token punctuation">(</span>image1<span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image4 <span class="token operator">=</span> <span class="token function">Bfilter</span><span class="token punctuation">(</span>image1<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image5 <span class="token operator">=</span> <span class="token function">Bfilter</span><span class="token punctuation">(</span>image1<span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>image6 <span class="token operator">=</span> <span class="token function">Bfilter</span><span class="token punctuation">(</span>image1<span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">% 显示图像</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>image1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'原图像'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>image2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'D0 = 10, n = 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>image3<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'D0 = 40, n = 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>image4<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'D0 = 80, n = 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>image5<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'D0 = 150, n = 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imshow</span><span class="token punctuation">(</span>image6<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'D0 = 450, n = 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>滤波结果如下:<br><img src="https://i.loli.net/2019/07/20/5d32d02f43bc610556.jpg" alt><br>分析结果:    </p><ol><li>模糊的平滑过渡是截止频率增大的函数</li><li>滤波后输出三副连续的色图，原因是rgb图像的分三次呈现<br>一副彩图是由三色组成,红绿蓝三色，图像读取到matlab后，有三个参数m × n × 3, 代表的是三色叠加，处理之后的图将三色展开分别呈现了，所以才会出现三副连续的色图<br><img src="https://i.loli.net/2019/07/20/5d32d80a09a9124012.jpg" alt></li></ol><p>换成彩色图可以明显看到<br><img src="https://i.loli.net/2019/07/20/5d32d80a3073491464.jpg" alt></p><h2 id="高通滤波器"><a href="#高通滤波器" class="headerlink" title="高通滤波器"></a>高通滤波器</h2><p>图像的锐化可以在频率与通过高通滤波器来实现<br>一个高通滤波器可以由一个低通滤波器来实现:<br>$$H_{HP}(u,v)=1-H_{LP}(u,v)$$<br>被低通滤波器衰减的频率可以通过高通滤波器</p><h3 id="理想高通滤波器"><a href="#理想高通滤波器" class="headerlink" title="理想高通滤波器"></a>理想高通滤波器</h3><p>二维理想高通滤波器可以定义为<br>$$ H(u,v)=\begin{cases}<br>1,\quad D(u,v)\leq D_0\<br>0,\quad D(u,v)&gt;D_0<br>\end{cases}<br>$$<br><img src="https://i.loli.net/2019/07/21/5d341bf1c410443073.jpg" alt></p><h3 id="布特沃斯高通滤波器"><a href="#布特沃斯高通滤波器" class="headerlink" title="布特沃斯高通滤波器"></a>布特沃斯高通滤波器</h3><p>截止频率为$D_0$的n阶布特沃斯高通滤波器(BHPF)的定义为:<br>$$ H(u,v)=\frac{1}{1+[D_0/D(u,v)]^{2n}}$$<br><img src="https://i.loli.net/2019/07/21/5d341bf1c376281237.jpg" alt></p><h3 id="高斯高通滤波器"><a href="#高斯高通滤波器" class="headerlink" title="高斯高通滤波器"></a>高斯高通滤波器</h3><p>截止频率处在距频率矩形中心距离为$D_0$的高斯高通滤波器(GHPF)的传递函数如下:<br>$$H(u,v)=1-e^{-D^2(u,v)/2D_0^2}$$<br><img src="https://i.loli.net/2019/07/21/5d341bf1c3f7954220.jpg" alt></p><h3 id="使用高通滤波器锐化图像"><a href="#使用高通滤波器锐化图像" class="headerlink" title="使用高通滤波器锐化图像"></a>使用高通滤波器锐化图像</h3><p>使用高通滤波器来锐化图像，与平滑图像类似，只是将低通滤波器换成了高通滤波器，具体步骤不再赘述</p><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span> revertclass<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">tofloat</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>PQ <span class="token operator">=</span> <span class="token function">paddedsize</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>U<span class="token punctuation">,</span> V<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">dftuv</span><span class="token punctuation">(</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>D <span class="token operator">=</span> <span class="token function">hypot</span><span class="token punctuation">(</span>U<span class="token punctuation">,</span> V<span class="token punctuation">)</span><span class="token punctuation">;</span>D0 <span class="token operator">=</span> <span class="token number">0.05</span><span class="token operator">*</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>F <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>H <span class="token operator">=</span> <span class="token function">hpfilter</span><span class="token punctuation">(</span><span class="token string">'gaussian'</span><span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> D0<span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">dftfilt</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> H<span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">revertclass</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'原图像'</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token function">fftshift</span><span class="token punctuation">(</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'高斯高通滤波器'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">fftshift</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'滤波后图像谱'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'滤波后图像'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>同样这里需要的是高通滤波函数hpfilter()</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>H<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">hpfilter</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span>M<span class="token punctuation">,</span>N<span class="token punctuation">,</span>D0<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%HPFILTER Computes freq. domain highpass filters</span><span class="token comment" spellcheck="true">%        THIS IS NOT A STANDARD MATLAB FUNCTION</span><span class="token comment" spellcheck="true">%        H = hpfilter (type,M,N,D0,n) creates the</span><span class="token comment" spellcheck="true">%        transfer function of a highpass filter, H, of</span><span class="token comment" spellcheck="true">%        the specified type and size MxN. Possible</span><span class="token comment" spellcheck="true">%        values for type, D0, and n are:</span>%<span class="token comment" spellcheck="true">%        </span><span class="token string">'ideal'</span>                Ideal highpass filter with<span class="token comment" spellcheck="true">%                        cutoff frequency D0. If</span><span class="token comment" spellcheck="true">%                        supplied, n is ignored.</span><span class="token comment" spellcheck="true">%        </span><span class="token string">'btw'</span>                Butterworth highpass filter<span class="token comment" spellcheck="true">%                        of order n, and cutoff D0.</span><span class="token comment" spellcheck="true">%        </span><span class="token string">'gaussn'</span>            Gaussian highpass filter with<span class="token comment" spellcheck="true">%                        cutoff (standard deviation)D0.</span><span class="token comment" spellcheck="true">%                        If supplied, n is ignored.</span><span class="token comment" spellcheck="true">%        M and N should be even numbers for DFT</span><span class="token comment" spellcheck="true">%        filtering.</span>%<span class="token comment" spellcheck="true">%        Class support: double, uint8, uint16</span><span class="token comment" spellcheck="true">%        The output is of class double</span><span class="token comment" spellcheck="true">%       The transfer function Hhp of a highpass filter</span><span class="token comment" spellcheck="true">%       is 1 - Hlp, where Hlp is the transfer function of</span><span class="token comment" spellcheck="true">%       the corresponding lowpass filter.  Thus, we can</span><span class="token comment" spellcheck="true">%       use function lpfilter to generate highpass filters</span><span class="token comment" spellcheck="true">%       If filter is btw, make sure that n is provided</span><span class="token comment" spellcheck="true">%       Otherwise, pass n=1 as an arbitrary value to</span><span class="token comment" spellcheck="true">%       prevent error message</span><span class="token keyword">if</span> nargin <span class="token operator">==</span> <span class="token number">4</span>    n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%default value of n</span><span class="token keyword">end</span>Hlp <span class="token operator">=</span> <span class="token function">lpfilter</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span>M<span class="token punctuation">,</span>N<span class="token punctuation">,</span>D0<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>H <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> Hlp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">%       End of function</span></code></pre><p>锐化结果:</p><ol><li>IHPF<br><img src="https://i.loli.net/2019/07/21/5d341eae3a6b123891.jpg" alt></li><li>BHPF<br><img src="https://i.loli.net/2019/07/21/5d341bf1f13e453488.jpg" alt></li><li>GHPF<br><img src="https://i.loli.net/2019/07/21/5d341eae4fa8d96779.jpg" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown数学公式汇总</title>
      <link href="/2019/07/19/markdown-shu-xue-gong-shi-hui-zong/"/>
      <url>/2019/07/19/markdown-shu-xue-gong-shi-hui-zong/</url>
      
        <content type="html"><![CDATA[<h4 id="分数、上标、下标、方根、求和、积分"><a href="#分数、上标、下标、方根、求和、积分" class="headerlink" title="分数、上标、下标、方根、求和、积分"></a>分数、上标、下标、方根、求和、积分</h4><p>分数 <code>$\dfrac{2}{3}$</code>表示$\dfrac{2}{3}$，<code>$\tfrac{2}{3}$</code>表示$\tfrac{2}{3}$</p><pre><code>\begin{eqnarray\*}    \dfrac{1}{\sqrt 2 +    \dfrac{1}{\sqrt 2 +    \dfrac{1}{\sqrt 2 + \dotsb}}}\;    \tfrac{1}{\sqrt 2 +    \tfrac{1}{\sqrt 2 +    \tfrac{1}{\sqrt 2 + \cdots}}}\;    \frac{1}{\sqrt 2 +    \frac{1}{\sqrt 2 +    \frac{1}{\sqrt 2 + \cdots}}}\end{eqnarray\*}</code></pre><p>表示<br>\begin{eqnarray*}<br>    \dfrac{1}{\sqrt 2 +<br>    \dfrac{1}{\sqrt 2 +<br>    \dfrac{1}{\sqrt 2 + \dotsb}}}\;<br>    \tfrac{1}{\sqrt 2 +<br>    \tfrac{1}{\sqrt 2 +<br>    \tfrac{1}{\sqrt 2 + \cdots}}}\;<br>    \frac{1}{\sqrt 2 +<br>    \frac{1}{\sqrt 2 +<br>    \frac{1}{\sqrt 2 + \cdots}}}<br>\end{eqnarray*}</p><hr><p>上标$A^2$、$A^{上标}$<br><code>$$A^2 \; A^{上标} \; \mathop{A}\limits^2$$</code>表示$$A^2 \; A^{上标} \; \mathop{A}\limits^2$$</p><hr><p>下标$A_2$、$A_{下标}$<br><code>$$A_2 \; A_{下标}\; \mathop{A}\limits_2$$</code>表示$$A_2 \; A_{下标}\; \mathop{A}\limits_2$$</p><hr><p>开方数$\sqrt[开方数]{参数}$<br><code>$$\sqrt[开方数]{参数}$$</code>表示$$\sqrt[开方数]{参数}$$</p><hr><p>求和$\sum$<br>$$\sum ^2_3\;\sum \nolimits^2_3$$</p><hr><p>分$\int$<br>$$\int ^2_3\;\int \limits^2_3$$</p><hr><h4 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h4><p>$R^s_r(t_r,t_e)=(t_r-t_e)c$</p><hr><h4 id="显示公式"><a href="#显示公式" class="headerlink" title="显示公式"></a>显示公式</h4><p>$$R^s_r(t_r,t_e)=(t_r-t_e)c$$</p><hr><h4 id="带有编号的显示公式"><a href="#带有编号的显示公式" class="headerlink" title="带有编号的显示公式"></a>带有编号的显示公式</h4><p>\begin{equation}<br>    R^s_r(t_r,t_e)=(t_r-t_e)c<br>\end{equation}</p><hr><h4 id="带有编号的多行公式"><a href="#带有编号的多行公式" class="headerlink" title="带有编号的多行公式"></a>带有编号的多行公式</h4><p>\begin{eqnarray}<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c<br>\end{eqnarray}</p><hr><h4 id="取消某一编号的多行公式"><a href="#取消某一编号的多行公式" class="headerlink" title="取消某一编号的多行公式"></a>取消某一编号的多行公式</h4><p>\begin{eqnarray}<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \nonumber\\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c<br>\end{eqnarray}</p><hr><h4 id="带有指定编号的多行公式"><a href="#带有指定编号的多行公式" class="headerlink" title="带有指定编号的多行公式"></a>带有指定编号的多行公式</h4><p>\begin{eqnarray*}<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \tag{1}\\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c<br>\end{eqnarray*}</p><hr><h4 id="不带编号的多行公式"><a href="#不带编号的多行公式" class="headerlink" title="不带编号的多行公式"></a>不带编号的多行公式</h4><p>\begin{eqnarray*}<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=(t_r-t_e)c<br>\end{eqnarray*}</p><hr><h4 id="指定对齐方式的多行公式"><a href="#指定对齐方式的多行公式" class="headerlink" title="指定对齐方式的多行公式"></a>指定对齐方式的多行公式</h4><p>\begin{eqnarray}<br>    &amp;R^s_r(t_r,t_e)&amp;=(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)&amp; = &amp;(t_r-t_e)c \\<br>    R^s_r(t_r,t_e)=&amp;(t_r-t_e)c&amp;<br>\end{eqnarray}</p><hr><h4 id="输入矩阵"><a href="#输入矩阵" class="headerlink" title="输入矩阵"></a>输入矩阵</h4><p>\begin{matrix}<br>    0 &amp; 1 \\<br>    1 &amp; 0<br>\end{matrix}</p><hr><p>\begin{pmatrix}<br>    0 &amp; -i \\<br>    i &amp; 0<br>\end{pmatrix}</p><hr><p>\begin{bmatrix}<br>    0 &amp; -1 \\<br>    1 &amp; 0<br>\end{bmatrix}</p><hr><p>\begin{Bmatrix}<br>    1 &amp; 0 \\<br>    0 &amp; -1<br>\end{Bmatrix}</p><hr><p>\begin{vmatrix}<br>    a &amp; b \\<br>    c &amp; d<br>\end{vmatrix}</p><hr><p>\begin{Vmatrix}<br>    i &amp; 0 \\<br>     0 &amp; -i<br>\end{Vmatrix}</p><hr><h4 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h4><h5 id="操作符号"><a href="#操作符号" class="headerlink" title="操作符号"></a>操作符号</h5><p>$$<br>\pm    \mp    \times    \div    \ast    \star    \circ    \bullet    \divideontimes    \ltimes    \rtimes    \cdot    \dotplus    \leftthreetimes    \rightthreetimes    \amalg    \otimes    \oplus    \ominus    \oslash    \odot    \circledcirc    \circleddash    \circledast    \bigcirc \boxdot    \boxminus    \boxplus    \boxtimes    \diamond    \bigtriangleup    \bigtriangledown    \triangleleft    \triangleright    \lhd    \rhd    \unlhd    \unrhd    \cup    \cap    \uplus    \Cup    \Cap    \wr    \setminus    \smallsetminus    \sqcap    \sqcup \wedge    \vee    \barwedge    \veebar    \doublebarwedge    \curlywedge    \curlyvee    \dagger    \ddagger    \intercal    \bigcap    \bigcup    \biguplus    \bigsqcup    \prod    \coprod    \bigwedge    \bigvee    \bigodot    \bigoplus    \bigotimes    \sum \int    \oint    \iint    \iiint    \iiiint    \idotsint    \arccos    \arcsin    \arctan    \arg    \cos    \cosh    \cot    \coth    \csc    \deg    \det    \dim    \exp    \gcd    \hom    \inf    \ker    \lg    \lim    \liminf    \limsup    \ln    \log    \max    \min    \Pr    \projlim    \sec\sin\sinh    \sup    \tan    \tanh \varlimsup    \varliminf    \varinjlim    \varprojlim<br> $$</p><h5 id="关系符号"><a href="#关系符号" class="headerlink" title="关系符号"></a>关系符号</h5><p>$$<br>\bowtie    \Join    \propto    \varpropto    \multimap    \pitchfork  \therefore    \because    =    \neq    \equiv    \approx    \sim    \simeq    \backsimeq    \approxeq    \cong    \ncong        \smile    \frown    \asymp    \smallfrown    \smallsmile    \between    \prec    \succ    \nprec    \nsucc    \preceq    \succeq    \npreceq    \nsucceq    \preccurlyeq    \succcurlyeq    \curlyeqprec    \curlyeqsucc    \precsim    \succsim    \precnsim    \succnsim    \precapprox    \succapprox    \precnapprox    \succnapprox    \perp    \vdash    \dashv    \nvdash    \Vdash    \Vvdash    \models    \vDash    \nvDash    \nVDash    \mid    \nmid    \parallel    \nparallel    \shortmid    \nshortmid    \shortparallel    \nshortparallel    &lt;    &gt;    \nless    \ngtr    \lessdot    \gtrdot    \ll    \gg    \lll    \ggg    \leq    \geq    \lneq    \gneq    \nleq    \ngeq    \leqq    \geqq    \lneqq    \gneqq    \lvertneqq    \gvertneqq    \nleqq    \ngeqq    \leqslant    \geqslant    \nleqslant    \ngeqslant    \eqslantless    \eqslantgtr    \lessgtr    \gtrless    \lesseqgtr    \gtreqless    \lesseqqgtr    \gtreqqless    \lesssim    \gtrsim    \lnsim    \gnsim    \lessapprox    \gtrapprox    \lnapprox    \gnapprox    \vartriangleleft    \vartriangleright    \ntriangleleft    \ntriangleright    \trianglelefteq    \trianglerighteq    \ntrianglelefteq    \ntrianglerighteq    \blacktriangleleft    \blacktriangleright    \subset    \supset    \subseteq    \supseteq    \subsetneq    \supsetneq    \varsubsetneq    \varsupsetneq    \nsubseteq    \nsupseteq    \subseteqq    \supseteqq    \subsetneqq    \supsetneqq    \nsubseteqq    \nsupseteqq    \backepsilon    \Subset    \Supset    \sqsubset    \sqsupset    \sqsubseteq    \sqsupseteq<br>$$</p><h5 id="箭头符号"><a href="#箭头符号" class="headerlink" title="箭头符号"></a>箭头符号</h5><p>$$<br>\leftarrow    \leftrightarrow    \rightarrow    \mapsto    \longleftarrow        \longleftrightarrow    \longrightarrow    \longmapsto    \downarrow    \updownarrow    \uparrow    \nwarrow        \searrow    \nearrow    \swarrow        \nleftarrow            \nleftrightarrow        \nrightarrow        \hookleftarrow        \hookrightarrow        \twoheadleftarrow        \twoheadrightarrow        \leftarrowtail        \rightarrowtail        \Leftarrow        \Leftrightarrow        \Rightarrow        \Longleftarrow        \Longleftrightarrow        \Longrightarrow            \Updownarrow        \Uparrow        \Downarrow        \nLeftarrow        \nLeftrightarrow    \nRightarrow        \leftleftarrows        \leftrightarrows        \rightleftarrows        \rightrightarrows        \downdownarrows        \upuparrows        \circlearrowleft        \circlearrowright        \curvearrowleft        \curvearrowright        \Lsh        \Rsh        \looparrowleft        \looparrowright        \dashleftarrow        \dashrightarrow        \leftrightsquigarrow        \rightsquigarrow        \Lleftarrow        \leftharpoondown        \rightharpoondown        \leftharpoonup        \rightharpoonup        \rightleftharpoons        \leftrightharpoons        \downharpoonleft        \upharpoonleft        \downharpoonright            \upharpoonright<br>$$</p><h5 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h5><p>$$<br>\downarrow    \Downarrow    \langle \rangle [ ] | | \lceil \rceil \uparrow    \Uparrow    \lfloor        \rfloor    \updownarrow    \Updownarrow    (        )    \{    \} \backslash    \lmoustache        \rmoustache    \lgroup    \rgroup    \arrowvert    \Arrowvert    \bracevert    \lvert    \rvert    \lVert        \rVert    \ulcorner    \urcorner \llcorner \lrcorner<br>$$</p><h5 id="希腊字符"><a href="#希腊字符" class="headerlink" title="希腊字符"></a>希腊字符</h5><p>$$<br>\alpha    \beta        \gamma    \delta    \epsilon    \zeta    \eta    \theta    \vartheta    \iota    \kappa    \lambda    \mu    \nu    \xi    o    \pi    \varpi    \rho    \varrho    \sigma    \varsigma    \tau    \upsilon    \phi    \varphi    \chi    \psi    \omega    A    B    \Gamma    \varGamma    \Delta    \varDelta    E    Z    H    \Theta    \varTheta    I    K    \Lambda    \varLambda    M    N    \Xi    \varXi    O    \Pi    \varPi    P    \Sigma        \Upsilon    \varUpsilon    \Phi    \varPhi    X    \varPsi    \Omega    \varOmega<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>频域滤波</title>
      <link href="/2019/07/19/pin-yu-lu-bo/"/>
      <url>/2019/07/19/pin-yu-lu-bo/</url>
      
        <content type="html"><![CDATA[<h1 id="频域滤波"><a href="#频域滤波" class="headerlink" title="频域滤波"></a>频域滤波</h1><ol><li>对图像平滑的低通滤波</li><li>对图像锐化的高通滤波</li><li>去除周期的选择性滤波</li></ol><h2 id="二维傅里叶变换"><a href="#二维傅里叶变换" class="headerlink" title="二维傅里叶变换"></a>二维傅里叶变换</h2><ul><li><p>二维傅里叶变换:<br>$$ F(u,v)=\int_{-\infty}^{\infty} \int_{-\infty}^{\infty} f(x,y)e^{-j2\pi(ux + vy)}\,\mathrm{d}x \mathrm{d}y $$</p></li><li><p>二维傅里叶逆变换：<br>$$ f(x,y) = \int_{-\infty}^{\infty} \int_{-\infty}^{\infty} F(u,v)e^{j2\pi(ux + vy)}\,dxdy $$</p></li></ul><h2 id="二维离散傅里叶变换"><a href="#二维离散傅里叶变换" class="headerlink" title="二维离散傅里叶变换"></a>二维离散傅里叶变换</h2><p>f(x,y)代表一幅大小为M×N的图像，其中x=0,1,……,M-1,y=0,1,…..,N-1,DFT如下</p><p>$$ F(u,v)=\int_{x=0}^{M-1} \int_{y=0}^{N-1} f(x,y)e^{-j2\pi(\frac{ux}{M}+\frac{vy}{N})}\,\mathrm{d}x \mathrm{d}y $$</p><p>IDFT：</p><p>$$ f(x,y)=\frac{1}{MN}\int_{x=0}^{M-1} \int_{y=0}^{N-1} F(u,v)e^{j2\pi(\frac{ux}{M}+\frac{vy}{N})}\,\mathrm{d}x \mathrm{d}y $$</p><p>这里的F(u,v)被称为展开的傅里叶级数</p><p>频域原点出的变换的值F(0,0)称为傅里叶变换的直流(dc)分量，F(0,0)等于f(0,0)平均值的MN倍。要注意的是在MATLAB中索引是从1开始的而不是从0开始的</p><h2 id="MATLAB实现对图像的Fourier变换和逆变换"><a href="#MATLAB实现对图像的Fourier变换和逆变换" class="headerlink" title="MATLAB实现对图像的Fourier变换和逆变换"></a>MATLAB实现对图像的Fourier变换和逆变换</h2><ul><li>Fourier变换，f为原图像</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> F <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>Fourier谱</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> S <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>该函数计算的是数组中每个元素的幅值( $ \sqrt{r^2+i^2} $ )<br>可以在这里观察到4个角的亮点，这就是周期特性的结果，不便观察</p><ul><li>将交换的原点移动到频域矩形的中心</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> Fc <span class="token operator">=</span> <span class="token function">fftshift</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span></code></pre><p>频谱范围大，不便观察</p><ul><li>取模，缩放</li></ul><pre class=" language-matlab"><code class="language-matlab">S2 <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span>Fc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>Fourier逆变换</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> f <span class="token operator">=</span> <span class="token function">ifft2</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>下面是完整代码</p><pre class=" language-matlab"><code class="language-matlab">img<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'moon.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f<span class="token operator">=</span><span class="token function">rgb2gray</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">%对于RGB图像必须做的一步，也可以用im2double函数</span>F<span class="token operator">=</span><span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">%Fourier变换</span>F1<span class="token operator">=</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">%取模,缩放</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>F1<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'傅里叶变换频谱图'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Fs<span class="token operator">=</span><span class="token function">fftshift</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">%将频谱图中零频率成分移动至频谱图中心</span>S<span class="token operator">=</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>Fs<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">%取模并进行缩放</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'频移后的频谱图'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fr<span class="token operator">=</span><span class="token function">real</span><span class="token punctuation">(</span><span class="token function">ifft2</span><span class="token punctuation">(</span><span class="token function">ifftshift</span><span class="token punctuation">(</span>Fs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">%频率域反变换到空间域，并取实部</span>ret<span class="token operator">=</span><span class="token function">im2uint8</span><span class="token punctuation">(</span><span class="token function">mat2gray</span><span class="token punctuation">(</span>fr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">%更改图像类型</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'逆傅里叶变换'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>结果<br><img src="https://i.loli.net/2019/07/18/5d3043778b4e114553.jpg" alt><br>如果使用<code>&gt;&gt; f = im2double(img)</code>进行处理，则会出现以下结果<br><img src="https://i.loli.net/2019/07/18/5d304377bcc9554917.jpg" alt></p><ul><li>分析    </li></ul><ol><li>图像Fourier变换之后立即imshow会报错<br><img src="https://i.loli.net/2019/07/18/5d3043779bef722309.jpg" alt><br>这是因为经过fourier变换之后的图像矩阵为复数矩阵，包含实部和虚部，此时进行<code>abs(f)</code>取复数矩阵的模，再显示。</li><li><code>rgb2gray()</code>和<code>im2double()</code>的使用<br>这一点要特别注意，对于RGB图像，<code>imread()</code>是已三维矩阵的形式来存储的，要先进行类型转换，否则会出现空白    </li><li><code>rgb2gray()</code>转换为灰度图像,得到的图像呈灰色基调，见‘结果’</li><li><code>im2double()</code>转换成双精度图像，得到的图像呈白色基调，见‘结果’<br>其他图像处理结果<br><img src="https://i.loli.net/2019/07/18/5d304377bd0c676784.jpg" alt></li></ol><p><img src="https://i.loli.net/2019/07/18/5d304377b0b2610307.jpg" alt><br>可以看到Fourier逆变换处理之后的图片为原图的灰度图片。</p><h2 id="对图像Fourier变换的意义分析"><a href="#对图像Fourier变换的意义分析" class="headerlink" title="对图像Fourier变换的意义分析"></a>对图像Fourier变换的意义分析</h2><p>对于一个图像，其频率是表征图像中灰度变化剧烈程度的指标，是灰度在平面空间的梯度。设f为一个能量有限的模拟信号，其傅里叶变换代表f的频谱。从纯粹的数学意义上来看，Fourier变换是将一个函数转换成一系列的周期函数来进行处理的。从物理角度来看，Fourier变换是将图像从空间域转换到频率域，逆变换是将图像从频率域转换到空间域。也就是说，Fourier变换是将图像的灰度分布函数变换成图像的频率分布函数。<strong>这里要注意是灰度分布函数</strong>,下面还会说到。</p><p>Fourie逆变换是将图像的频率分布函数转换成灰度分布函数(原始图像的灰度分布函数),图像的概念前边说过，用一个二维矩阵来表示空间上的各点，z=f(x,y)，但空间是三维的，因此空间上的物体在另一个维度上的关系必须由梯度来表示。</p><p>Fourier频谱图上的明暗点，意义是指图像上的某一点与邻域点差异的强弱，即梯度的大小。</p><p>对频谱移频到原点之后，可以看出图像的频率分布是以原点为圆心，对称分布的.</p><h2 id="DFT滤波"><a href="#DFT滤波" class="headerlink" title="DFT滤波"></a>DFT滤波</h2><h3 id="滤波步骤"><a href="#滤波步骤" class="headerlink" title="滤波步骤"></a>滤波步骤</h3><ol><li>用函数<code>tofloat</code>把输入图像转换成浮点图像<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span> revertclass<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">tofloat</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li>用函数<code>paddedsize</code>来获得填充参数<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> PQ <span class="token operator">=</span> <span class="token function">paddedsize</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li>得到有填充的Fourier变换<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> F <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li>生成大小为PQ(1)×PQ(2)的滤波函数H,函数类型要满足如下图所示,<br><img src="https://i.loli.net/2019/07/19/5d318dcf343b438405.jpg" alt><br>如果是类似这样的<br><img src="https://i.loli.net/2019/07/19/5d318dcf4915275796.jpg" alt>    <pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> H <span class="token operator">=</span> <span class="token function">lpfilter</span><span class="token punctuation">(</span><span class="token string">'gaussian'</span><span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>sig<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>在使用滤波器之前，要先<code>H = fftshift(H)</code></li><li>用滤波器乘以FFT变换<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> G <span class="token operator">=</span> H <span class="token operator">.*</span> F<span class="token punctuation">;</span></code></pre></li><li>获得G的逆Fourier变换<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> g <span class="token operator">=</span> <span class="token function">ifft2</span><span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li>修剪左上部矩形为原始大小<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> g <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li>把滤波后的图像变换为输入图像的类<pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> g <span class="token operator">=</span> <span class="token function">revertclass</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="Matlab实现"><a href="#Matlab实现" class="headerlink" title="Matlab实现"></a>Matlab实现</h3></li></ol><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>f <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%未填充的滤波</span><span class="token punctuation">[</span>M<span class="token punctuation">,</span>N<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span> revertclass<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">tofloat</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>F <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>sig <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>H <span class="token operator">=</span> <span class="token function">lpfilter</span><span class="token punctuation">(</span><span class="token string">'gaussian'</span><span class="token punctuation">,</span> M<span class="token punctuation">,</span> N<span class="token punctuation">,</span> sig<span class="token punctuation">)</span><span class="token punctuation">;</span>G <span class="token operator">=</span> H<span class="token operator">.*</span>F<span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">ifft2</span><span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">revertclass</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'未填充的滤波'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%已填充的滤波</span>PQ <span class="token operator">=</span> <span class="token function">paddedsize</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Fp <span class="token operator">=</span> <span class="token function">fft2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Hp <span class="token operator">=</span> <span class="token function">lpfilter</span><span class="token punctuation">(</span><span class="token string">'gaussian'</span><span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">PQ</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>sig<span class="token punctuation">)</span><span class="token punctuation">;</span>Gp <span class="token operator">=</span> Hp<span class="token operator">.*</span>Fp<span class="token punctuation">;</span>gp <span class="token operator">=</span> <span class="token function">ifft2</span><span class="token punctuation">(</span>Gp<span class="token punctuation">)</span><span class="token punctuation">;</span>gpc <span class="token operator">=</span> <span class="token function">gp</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">size</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gpc <span class="token operator">=</span> <span class="token function">revertclass</span><span class="token punctuation">(</span>gpc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>gpc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'已填充的滤波'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这里展示了不填充滤波和填充滤波的两种情况，结果<br><img src="https://i.loli.net/2019/07/19/5d318dcf1e88071166.jpg" alt><br>可以观察到未填充滤波处理后图像的垂直边缘未模糊</p><p>涉及到的函数    </p><ul><li>paddedsize函数</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> PQ <span class="token operator">=</span> <span class="token function">paddedsize</span><span class="token punctuation">(</span>AB<span class="token punctuation">,</span> CD<span class="token punctuation">,</span> PARAM<span class="token punctuation">)</span><span class="token keyword">if</span> nargin <span class="token operator">==</span> <span class="token number">1</span>PQ <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>AB<span class="token punctuation">;</span><span class="token keyword">elseif</span> nargin <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token function">ischar</span><span class="token punctuation">(</span>CD<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">%如果CD不为字符串</span>PQ <span class="token operator">=</span> AB <span class="token operator">+</span> CD <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>PQ <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span><span class="token function">ceil</span><span class="token punctuation">(</span>PQ <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">elseif</span> nargin <span class="token operator">==</span> <span class="token number">2</span> <span class="token comment" spellcheck="true">%如果CD处为字符串</span>m <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>AB<span class="token punctuation">)</span><span class="token punctuation">;</span>P <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">^</span><span class="token function">nextpow2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%取2的整数次幂</span>PQ <span class="token operator">=</span> <span class="token punctuation">[</span>P<span class="token punctuation">,</span> P<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">elseif</span> nargin <span class="token operator">==</span> <span class="token number">3</span>m <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">[</span>AB CD<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>P <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">^</span><span class="token function">nextpow2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>PQ <span class="token operator">=</span> <span class="token punctuation">[</span>P<span class="token punctuation">,</span> P<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'wrong number of inputs.'</span><span class="token punctuation">)</span><span class="token keyword">end</span></code></pre><ul><li>lpfilter函数</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span> H<span class="token punctuation">,</span> D <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">lpfilter</span><span class="token punctuation">(</span> type<span class="token punctuation">,</span>M<span class="token punctuation">,</span>N<span class="token punctuation">,</span>D0<span class="token punctuation">,</span>n <span class="token punctuation">)</span><span class="token comment" spellcheck="true">%LPFILTER creates the transfer function of a lowpass filter.</span><span class="token comment" spellcheck="true">%   Detailed explanation goes here</span><span class="token comment" spellcheck="true">%use function dftuv to set up the meshgrid arrays needed for computing</span><span class="token comment" spellcheck="true">%the required distances.</span><span class="token punctuation">[</span>U<span class="token punctuation">,</span> V<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">dftuv</span><span class="token punctuation">(</span>M<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%compute the distances D(U,V)</span>D <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>U<span class="token operator">.^</span><span class="token number">2</span> <span class="token operator">+</span> V<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">%begin filter computations</span><span class="token keyword">switch</span> type    <span class="token keyword">case</span> <span class="token string">'ideal'</span>        H <span class="token operator">=</span> <span class="token function">double</span><span class="token punctuation">(</span>D <span class="token operator">&lt;=</span> D0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'btw'</span>        <span class="token keyword">if</span> nargin <span class="token operator">==</span> <span class="token number">4</span>            n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>        H <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">./</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span>D<span class="token operator">./</span>D0<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'gaussian'</span>        H <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>D<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>D0<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">otherwise</span>        <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Unkown filter type'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span></code></pre><ul><li>dftuv函数</li></ul><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span> U<span class="token punctuation">,</span>V <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">dftuv</span><span class="token punctuation">(</span> M<span class="token punctuation">,</span> N <span class="token punctuation">)</span><span class="token comment" spellcheck="true">%DFTUV 实现频域滤波器的网格函数</span><span class="token comment" spellcheck="true">%   Detailed explanation goes here</span>u <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">:</span><span class="token punctuation">(</span>M <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">:</span><span class="token punctuation">(</span>N <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>idx <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>u <span class="token operator">></span> M<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%找大于M/2的数据</span><span class="token function">u</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">u</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span> <span class="token operator">-</span> M<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">%将大于M/2的数据减去M</span>idy <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>v <span class="token operator">></span> N<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">v</span><span class="token punctuation">(</span>idy<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">v</span><span class="token punctuation">(</span>idy<span class="token punctuation">)</span> <span class="token operator">-</span> N<span class="token punctuation">;</span><span class="token punctuation">[</span>V<span class="token punctuation">,</span> U<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>总结：</li></ul><ol><li>图像平滑之后，变得更柔和，但也会更模糊    </li><li>会出现的问题:图像的边缘部分往往也处于高频，会被滤除</li></ol>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>空间滤波</title>
      <link href="/2019/07/17/kong-jian-lu-bo/"/>
      <url>/2019/07/17/kong-jian-lu-bo/</url>
      
        <content type="html"><![CDATA[<h1 id="空间滤波基础"><a href="#空间滤波基础" class="headerlink" title="空间滤波基础"></a>空间滤波基础</h1><h2 id="滤波的原理："><a href="#滤波的原理：" class="headerlink" title="滤波的原理："></a>滤波的原理：</h2><p>空间滤波是采用滤波处理的图像增强的方法，理论基础是空间卷积和空间相关，目的是改善图片质量</p><h2 id="线性空间滤波"><a href="#线性空间滤波" class="headerlink" title="线性空间滤波"></a>线性空间滤波</h2><ul><li>移动滤波的模板w称为滤波器</li><li>相关 与 卷积：<br>相关是指模板w按下图所示的方式进行图像数组的处理。在原理上，卷积是相同的处理过程，只不过在w通过之前先将它选旋转180度<br><img src="https://i.loli.net/2019/07/16/5d2d9d9ea213761403.jpg" alt><br>相关与卷积操作说明<br><img src="https://i.loli.net/2019/07/16/5d2d9dffdbc4911045.jpg" alt><br>需要注意的地方：    </li></ul><ol><li>相关是滤波器位移的函数</li><li>滤波器w与一个只包含一个1其余全是0的函数相关，得到的是旋转了180度的滤波器w，将这个函数称之为<strong>离散单位冲激</strong><br>结论: 一个函数与离散单位冲激相关，在该冲激位置产生这个函数的一个翻转版本<br>一个函数与离散单位冲激相关激卷积，得到的是在该冲激处的这个函数的拷贝，这个复制的性质称为筛选<br>这种定义推广到图像如下图所示<br><img src="https://i.loli.net/2019/07/17/5d2e77c7afba429201.jpg" alt><br>为了便于表达，以公式形式总结两种形式</li></ol><ul><li>大小为m×n的滤波模板w(x,y)与函数f(x,y)的相关<pre><code>   ![](https://i.loli.net/2019/07/17/5d2e78e52323950837.jpg)</code></pre></li><li>大小为m×n的滤波模板w(x,y)与函数f(x,y)的卷积<br>$$w(x,y)\bigstar f(x,y)=\sum_{s=-a}^{a}\sum_{t=-b}^{b}w(s,t)f(x+s,y+t)$$</li></ul><ul><li><p>Matlab的实现:<br>工具箱使用imfilter来实现线性空间滤波，语法如下:</p><pre class=" language-matlab"><code class="language-matlab">g <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> w<span class="token punctuation">,</span> filtering_mode<span class="token punctuation">,</span> boundary_options<span class="token punctuation">,</span> size_options<span class="token punctuation">)</span></code></pre><p>默认值为相关，若想执行卷积操作，有以下两种做法：</p><pre class=" language-matlab"><code class="language-matlab">g <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'conv'</span><span class="token punctuation">)</span></code></pre><p>或者使用<code>rot90(w, 2)</code>来将w旋转180度</p><pre class=" language-matlab"><code class="language-matlab">g <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token function">rot90</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>f是输入图像，w为滤波模板，g为滤波结果<br>其他参数如下<br><img src="https://i.loli.net/2019/07/17/5d2e84e556ad615011.jpg" alt><br>使用matlab实现为</p><pre class=" language-matlab"><code class="language-matlab">f <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'filter.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>F <span class="token operator">=</span> <span class="token function">im2double</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'current image'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>w <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gd <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>F<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gd<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'Default'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gr <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>F<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'replicate'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gr<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'replicate'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gs <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>F<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'symmetric'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gs<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'symmetric'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gc <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>F<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'circular'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>gc<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'circular'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'replicate'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'replicate unit8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这里开始读取的filter.jpg为uint8格式，故在处理之前先使用<code>im2double</code>将其转化为double类型以提高精度<br>滤波结果如下<br><img src="https://i.loli.net/2019/07/17/5d2e8517ac67e80281.jpg" alt></p></li></ul><h2 id="非线性空间滤波："><a href="#非线性空间滤波：" class="headerlink" title="非线性空间滤波："></a>非线性空间滤波：</h2><p>线性空间滤波基于计算乘积和，即线性操作，非线性空间滤波基于涉及邻域像素内的非线性操作，例如，使每个中心点的响应等于邻域内像素最大值的操作可以称为是非线性滤波操作      </p><ul><li>Matlab工具</li></ul><ol><li>nlfilter：直接执行二维操作</li><li>coldilt：按列组织数据，更多采用</li></ol><h2 id="标准的-空间滤波器"><a href="#标准的-空间滤波器" class="headerlink" title="标准的 空间滤波器"></a>标准的 <strong>空间滤波器</strong></h2><h3 id="线性空间滤波器"><a href="#线性空间滤波器" class="headerlink" title="线性空间滤波器"></a>线性空间滤波器</h3><ul><li><p>可以使用fspecial实现，生成滤波器w</p><pre class=" language-matlab"><code class="language-matlab">  w <span class="token operator">=</span> <span class="token function">fspecial</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">,</span> parameters<span class="token punctuation">)</span></code></pre><p>  ‘type’表示滤波器的类型，’parameters’进一步定义指定的滤波器<br>  应用参数如下：<br>  <img src="https://i.loli.net/2019/07/17/5d2eba0f5055d41026.jpg" alt><br>  <img src="https://i.loli.net/2019/07/17/5d2ec9491164776894.jpg" alt></p></li><li><p>Laplace滤波器的实现</p><ul><li><p>原理：<br>图像f(x,y)的laplace算子：<br><img src="https://i.loli.net/2019/07/17/5d2ec90e6a75162149.jpg" alt><br>Laplace算子增强公式：<br>$$g(x,y) = f(x,y)+c[\triangledown ^2 f(x,y)]$$<br>注意：如果模板的中心系数为正，c为1;如果为负，c为0.</p><pre class=" language-matlab"><code class="language-matlab"><span class="token function">fspecial</span><span class="token punctuation">(</span><span class="token string">'laplacian'</span><span class="token punctuation">,</span> alpha<span class="token punctuation">)</span></code></pre><p>可以实现更为一般的laplace模板</p></li></ul><ul><li><p>下面是用laplace滤波器增强图像的例子：<br>首先设置滤波器</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> w <span class="token operator">=</span> <span class="token function">fspecial</span><span class="token punctuation">(</span><span class="token string">'laplacian'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://i.loli.net/2019/07/17/5d2ed6fcca83142276.jpg" alt></p><p>输入的图像为unit8类，</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> g1 <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'replicate'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">imshow</span><span class="token punctuation">(</span>g1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>得到结果，但存在问题，所有像素都是正的。原因：滤波器的中心参数为负值，为了解决这一问题，可以在滤波前将f转换为浮点数</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> ff <span class="token operator">=</span> <span class="token function">tofloat</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">></span> g2 <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>ff<span class="token punctuation">,</span> w<span class="token punctuation">,</span> <span class="token string">'replicate'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">imshow</span><span class="token punctuation">(</span>g2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这里tofloat为M-IPT函数，实现代码如下：</p><pre class=" language-matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>out<span class="token punctuation">,</span>revertclass<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">tofloat</span><span class="token punctuation">(</span>inputimage<span class="token punctuation">)</span><span class="token comment" spellcheck="true">%Copy the book of Gonzales</span>identify <span class="token operator">=</span> <span class="token operator">@</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> x<span class="token punctuation">;</span>tosingle <span class="token operator">=</span> <span class="token operator">@</span>im2single<span class="token punctuation">;</span>table <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'uint8'</span><span class="token punctuation">,</span>tosingle<span class="token punctuation">,</span><span class="token operator">@</span>im2uint8<span class="token string">'uint16'</span><span class="token punctuation">,</span>tosingle<span class="token punctuation">,</span><span class="token operator">@</span>im2uint16<span class="token string">'logical'</span><span class="token punctuation">,</span>tosingle<span class="token punctuation">,</span><span class="token operator">@</span>logical<span class="token string">'double'</span><span class="token punctuation">,</span>identify<span class="token punctuation">,</span>identify<span class="token string">'single'</span><span class="token punctuation">,</span>identify<span class="token punctuation">,</span>identify<span class="token punctuation">}</span><span class="token punctuation">;</span>classIndex <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span><span class="token function">class</span><span class="token punctuation">(</span>inputimage<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token function">isempty</span><span class="token punctuation">(</span>classIndex<span class="token punctuation">)</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'不支持的图像类型'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>out <span class="token operator">=</span> table<span class="token punctuation">{</span>classIndex<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">(</span>inputimage<span class="token punctuation">)</span><span class="token punctuation">;</span>revertclass <span class="token operator">=</span> table<span class="token punctuation">{</span>classIndex<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>导入workspace即可</p><p>最后用原始图像减去laplace图像来恢复失去的灰度层次(因为中心参数为负值)</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> g <span class="token operator">=</span> ff <span class="token operator">-</span> g2<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>可以看到结果比原图象要清晰<br><img src="https://i.loli.net/2019/07/17/5d2ed69eaa47174206.jpg" alt></p></li></ul></li></ul><h3 id="非线性空间滤波器"><a href="#非线性空间滤波器" class="headerlink" title="非线性空间滤波器"></a>非线性空间滤波器</h3><ul><li>函数ordfilt2计算统计排序(order-statistic filter)滤波器(也叫做rank filter,即排序滤波器)<br>语法为：</li></ul><pre class=" language-matlab"><code class="language-matlab">g <span class="token operator">=</span> <span class="token function">ordfilt2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> order<span class="token punctuation">,</span> domain<span class="token punctuation">)</span></code></pre><p>用邻域集合中的第order个元素去替换f中的每个元素的值来生成图像g，domain是由0和1组成的大小为m×n的矩阵，规定了在计算中使用的邻域中像素点的位置</p><ul><li>中值滤波器，最著名的统计排序滤波器，对应第50个百分位，对应奇数的m和n</li></ul><pre class=" language-matlab"><code class="language-matlab">g <span class="token operator">=</span> <span class="token function">ordfilt2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token punctuation">(</span>m<span class="token operator">*</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token function">ones</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>这里提供了一个专门的二维中值滤波器:</li></ul><pre class=" language-matlab"><code class="language-matlab">g <span class="token operator">=</span> <span class="token function">medfilt2</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token punctuation">[</span>m<span class="token punctuation">,</span> n<span class="token punctuation">]</span><span class="token punctuation">,</span> padopt<span class="token punctuation">)</span></code></pre><p>  padopt规定了三个可能的边缘填充选项:</p><ol><li>‘zeros’,默认值</li><li>‘symmetric’,f按照镜像反射方式对称地沿边缘扩展</li><li>‘indexed’，f属于double类，用1填充;否则用0填充</li></ol><ul><li><p>中值滤波增强图像:<br>首先给图像添加黑白噪点发生概率为0.2的’椒盐噪声’</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> fn <span class="token operator">=</span> <span class="token function">imnoise</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">'salt &amp; pepper'</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span></code></pre><p>对带噪图像进行中值滤波处理</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> gm <span class="token operator">=</span> <span class="token function">medfilt2</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span></code></pre><p>注意，在这里出现了错误，==A应为二维==<br><img src="https://i.loli.net/2019/07/17/5d2ed759e608448713.jpg" alt></p><p>原因:中值滤波medfilt2,输入的图像应为二维矩阵，实际输入的为imread读取的图像加上噪声，通常是三维RGB图，是三维矩阵<br>解决办法:先用rgb2gray(f)将图像转换为灰度矩阵图像</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> fn2 <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">></span> gm <span class="token operator">=</span> <span class="token function">medfilt2</span><span class="token punctuation">(</span>fn2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">></span><span class="token operator">></span> <span class="token function">imshow</span><span class="token punctuation">(</span>gm<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>减弱外圈黑点</p><pre class=" language-matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> gms <span class="token operator">=</span> <span class="token function">medfilt2</span><span class="token punctuation">(</span>fn2<span class="token punctuation">,</span> <span class="token string">'symmetric'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><p><img src="https://i.loli.net/2019/07/17/5d2ed7776b71a55041.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Digital Image Processing</title>
      <link href="/2019/07/15/digital-image-processing/"/>
      <url>/2019/07/15/digital-image-processing/</url>
      
        <content type="html"><![CDATA[<h2 id="Digital-Image-Processing-notes"><a href="#Digital-Image-Processing-notes" class="headerlink" title="Digital Image Processing notes:"></a>Digital Image Processing notes:</h2><ul><li><p>图像处理的步骤：</p><ol><li>图像获取 包括图像预处理</li><li>图像滤波与增强 使之适用于 <strong>特定应用</strong></li><li>图像复原 倾向于以图像退化的数学或概率模型为基础</li><li>彩色图像处理</li><li>压缩 减少图像存储量或降低传输图像带宽 </li><li>形态学处理</li><li>图像分割</li><li>目标识别<h3 id="数字图像基础"><a href="#数字图像基础" class="headerlink" title="数字图像基础"></a>数字图像基础</h3></li></ol></li><li><p>灰度概念<br>  灰度是表明图像明暗的数值，即黑白图像中点的颜色深度，范围一般是0-255,白色为255,黑色为0,归一化处理之后[0,1],0代表黑色，1代表白色。</p></li><li><p>图像取样与量化</p><ul><li>对坐标值数字化称为取样，对幅度值数字化称为量化</li></ul></li><li><p>数字的图像表示<br>  将连续图像取样表示为一个二维阵列 $f(x,y)$</p><ol><li>函数图表示：用x和y两个坐标轴来表示空间位置，第三个坐标为f(灰度)值，即 $f(x,y,z)$，</li><li>一般的表示：显示的是 $f(x,y)$在监视器或照片上的情况，每个点的灰度与该点处的f值成正比，例如归一化[0,1],三个等间隔点分别为0,0.5,1</li><li>矩阵： 将 $f(x,y)$的值打印成矩阵<br>注意坐标为右手笛卡尔系</li></ol></li><li><p>对比度： 最高和最低的灰度级的差</p></li><li><p>典型灰度级：<br>$$2^k$$<br>称为一副’k bit图像’</p></li><li><p>图像内插</p><ul><li>最邻近内插</li><li>双线性内插</li><li>双三次内插</li></ul></li><li><p>图像处理的算术操作</p><ul><li>图片相加  平均 -&gt; 降噪</li><li>图片相减  增强图像差别</li><li>图片想乘除  校正阴影</li></ul></li><li><p>灰度变换</p><ul><li>s = T(r)</li><li>Matlab中的灰度变换函数<br><code>imadjust(f,[LOW_IN,HIGH_IN],[LOW_OUT,HIGH_OUT],grmma)</code></li></ul></li><li><p>直方图的处理和函数绘图</p><ul><li><p>生成图像的直方图</p><pre class=" language-matlab"><code class="language-matlab">  <span class="token operator">></span><span class="token operator">></span> h <span class="token operator">=</span> <span class="token function">imhist</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span></code></pre></li><li><p>也可以用条形图来表示</p><pre class=" language-matlab"><code class="language-matlab">  <span class="token operator">></span><span class="token operator">></span> h <span class="token operator">=</span> <span class="token function">imhist</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">></span><span class="token operator">></span> horz <span class="token operator">=</span> <span class="token function">linespace</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">></span><span class="token operator">></span> <span class="token function">bar</span><span class="token punctuation">(</span>horz<span class="token punctuation">,</span>h<span class="token punctuation">)</span>  <span class="token operator">></span><span class="token operator">></span> <span class="token function">axis</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token number">255</span> <span class="token number">0</span> <span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">></span><span class="token operator">></span> <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span> <span class="token string">'xtick'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span><span class="token number">50</span><span class="token operator">:</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token operator">></span><span class="token operator">></span> <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span> <span class="token string">'ytick'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span><span class="token number">20000</span><span class="token operator">:</span><span class="token number">60000</span><span class="token punctuation">)</span></code></pre></li><li><p>杆状图<br><code>stem(horz, z , &#39;LineSpec&#39;, &#39;fill&#39;)</code></p></li><li><p>plot函数<br><code>plot(horz, z, &#39;LineSpec&#39;)</code></p></li><li><p>当处理函数句柄时<br><code>fplot(fhandle, limits, &#39;LineSpec&#39;)</code></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Digital Image Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像处理 </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My plan</title>
      <link href="/2019/07/05/my-plan/"/>
      <url>/2019/07/05/my-plan/</url>
      
        <content type="html"><![CDATA[<h1 id="写一下近期要做的事情："><a href="#写一下近期要做的事情：" class="headerlink" title="写一下近期要做的事情："></a>写一下近期要做的事情：</h1><ul><li><p>整理一下之前做过的项目</p></li><li><p>写一下manjaro+i3wm配置相关的教程，其中包括：</p></li></ul><p><img src="https://github.com/liuyaanng/.config/raw/master/config.png" alt="config"></p><ul><li><p><strong>配置vim</strong></p></li><li><p>从零开始的narkdown教程</p></li><li><p>Python单排系列</p></li><li><p>人工智能笔记</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> plan </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
